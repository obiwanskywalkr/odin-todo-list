"use strict";(self.webpackChunkodin_todo_list=self.webpackChunkodin_todo_list||[]).push([[826],{426:(n,e,t)=>{t.d(e,{Z:()=>C});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),A=t(667),s=t.n(A),d=new URL(t(656),t.b),c=new URL(t(62),t.b),l=i()(o()),m=s()(d),u=s()(c);l.push([n.id,"@font-face {\n    font-family: 'Roboto';\n    src: url("+m+") format('ttf');\n    font-weight: 400;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url("+u+") format('ttf');\n    font-weight: 700;\n    font-style: normal;\n}\n\n:root {\n    --primary-dark: #1f2937;\n    --primary-light: #f9fafb;\n    --accent-secondary: #e5e7eb;\n    --accent-main: #0ea5e9;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    outline: none;\n    font-family: 'Roboto', sans-serif;\n    font-size: clamp(1rem, calc(0.5rem + 0.5vw), 1.75rem);\n    color: var(--primary-dark);\n}\n\nbody {\n    background-color: var(--primary-light);\n}\n\nh1 {\n    font-size: 3rem;\n    font-weight: 700;\n}\n\nh2 {\n    font-size: 2.5rem;\n    font-weight: 700;\n}\n\nh4 {\n    font-size: 1.5rem;\n    font-weight: 700;\n}\n\nheader {\n    cursor: default;\n    height: 1.5rem;\n    border-bottom: 2px solid var(--accent-secondary);\n    padding: 2rem 3rem;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\nfooter {\n    height: 2rem;\n    border-top: 2px solid var(--accent-secondary);\n    padding: 0.5rem 0 0.5rem 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 3rem;\n}\n\n\n/* Body styling */\n#main {\n    display: grid;\n    grid-template-columns: .25fr 2fr;\n}\n\n#sidebar {\n    height: auto;\n    max-height: 820px;\n    width: 13rem;\n    padding: 2rem;\n    border-right: 2px solid var(--accent-secondary);\n    grid-column: 1 / 2;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 2.5rem;\n}\n\n#navLists,\n#userLists,\n#listContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1.25rem;\n}\n\n.listBox {\n    cursor: pointer;\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    justify-content: space-between;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n#content {\n    padding: 2rem 7rem;\n    grid-column: 2 / 3;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 2rem;\n}\n\n.borderButton {\n    cursor: pointer;\n    height: 3rem;\n    width: max-content;\n    border: none;\n    border-radius: 1rem;\n    padding: 0 1.5rem;\n    background-color: var(--accent-main);\n    font-size: 1rem;\n    transition: .25s;\n}\n\n.textButton {\n    cursor: pointer;\n    height: 2rem;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: 1.25rem;\n    transition: .25s;\n}\n\n.imageButton {\n    height: 1.5rem;\n    width: 1.5rem;\n    transition: .25s;\n}\n\n.borderButton:hover,\n.textButton:hover {\n    transform: scale(1.05);\n}\n\n.imageButton:hover {\n    transform: scale(1.25);\n}\n\n.delete {\n    color: #dc2626;\n    font-size: 1rem;\n}\n\n.submit {\n    font-size: 1rem;\n}\n\n.linkBox {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: .75rem;\n}\n\n#githubIconContainer {\n    transition: .25s;\n}\n\n#githubIconContainer:hover {\n    transform: scale(1.2);\n}\n\n\n/* TodoCard styling */\n#todoCardContainer,\n#listCardContainer {\n    max-width: 25rem;\n    min-height: 675px;\n    border: 2px solid var(--accent-secondary);\n    border-radius: 1rem;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n#todoHeader {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n#menuContainer {\n    cursor: pointer;\n    position: relative;\n    float: right;\n}\n\n#menuBox {\n    position: absolute;\n    z-index: 1;\n    right: 0;\n    width: max-content;\n    padding: .75rem;\n    border: 2px solid var(--accent-secondary);\n    border-radius: .5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#clearCompleted {\n    cursor: pointer;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: .9rem;\n}\n\n#clearCompleted:hover {\n    transform: scale(1.05);\n}\n\n.hidden {\n    visibility: hidden;\n}\n\n.listInfo {\n    max-width: 20rem;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: 2.5rem;\n    font-weight: 700;\n}\n\n#listDescription {\n    font-size: 1.5rem;\n}\n\n.buttonContainer {\n    margin-top: auto;\n    width: 25rem;\n    display: flex;\n    justify-content: center;\n    gap: 4rem;\n}\n\n#taskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n.taskBox {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.checkbox {\n    -webkit-appearance: none;\n    appearance: none;\n    cursor: pointer;\n    height: 1.2rem;\n    width: 1.2rem;\n    border: 1px solid var(--primary-dark);\n    border-radius: 5px;\n    background-color: var(--primary-light);\n    transform: translateY(-0.075rem);\n    display: grid;\n    place-content: center;\n}\n\n.checkbox::after {\n    content: \"\";\n    height: 0.65rem;\n    width: 0.65rem;\n    transform: scale(0);\n    transform-origin: bottom left;\n    transition: 120ms ease-in-out;\n    box-shadow: inset 1rem 1rem var(--primary-dark);\n    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);\n}\n\n.checkbox:checked::after {\n    transform: scale(1);\n}\n\n.smaller {\n    width: 1rem;\n    height: 1rem;\n}\n\n.taskText {\n    width: 20rem;\n    overflow: hidden;\n    font-size: 1.25rem;\n    transition: .25s;\n}\n\n.taskText:hover {\n    transform: scale(1.015);\n}\n\n.message {\n    margin-top: 225px;\n    align-self: center;\n    font-size: 1.5rem;\n    font-weight: 300;\n}\n\n@keyframes completed {\n    from { text-decoration-color: transparent; }\n    to { text-decoration-color: auto; }\n}\n  .completed {  \n    text-decoration: line-through;\n    animation: completed .5s normal;\n  }\n\n#quickAddBar {\n    margin-top: auto;\n    display: flex;\n}\n\n#quickAddTask {\n    height: 3.15rem;\n    width: 18rem;\n    border: 0.5px solid var(--accent-secondary);\n    border-top-left-radius: 1rem;\n    border-bottom-left-radius: 1rem;\n    padding: 0 1rem;\n    font-size: .75rem;\n}\n\n#submitQuickAdd {\n    cursor: pointer;\n    height: 3.2rem;\n    width: 5rem;\n    border: none;\n    border-top-right-radius: 1rem;\n    border-bottom-right-radius: 1rem;\n    background-color: var(--accent-main);\n    font-size: .75rem;\n    transition: .25s;\n}\n\n#submitQuickAdd:hover {\n    transform: scale(1.05);\n}\n\n\n/* EditorCard styling */\n#editorCardContainer {\n    cursor: default;\n    max-width: 25rem;\n    min-height: 675px;\n    border: 2px solid var(--accent-secondary);\n    border-radius: 1rem;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n#editorForm {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n#currentTask {\n    max-width: 20rem;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: 1.5rem;\n    font-weight: 700;\n}\n\n#priorityContainer {\n    display: flex;\n    gap: 2.5rem;\n}\n\n.priority {\n    cursor: pointer;\n    height: 2.5rem;\n    width: 5rem;\n    border: none;\n    border-radius: 5rem;\n    font-size: 0.8rem;\n    transition: .25s;\n}\n\n.priority:hover {\n    transform: scale(1.2);\n}\n\n.clicked {\n    transform: scale(1.2);\n}\n\n.critical {\n    background-color: #fda4af;\n}\n\n.important {\n    background-color: #fcd34d;\n}\n\n.low {\n    background-color: #6ee7b7 ;\n}\n\n.editOption {\n    display: flex;\n    flex-direction: column;\n    gap: 0.25rem;\n}\n\n#dueDate,\n#listDropdown {\n    cursor: pointer;\n    height: 2rem;\n    width: 12.5rem;\n    border: 1px solid var(--primary-dark);\n    border-radius: 0.35rem;\n    padding-inline: .5rem;\n    background-color: var(--primary-light);\n    font-size: 0.85rem;\n    transition: .25s;\n}\n\n#dueDate:hover,\n#listDropdown:hover {\n    transform: scale(1.015);\n}\n\n#subtaskContainer {\n    margin-top: .25rem;\n    display: flex;\n    flex-direction: column;\n    gap: .25rem;\n}\n\n#createSubtaskButton {\n    margin: 0 0 0 1rem;\n    font-size: 1rem;\n    align-self: flex-start;\n}\n\n.subtaskBox {\n    cursor: pointer;\n    margin-left: 1rem;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n.subtaskText {\n    width: 15rem;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: 1rem;\n}\n\n#notes {\n    height: 5rem;\n    width: 20rem;\n    border: 1px solid var(--primary-dark);\n    border-radius: 0.35rem;\n    padding: 0.5rem;\n    background-color: var(--primary-light);\n    resize: none;\n    transition: .25s;\n}\n\n#notes:hover {\n    transform: scale(1.01) ;\n}\n\n#deleteTask:hover,\n#submitTask:hover {\n    transform: scale(1.1);\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@font-face {\n    font-family: 'Roboto';\n    src: url('./font/Roboto-Regular.ttf') format('ttf');\n    font-weight: 400;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('./font/Roboto-Bold.ttf') format('ttf');\n    font-weight: 700;\n    font-style: normal;\n}\n\n:root {\n    --primary-dark: #1f2937;\n    --primary-light: #f9fafb;\n    --accent-secondary: #e5e7eb;\n    --accent-main: #0ea5e9;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    outline: none;\n    font-family: 'Roboto', sans-serif;\n    font-size: clamp(1rem, calc(0.5rem + 0.5vw), 1.75rem);\n    color: var(--primary-dark);\n}\n\nbody {\n    background-color: var(--primary-light);\n}\n\nh1 {\n    font-size: 3rem;\n    font-weight: 700;\n}\n\nh2 {\n    font-size: 2.5rem;\n    font-weight: 700;\n}\n\nh4 {\n    font-size: 1.5rem;\n    font-weight: 700;\n}\n\nheader {\n    cursor: default;\n    height: 1.5rem;\n    border-bottom: 2px solid var(--accent-secondary);\n    padding: 2rem 3rem;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\nfooter {\n    height: 2rem;\n    border-top: 2px solid var(--accent-secondary);\n    padding: 0.5rem 0 0.5rem 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 3rem;\n}\n\n\n/* Body styling */\n#main {\n    display: grid;\n    grid-template-columns: .25fr 2fr;\n}\n\n#sidebar {\n    height: auto;\n    max-height: 820px;\n    width: 13rem;\n    padding: 2rem;\n    border-right: 2px solid var(--accent-secondary);\n    grid-column: 1 / 2;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 2.5rem;\n}\n\n#navLists,\n#userLists,\n#listContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1.25rem;\n}\n\n.listBox {\n    cursor: pointer;\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    justify-content: space-between;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n#content {\n    padding: 2rem 7rem;\n    grid-column: 2 / 3;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 2rem;\n}\n\n.borderButton {\n    cursor: pointer;\n    height: 3rem;\n    width: max-content;\n    border: none;\n    border-radius: 1rem;\n    padding: 0 1.5rem;\n    background-color: var(--accent-main);\n    font-size: 1rem;\n    transition: .25s;\n}\n\n.textButton {\n    cursor: pointer;\n    height: 2rem;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: 1.25rem;\n    transition: .25s;\n}\n\n.imageButton {\n    height: 1.5rem;\n    width: 1.5rem;\n    transition: .25s;\n}\n\n.borderButton:hover,\n.textButton:hover {\n    transform: scale(1.05);\n}\n\n.imageButton:hover {\n    transform: scale(1.25);\n}\n\n.delete {\n    color: #dc2626;\n    font-size: 1rem;\n}\n\n.submit {\n    font-size: 1rem;\n}\n\n.linkBox {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: .75rem;\n}\n\n#githubIconContainer {\n    transition: .25s;\n}\n\n#githubIconContainer:hover {\n    transform: scale(1.2);\n}\n\n\n/* TodoCard styling */\n#todoCardContainer,\n#listCardContainer {\n    max-width: 25rem;\n    min-height: 675px;\n    border: 2px solid var(--accent-secondary);\n    border-radius: 1rem;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n#todoHeader {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n#menuContainer {\n    cursor: pointer;\n    position: relative;\n    float: right;\n}\n\n#menuBox {\n    position: absolute;\n    z-index: 1;\n    right: 0;\n    width: max-content;\n    padding: .75rem;\n    border: 2px solid var(--accent-secondary);\n    border-radius: .5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#clearCompleted {\n    cursor: pointer;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: .9rem;\n}\n\n#clearCompleted:hover {\n    transform: scale(1.05);\n}\n\n.hidden {\n    visibility: hidden;\n}\n\n.listInfo {\n    max-width: 20rem;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: 2.5rem;\n    font-weight: 700;\n}\n\n#listDescription {\n    font-size: 1.5rem;\n}\n\n.buttonContainer {\n    margin-top: auto;\n    width: 25rem;\n    display: flex;\n    justify-content: center;\n    gap: 4rem;\n}\n\n#taskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n.taskBox {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.checkbox {\n    -webkit-appearance: none;\n    appearance: none;\n    cursor: pointer;\n    height: 1.2rem;\n    width: 1.2rem;\n    border: 1px solid var(--primary-dark);\n    border-radius: 5px;\n    background-color: var(--primary-light);\n    transform: translateY(-0.075rem);\n    display: grid;\n    place-content: center;\n}\n\n.checkbox::after {\n    content: \"\";\n    height: 0.65rem;\n    width: 0.65rem;\n    transform: scale(0);\n    transform-origin: bottom left;\n    transition: 120ms ease-in-out;\n    box-shadow: inset 1rem 1rem var(--primary-dark);\n    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);\n}\n\n.checkbox:checked::after {\n    transform: scale(1);\n}\n\n.smaller {\n    width: 1rem;\n    height: 1rem;\n}\n\n.taskText {\n    width: 20rem;\n    overflow: hidden;\n    font-size: 1.25rem;\n    transition: .25s;\n}\n\n.taskText:hover {\n    transform: scale(1.015);\n}\n\n.message {\n    margin-top: 225px;\n    align-self: center;\n    font-size: 1.5rem;\n    font-weight: 300;\n}\n\n@keyframes completed {\n    from { text-decoration-color: transparent; }\n    to { text-decoration-color: auto; }\n}\n  .completed {  \n    text-decoration: line-through;\n    animation: completed .5s normal;\n  }\n\n#quickAddBar {\n    margin-top: auto;\n    display: flex;\n}\n\n#quickAddTask {\n    height: 3.15rem;\n    width: 18rem;\n    border: 0.5px solid var(--accent-secondary);\n    border-top-left-radius: 1rem;\n    border-bottom-left-radius: 1rem;\n    padding: 0 1rem;\n    font-size: .75rem;\n}\n\n#submitQuickAdd {\n    cursor: pointer;\n    height: 3.2rem;\n    width: 5rem;\n    border: none;\n    border-top-right-radius: 1rem;\n    border-bottom-right-radius: 1rem;\n    background-color: var(--accent-main);\n    font-size: .75rem;\n    transition: .25s;\n}\n\n#submitQuickAdd:hover {\n    transform: scale(1.05);\n}\n\n\n/* EditorCard styling */\n#editorCardContainer {\n    cursor: default;\n    max-width: 25rem;\n    min-height: 675px;\n    border: 2px solid var(--accent-secondary);\n    border-radius: 1rem;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n#editorForm {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n#currentTask {\n    max-width: 20rem;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: 1.5rem;\n    font-weight: 700;\n}\n\n#priorityContainer {\n    display: flex;\n    gap: 2.5rem;\n}\n\n.priority {\n    cursor: pointer;\n    height: 2.5rem;\n    width: 5rem;\n    border: none;\n    border-radius: 5rem;\n    font-size: 0.8rem;\n    transition: .25s;\n}\n\n.priority:hover {\n    transform: scale(1.2);\n}\n\n.clicked {\n    transform: scale(1.2);\n}\n\n.critical {\n    background-color: #fda4af;\n}\n\n.important {\n    background-color: #fcd34d;\n}\n\n.low {\n    background-color: #6ee7b7 ;\n}\n\n.editOption {\n    display: flex;\n    flex-direction: column;\n    gap: 0.25rem;\n}\n\n#dueDate,\n#listDropdown {\n    cursor: pointer;\n    height: 2rem;\n    width: 12.5rem;\n    border: 1px solid var(--primary-dark);\n    border-radius: 0.35rem;\n    padding-inline: .5rem;\n    background-color: var(--primary-light);\n    font-size: 0.85rem;\n    transition: .25s;\n}\n\n#dueDate:hover,\n#listDropdown:hover {\n    transform: scale(1.015);\n}\n\n#subtaskContainer {\n    margin-top: .25rem;\n    display: flex;\n    flex-direction: column;\n    gap: .25rem;\n}\n\n#createSubtaskButton {\n    margin: 0 0 0 1rem;\n    font-size: 1rem;\n    align-self: flex-start;\n}\n\n.subtaskBox {\n    cursor: pointer;\n    margin-left: 1rem;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n.subtaskText {\n    width: 15rem;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: 1rem;\n}\n\n#notes {\n    height: 5rem;\n    width: 20rem;\n    border: 1px solid var(--primary-dark);\n    border-radius: 0.35rem;\n    padding: 0.5rem;\n    background-color: var(--primary-light);\n    resize: none;\n    transition: .25s;\n}\n\n#notes:hover {\n    transform: scale(1.01) ;\n}\n\n#deleteTask:hover,\n#submitTask:hover {\n    transform: scale(1.1);\n}"],sourceRoot:""}]);const C=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);r&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],d=r.base?s[0]+r.base:s[0],c=a[d]||0,l="".concat(d," ").concat(c);a[d]=c+1;var m=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)e[m].references++,e[m].updater(u);else{var C=o(u,r);r.byIndex=A,e.splice(A,0,{identifier:l,updater:C,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var s=r(n,o),d=0;d<a.length;d++){var c=t(a[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},605:(n,e,t)=>{var r=t(379),o=t.n(r),a=t(795),i=t.n(a),A=t(569),s=t.n(A),d=t(565),c=t.n(d),l=t(216),m=t.n(l),u=t(589),C=t.n(u),p=t(426),B={};B.styleTagTransform=C(),B.setAttributes=c(),B.insert=s().bind(null,"head"),B.domAPI=i(),B.insertStyleElement=m(),o()(p.Z,B),p.Z&&p.Z.locals&&p.Z.locals;const g=t.p+"26269cc7039cf66cc330.png",f=t.p+"0035c307a36c17babb8d.png",I=t.p+"fadee1a4bd2ae96656b5.png",h=t.p+"f099a57596aa547ba1cc.png";let y;y=void 0===v()?[{title:"Test list",description:"foobar",tasks:[{title:"Test task",priority:"critical",dueDate:"2022-10-22T16:20",list:"Test list",subtasks:[{title:"foo",completed:!0,subtask:1}],notes:"bar",completed:!1,taskID:1}],listID:1}]:v();const b=[];function k(){localStorage.clear();const n=JSON.stringify(y);localStorage.setItem("userLists",n)}function v(){if(null!==localStorage.getItem("userLists"))return JSON.parse(localStorage.getItem("userLists"))}const E=()=>{const n=t=>{const r=document.getElementById("listContainer");r.innerHTML="",t.forEach((a=>{const i=document.getElementById("list-template"),A=document.importNode(i.content,!0);r.appendChild(A);const s=Array.from(document.querySelectorAll("[data-list]")),d=Array.from(document.querySelectorAll("[data-delete]")),c=t.indexOf(a);s[c].textContent=a.title,s[c].dataset.list=a.listID,s[c].addEventListener("click",(()=>{G().renderUserList(a)})),d[c].src=h,d[c].addEventListener("click",(()=>{e(t,a),o(t),n(t)}))}))},e=(n,e)=>{const t=n.indexOf(e);n.splice(t,1),k()},t=()=>document.getElementById("listTitle").value,r=()=>document.getElementById("listDescription").value,o=n=>{let e=1;n.forEach((n=>{n.listID=e,e++}))};return{display:n,handleForm:n=>{const e=n.length+1,o=((n,e,t,r)=>({title:n,description:e,tasks:[],listID:r}))(t(),r(),0,e);return n.push(o),k(),o},updateTitle:n=>{const e=t();""!==e&&(n.title=e,k())},updateDescription:n=>{const e=r();""!==e&&(n.description=e,k())},getActiveList:()=>{const n=document.getElementById("listTitle").value;return y.find((({title:e})=>e===n))}}},x=()=>{const n=n=>{const e=t();n.title=e;const i=r();n.priority=i;const A=o();n.dueDate=A;const d=a();n.list=d;const c=s();n.notes=c,_().display(b),k()},e=n=>{if("All tasks"===document.getElementById("listTitle").value){if("All tasks"===n.list)_().handleDelete(b,n);else{const e=y.find((({title:e})=>e===n.list));_().handleDelete(e.tasks,n)}_().resetIDs(b),_().display(b)}else{const e=E().getActiveList();_().handleDelete(e.tasks,n),_().resetIDs(e),_().resetIDs(b),_().display(e.tasks)}content.removeChild(editorCardContainer),k()},t=()=>{const n=document.getElementById("currentTask");return""===n.value?n.placeholder:n.value},r=()=>{const n=Array.from(document.querySelectorAll("[data-priority]")).find((({classList:n})=>n.contains("clicked")));if(void 0!==n)return n.dataset.priority},o=()=>document.getElementById("dueDate").value,a=()=>document.getElementById("listDropdown").value,i=()=>{const n=Array.from(document.querySelectorAll("[data-subtask]")),e=[];return n.forEach((n=>{const t={title:n.value,completed:!1,taskID:1};e.push(t)})),e},A=n=>{!0===n.completed?n.completed=!1:n.completed=!0,k()},s=()=>document.getElementById("notes").value;return{displayTask:t=>{G().initEditorClone(),editorCardContainer.contains(document.getElementById("submitTask"))&&((e=>{const t=editorCardContainer.querySelector(".buttonContainer");t.removeChild(submitTask);const r=document.createElement("button");r.id="updateTask",r.classList.add("textButton","submit"),r.textContent="Update Task",t.append(r),r.addEventListener("click",(()=>{n(e),document.getElementById("editorCardContainer").remove()}))})(t),(n=>{const t=editorCardContainer.querySelector(".buttonContainer");t.removeChild(cancelEditor);const r=document.createElement("button");r.id="deleteTask",r.classList.add("textButton","delete"),r.textContent="Delete Task",t.prepend(r),r.addEventListener("click",(()=>{e(n)}))})(t)),(n=>{""!==n.title&&(document.getElementById("currentTask").value=n.title)})(t),(n=>{if(""===n.priority)return;Array.from(document.querySelectorAll("[data-priority]")).forEach((n=>{n.classList.remove("clicked")}));const e=n.priority;""!==e&&("critical"===e?document.querySelector('[data-priority="critical"]').classList.add("clicked"):"important"===e?document.querySelector('[data-priority="important"]').classList.add("clicked"):"low"===e&&document.querySelector('[data-priority="low"]').classList.add("clicked"))})(t),(n=>{""!==n.dueDate&&(document.getElementById("dueDate").value=n.dueDate)})(t),(n=>{""!==n.list&&(document.getElementById("listDropdown").value=n.list)})(t),(n=>{if(""===n.subtasks)return;const e=document.getElementById("subtaskContainer"),t=n.subtasks;e.innerHTML="",t.forEach((n=>{const r=document.getElementById("subtask-template"),o=document.importNode(r.content,!0);e.appendChild(o);const a=Array.from(document.querySelectorAll("[data-subtask]")),i=Array.from(document.querySelectorAll("[data-check")),s=t.indexOf(n);!0===n.completed&&(i[s].checked=!0),a[s].value=n.title,i[s].addEventListener("click",(()=>{A(n)}))}))})(t),(n=>{""!==n.notes&&(document.getElementById("notes").value=n.notes)})(t),G().setPlaceholder(currentTask),currentTask.blur()},handleForm:()=>{const n=a();let e;if("All tasks"===n){const n=b.length+1;e=$(t(),r(),o(),a(),i(),s(),!1,n),b.push(e),G().renderNavOption("All tasks"),_().display(b)}else{const A=b.length+1;e=$(t(),r(),o(),a(),i(),s(),!1,A);const d=y.find((({title:e})=>e===n));d.tasks.push(e),b.push(e),G().renderUserList(d)}return k(),e},getTargetList:a,handleSubtask:n=>{const e=document.getElementById("subtaskContainer"),t=document.getElementById("subtask-template"),r=document.importNode(t.content,!0);let o;e.appendChild(r),Array.from(document.querySelectorAll("[data-subtask]")),o=void 0===n?0:n.subtasks.length},initListDropdown:n=>{listDropdown.innerHTML="";const e=document.createElement("option");e.value="All tasks",e.textContent="All tasks",listDropdown.appendChild(e),n.forEach((n=>{const e=document.createElement("option");e.value=n.title,e.textContent=n.title,listDropdown.appendChild(e)}))}}};function w(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function D(n){w(1,arguments);var e=Object.prototype.toString.call(n);return n instanceof Date||"object"==typeof n&&"[object Date]"===e?new Date(n.getTime()):"number"==typeof n||"[object Number]"===e?new Date(n):("string"!=typeof n&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}Math.pow(10,8);var T=36e5;function L(n){if(null===n||!0===n||!1===n)return NaN;var e=Number(n);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}function S(n,e){w(1,arguments);var t=e||{},r=null==t.additionalDigits?2:L(t.additionalDigits);if(2!==r&&1!==r&&0!==r)throw new RangeError("additionalDigits must be 0, 1 or 2");if("string"!=typeof n&&"[object String]"!==Object.prototype.toString.call(n))return new Date(NaN);var o,a=j(n);if(a.date){var i=Z(a.date,r);o=U(i.restDateString,i.year)}if(!o||isNaN(o.getTime()))return new Date(NaN);var A,s=o.getTime(),d=0;if(a.time&&(d=M(a.time),isNaN(d)))return new Date(NaN);if(!a.timezone){var c=new Date(s+d),l=new Date(0);return l.setFullYear(c.getUTCFullYear(),c.getUTCMonth(),c.getUTCDate()),l.setHours(c.getUTCHours(),c.getUTCMinutes(),c.getUTCSeconds(),c.getUTCMilliseconds()),l}return A=R(a.timezone),isNaN(A)?new Date(NaN):new Date(s+d+A)}var Y={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},z=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,q=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,N=/^([+-])(\d{2})(?::?(\d{2}))?$/;function j(n){var e,t={},r=n.split(Y.dateTimeDelimiter);if(r.length>2)return t;if(/:/.test(r[0])?e=r[0]:(t.date=r[0],e=r[1],Y.timeZoneDelimiter.test(t.date)&&(t.date=n.split(Y.timeZoneDelimiter)[0],e=n.substr(t.date.length,n.length))),e){var o=Y.timezone.exec(e);o?(t.time=e.replace(o[1],""),t.timezone=o[1]):t.time=e}return t}function Z(n,e){var t=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+e)+"})|(\\d{2}|[+-]\\d{"+(2+e)+"})$)"),r=n.match(t);if(!r)return{year:NaN,restDateString:""};var o=r[1]?parseInt(r[1]):null,a=r[2]?parseInt(r[2]):null;return{year:null===a?o:100*a,restDateString:n.slice((r[1]||r[2]).length)}}function U(n,e){if(null===e)return new Date(NaN);var t=n.match(z);if(!t)return new Date(NaN);var r=!!t[4],o=O(t[1]),a=O(t[2])-1,i=O(t[3]),A=O(t[4]),s=O(t[5])-1;if(r)return function(n,e,t){return e>=1&&e<=53&&t>=0&&t<=6}(0,A,s)?function(n,e,t){var r=new Date(0);r.setUTCFullYear(n,0,4);var o=7*(e-1)+t+1-(r.getUTCDay()||7);return r.setUTCDate(r.getUTCDate()+o),r}(e,A,s):new Date(NaN);var d=new Date(0);return function(n,e,t){return e>=0&&e<=11&&t>=1&&t<=(F[e]||(Q(n)?29:28))}(e,a,i)&&function(n,e){return e>=1&&e<=(Q(n)?366:365)}(e,o)?(d.setUTCFullYear(e,a,Math.max(o,i)),d):new Date(NaN)}function O(n){return n?parseInt(n):1}function M(n){var e=n.match(q);if(!e)return NaN;var t=W(e[1]),r=W(e[2]),o=W(e[3]);return function(n,e,t){return 24===n?0===e&&0===t:t>=0&&t<60&&e>=0&&e<60&&n>=0&&n<25}(t,r,o)?t*T+6e4*r+1e3*o:NaN}function W(n){return n&&parseFloat(n.replace(",","."))||0}function R(n){if("Z"===n)return 0;var e=n.match(N);if(!e)return 0;var t="+"===e[1]?-1:1,r=parseInt(e[2]),o=e[3]&&parseInt(e[3])||0;return function(n,e){return e>=0&&e<=59}(0,o)?t*(r*T+6e4*o):NaN}var F=[31,null,31,30,31,30,31,31,30,31,30,31];function Q(n){return n%400==0||n%4==0&&n%100!=0}function H(n,e){w(2,arguments);var t=D(n),r=D(e);return t.getTime()<r.getTime()}function P(n,e){w(1,arguments);var t=e||{},r=t.locale,o=r&&r.options&&r.options.weekStartsOn,a=null==o?0:L(o),i=null==t.weekStartsOn?a:L(t.weekStartsOn);if(!(i>=0&&i<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var A=D(n),s=A.getDay(),d=6+(s<i?-7:0)-(s-i);return A.setDate(A.getDate()+d),A.setHours(23,59,59,999),A}const $=(n,e,t,r,o,a,i,A)=>({title:n,priority:e,dueDate:t,list:r,subtasks:o,notes:a,completed:i,taskID:A}),_=()=>{const n=n=>{const t=document.getElementById("taskContainer");t.innerHTML="",n.forEach((r=>{const o=document.getElementById("task-template"),a=document.importNode(o.content,!0);t.appendChild(a);const i=Array.from(document.querySelectorAll("[data-task]")),A=Array.from(document.querySelectorAll("[data-complete")),s=n.indexOf(r);i[s].textContent=r.title,i[s].dataset.task=r.taskID,!0===r.completed&&(i[s].classList.add("completed"),A[s].checked=!0),i[s].addEventListener("click",(()=>{x().displayTask(r)})),A[s].addEventListener("click",(()=>{e(r,i[s])}))}))},e=(n,e)=>{!0===n.completed?(n.completed=!1,e.classList.remove("completed")):(n.completed=!0,e.classList.add("completed")),k()};return{display:n,handleQuickAdd:e=>{const t=document.getElementById("quickAddTask").value;let r,o;if(r=void 0===e.length?e.tasks.length+1:e.length+1,void 0===E().getActiveList())o=$(t,"","","",[],"","",r);else{const n=E().getActiveList().title;o=$(t,"","",n,[],"","",r)}void 0===e.tasks?(b.push(o),quickAddTask.value="",G().renderNavOption("All tasks"),n(e)):(e.tasks.push(o),b.push(o),quickAddTask.value="",n(e.tasks)),k()},handleDelete:(n,e)=>{const t=n.indexOf(e),r=b.find((({title:n})=>n===e.title)),o=b.indexOf(r);n.splice(t,1),b.splice(o,1),k()},getActiveTask:n=>{const e=document.getElementById("currentTask").placeholder;return n.find((({title:n})=>n===e))},getAllTasks:n=>{n.forEach((n=>{const e=n.tasks.values();for(const n of e)b.push(n)}))},getTodayTasks:n=>{let e=[];for(let t=0;t<n.length;t++){const r=function(n){w(1,arguments);var e=D(n);return e.setHours(23,59,59,999),e}(Date.now());H(S(n[t].dueDate),r)&&e.push(n[t])}return e},getWeekTasks:n=>{const e=new Date;let t=[];for(let r=0;r<n.length;r++){const o=P(e);H(S(n[r].dueDate),o)&&t.push(n[r])}return t},clearCompleted:n=>{n.forEach((e=>{if(!0===e.completed){const t=n.indexOf(e);n.splice(t,1)}})),k()},resetIDs:n=>{if(void 0===n.tasks){let e=1;n.forEach((n=>{n.taskID=e,e++}))}else{let e=1;n.tasks.forEach((n=>{n.taskID=e,e++}))}}}},G=()=>{const n=()=>{content.contains(document.getElementById("listCardContainer"))&&document.getElementById("listCardContainer").remove(),content.contains(document.getElementById("todoCardContainer"))&&document.getElementById("todoCardContainer").remove();const n=document.getElementById("listCard-template"),t=document.importNode(n.content,!0);content.appendChild(t);const r=document.getElementById("listTitle"),o=document.getElementById("listDescription");return r.focus(),e(),{listTitle:r,listDescription:o}},e=()=>{const n=document.getElementById("cancelList"),e=document.getElementById("submitList");n.addEventListener("click",(()=>{t(),a("All tasks")})),e.addEventListener("click",(()=>{const n=E().handleForm(y);E().display(y),i(n)}))},t=()=>{content.contains(document.getElementById("todoCardContainer"))&&document.getElementById("todoCardContainer").remove(),content.contains(document.getElementById("listCardContainer"))&&document.getElementById("listCardContainer").remove();const n=document.getElementById("todoCard-template"),e=document.importNode(n.content,!0);content.appendChild(e);const t=document.getElementById("todoCardContainer"),r=document.getElementById("listTitle"),o=document.getElementById("listDescription"),a=document.getElementById("submitQuickAdd");return A(),{todoCardContainer:t,listTitle:r,listDescription:o,submitQuickAdd:a}},r=()=>{content.contains(document.getElementById("editorCardContainer"))&&document.getElementById("editorCardContainer").remove();const n=document.getElementById("editorCard-template"),e=document.importNode(n.content,!0);content.prepend(e);const t=document.getElementById("editorForm"),r=document.getElementById("currentTask"),a=document.getElementById("dueDate"),i=document.getElementById("listDropdown"),A=document.getElementById("subtaskContainer"),s=document.getElementById("notes");return x().initListDropdown(y),o(),r.focus(),{editorForm:t,currentTask:r,dueDate:a,listDropdown:i,subtaskContainer:A,notes:s}},o=()=>{const n=Array.from(document.querySelectorAll("[data-priority]")),e=document.getElementById("createSubtaskButton"),t=document.getElementById("submitTask"),r=document.getElementById("cancelEditor");n.forEach((n=>{n.addEventListener("click",(n=>{d(),n.target.classList.add("clicked")}))})),e.addEventListener("click",(n=>{const e=_().getActiveTask(b,n);x().handleSubtask(e)})),t.addEventListener("click",(()=>{x().handleForm(),content.removeChild(editorCardContainer)})),r.addEventListener("click",(n=>{content.removeChild(editorCardContainer)}))},a=n=>{t(),listTitle.value=n,listTitle.setAttribute("readonly","readonly"),todoCardContainer.removeChild(listDescription),submitQuickAdd.addEventListener("click",(()=>{_().handleQuickAdd(b)}))},i=n=>{t(),listTitle.value=n.title,listTitle.dataset.list=n.listID,listTitle.addEventListener("focus",(()=>{s(listTitle)}),{once:!0}),listTitle.addEventListener("focusout",(()=>{const n=E().getActiveList();E().updateTitle(n),E().display(y)})),""===n.description?todoCardContainer.removeChild(listDescription):(listDescription.value=n.description,listDescription.addEventListener("focus",(()=>{s(listDescription)}),{once:!0}),listDescription.addEventListener("focusout",(()=>{const n=E().getActiveList();E().updateDescription(n)}))),""===n.tasks||_().display(n.tasks),submitQuickAdd.addEventListener("click",(()=>{_().handleQuickAdd(n)}))},A=()=>{const n=document.getElementById("menuContainer"),e=document.getElementById("menuBox"),t=document.getElementById("clearCompleted"),r=new Image(25,25);r.src=I,n.prepend(r),r.addEventListener("click",(()=>{e.classList.remove("hidden")})),e.addEventListener("mouseleave",(()=>{e.classList.add("hidden")})),t.addEventListener("click",(()=>{const n=E().getActiveList();void 0===n?(_().clearCompleted(b),_().display(b)):(_().clearCompleted(n.tasks),_().clearCompleted(b),_().display(n.tasks))}))},s=n=>{n.placeholder=n.value,n.value=""},d=()=>{Array.from(document.querySelectorAll("[data-priority]")).forEach((n=>{n.classList.contains("clicked")&&n.classList.remove("clicked")}))};return{initPage:()=>{const e=document.getElementById("taskCatIconContainer"),t=new Image(60,60);t.src=g,e.appendChild(t);const o=document.getElementById("githubIconContainer"),i=new Image(25,25);i.src=f,o.appendChild(i),_().getAllTasks(y),E().display(y),a("All tasks"),_().display(b),(()=>{const e=document.getElementById("createTaskButton"),t=document.getElementById("addListButton"),o=document.querySelector("[data-all]"),i=document.querySelector("[data-today]"),A=document.querySelector("[data-week]");e.addEventListener("click",r),t.addEventListener("click",n),o.addEventListener("click",(()=>{a("All tasks"),_().display(b)})),i.addEventListener("click",(()=>{const n=_().getTodayTasks(b);a("Today"),0===n.length?G().renderMessage("You're all caught up!"):_().display(n)})),A.addEventListener("click",(()=>{const n=_().getWeekTasks(b);a("This week"),0===n.length?G().renderMessage("You're all caught up!"):_().display(n)}))})()},initEditorClone:r,renderUserList:i,renderNavOption:a,renderMessage:n=>{const e=document.getElementById("taskContainer");e.innerHTML="";const t=document.createElement("div");t.textContent=n,t.classList.add("message"),e.appendChild(t)},setPlaceholder:s}};window.onload=()=>{G().initPage()}},62:(n,e,t)=>{n.exports=t.p+"f80816a5455d171f948d.ttf"},656:(n,e,t)=>{n.exports=t.p+"fc2b5060f7accec5cf74.ttf"}},n=>{n(n.s=605)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,