"use strict";(self.webpackChunkodin_todo_list=self.webpackChunkodin_todo_list||[]).push([[826],{426:(n,e,t)=>{t.d(e,{Z:()=>C});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),A=t(667),s=t.n(A),d=new URL(t(656),t.b),c=new URL(t(62),t.b),l=i()(o()),m=s()(d),u=s()(c);l.push([n.id,"@font-face {\n    font-family: 'Roboto';\n    src: url("+m+") format('ttf');\n    font-weight: 400;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url("+u+") format('ttf');\n    font-weight: 700;\n    font-style: normal;\n}\n\n:root {\n    --primary-dark: #1f2937;\n    --primary-light: #f9fafb;\n    --accent-secondary: #e5e7eb;\n    --accent-main: #0ea5e9;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    outline: none;\n    font-family: 'Roboto', sans-serif;\n    font-size: clamp(1rem, calc(0.5rem + 0.5vw), 1.75rem);\n    color: var(--primary-dark);\n}\n\nbody {\n    background-color: var(--primary-light);\n}\n\nh1 {\n    font-size: 3rem;\n    font-weight: 700;\n}\n\nh2 {\n    font-size: 2.5rem;\n    font-weight: 700;\n}\n\nh4 {\n    font-size: 1.5rem;\n    font-weight: 700;\n}\n\nheader {\n    cursor: default;\n    height: 1.5rem;\n    border-bottom: 2px solid var(--accent-secondary);\n    padding: 2rem 3rem;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\nfooter {\n    height: 2rem;\n    border-top: 2px solid var(--accent-secondary);\n    padding: 0.5rem 0 0.5rem 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 3rem;\n}\n\n\n/* Body styling */\n#main {\n    display: grid;\n    grid-template-columns: .25fr 2fr;\n}\n\n#sidebar {\n    height: auto;\n    max-height: 820px;\n    width: 13rem;\n    padding: 2rem;\n    border-right: 2px solid var(--accent-secondary);\n    grid-column: 1 / 2;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 2.5rem;\n}\n\n#navLists,\n#userLists,\n#listContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1.25rem;\n}\n\n.listBox {\n    cursor: pointer;\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    justify-content: space-between;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n#content {\n    padding: 2rem 7rem;\n    grid-column: 2 / 3;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 2rem;\n}\n\n.borderButton {\n    cursor: pointer;\n    height: 3rem;\n    width: max-content;\n    border: none;\n    border-radius: 1rem;\n    padding: 0 1.5rem;\n    background-color: var(--accent-main);\n    font-size: 1rem;\n    transition: .25s;\n}\n\n.textButton {\n    cursor: pointer;\n    height: 2rem;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: 1.25rem;\n    transition: .25s;\n}\n\n.imageButton {\n    height: 1.5rem;\n    width: 1.5rem;\n    transition: .25s;\n}\n\n.borderButton:hover,\n.textButton:hover {\n    transform: scale(1.05);\n}\n\n.imageButton:hover {\n    transform: scale(1.25);\n}\n\n.delete {\n    color: #dc2626;\n    font-size: 1rem;\n}\n\n.submit {\n    font-size: 1rem;\n}\n\n.linkBox {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: .75rem;\n}\n\n#githubIconContainer {\n    transition: .25s;\n}\n\n#githubIconContainer:hover {\n    transform: scale(1.2);\n}\n\n\n/* TodoCard styling */\n#todoCardContainer,\n#listCardContainer {\n    max-width: 25rem;\n    min-height: 675px;\n    border: 2px solid var(--accent-secondary);\n    border-radius: 1rem;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n#todoHeader {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n#menuContainer {\n    cursor: pointer;\n    position: relative;\n    float: right;\n}\n\n#menuBox {\n    position: absolute;\n    z-index: 1;\n    right: 0;\n    width: max-content;\n    padding: .75rem;\n    border: 2px solid var(--accent-secondary);\n    border-radius: .5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#clearCompleted {\n    cursor: pointer;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: .9rem;\n}\n\n#clearCompleted:hover {\n    transform: scale(1.05);\n}\n\n.hidden {\n    visibility: hidden;\n}\n\n.listInfo {\n    max-width: 20rem;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: 2.5rem;\n    font-weight: 700;\n}\n\n#listDescription {\n    font-size: 1.5rem;\n}\n\n.buttonContainer {\n    margin-top: auto;\n    width: 25rem;\n    display: flex;\n    justify-content: center;\n    gap: 4rem;\n}\n\n#taskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n.taskBox {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.checkbox {\n    -webkit-appearance: none;\n    appearance: none;\n    cursor: pointer;\n    height: 1.2rem;\n    width: 1.2rem;\n    border: 1px solid var(--primary-dark);\n    border-radius: 5px;\n    background-color: var(--primary-light);\n    transform: translateY(-0.075rem);\n    display: grid;\n    place-content: center;\n}\n\n.checkbox::after {\n    content: \"\";\n    height: 0.65rem;\n    width: 0.65rem;\n    transform: scale(0);\n    transform-origin: bottom left;\n    transition: 120ms ease-in-out;\n    box-shadow: inset 1rem 1rem var(--primary-dark);\n    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);\n}\n\n.checkbox:checked::after {\n    transform: scale(1);\n}\n\n.smaller {\n    width: 1rem;\n    height: 1rem;\n}\n\n.taskText {\n    width: 20rem;\n    overflow: hidden;\n    font-size: 1.25rem;\n    transition: .25s;\n}\n\n.taskText:hover {\n    transform: scale(1.015);\n}\n\n.message {\n    margin-top: 225px;\n    align-self: center;\n    font-size: 1.5rem;\n    font-weight: 300;\n}\n\n@keyframes completed {\n    from { text-decoration-color: transparent; }\n    to { text-decoration-color: auto; }\n}\n  .completed {  \n    text-decoration: line-through;\n    animation: completed .5s normal;\n  }\n\n#quickAddBar {\n    margin-top: auto;\n    display: flex;\n}\n\n#quickAddTask {\n    height: 3.15rem;\n    width: 18rem;\n    border: 0.5px solid var(--accent-secondary);\n    border-top-left-radius: 1rem;\n    border-bottom-left-radius: 1rem;\n    padding: 0 1rem;\n    font-size: .75rem;\n}\n\n#submitQuickAdd {\n    cursor: pointer;\n    height: 3.2rem;\n    width: 5rem;\n    border: none;\n    border-top-right-radius: 1rem;\n    border-bottom-right-radius: 1rem;\n    background-color: var(--accent-main);\n    font-size: .75rem;\n    transition: .25s;\n}\n\n#submitQuickAdd:hover {\n    transform: scale(1.05);\n}\n\n\n/* EditorCard styling */\n#editorCardContainer {\n    cursor: default;\n    max-width: 25rem;\n    min-height: 675px;\n    border: 2px solid var(--accent-secondary);\n    border-radius: 1rem;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n#editorForm {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n#currentTask {\n    max-width: 20rem;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: 1.5rem;\n    font-weight: 700;\n}\n\n#priorityContainer {\n    display: flex;\n    gap: 2.5rem;\n}\n\n.priority {\n    cursor: pointer;\n    height: 2.5rem;\n    width: 5rem;\n    border: none;\n    border-radius: 5rem;\n    font-size: 0.8rem;\n    transition: .25s;\n}\n\n.priority:hover {\n    transform: scale(1.2);\n}\n\n.clicked {\n    transform: scale(1.2);\n}\n\n.critical {\n    background-color: #fda4af;\n}\n\n.important {\n    background-color: #fcd34d;\n}\n\n.low {\n    background-color: #6ee7b7 ;\n}\n\n.editOption {\n    display: flex;\n    flex-direction: column;\n    gap: 0.25rem;\n}\n\n#dueDate,\n#listDropdown {\n    cursor: pointer;\n    height: 2rem;\n    width: 12.5rem;\n    border: 1px solid var(--primary-dark);\n    border-radius: 0.35rem;\n    padding-inline: .5rem;\n    background-color: var(--primary-light);\n    font-size: 0.85rem;\n    transition: .25s;\n}\n\n#dueDate:hover,\n#listDropdown:hover {\n    transform: scale(1.015);\n}\n\n#subtaskContainer {\n    margin-top: .25rem;\n    display: flex;\n    flex-direction: column;\n    gap: .25rem;\n}\n\n#createSubtaskButton {\n    margin: 0 0 0 1rem;\n    font-size: 1rem;\n    align-self: flex-start;\n}\n\n.subtaskBox {\n    cursor: pointer;\n    margin-left: 1rem;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n.subtaskText {\n    width: 15rem;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: 1rem;\n}\n\n#notes {\n    height: 5rem;\n    width: 20rem;\n    border: 1px solid var(--primary-dark);\n    border-radius: 0.35rem;\n    padding: 0.5rem;\n    background-color: var(--primary-light);\n    resize: none;\n    transition: .25s;\n}\n\n#notes:hover {\n    transform: scale(1.01) ;\n}\n\n#deleteTask:hover,\n#submitTask:hover {\n    transform: scale(1.1);\n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"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",sourcesContent:["@font-face {\n    font-family: 'Roboto';\n    src: url('./font/Roboto-Regular.ttf') format('ttf');\n    font-weight: 400;\n    font-style: normal;\n}\n\n@font-face {\n    font-family: 'Roboto';\n    src: url('./font/Roboto-Bold.ttf') format('ttf');\n    font-weight: 700;\n    font-style: normal;\n}\n\n:root {\n    --primary-dark: #1f2937;\n    --primary-light: #f9fafb;\n    --accent-secondary: #e5e7eb;\n    --accent-main: #0ea5e9;\n}\n\n* {\n    margin: 0;\n    padding: 0;\n    outline: none;\n    font-family: 'Roboto', sans-serif;\n    font-size: clamp(1rem, calc(0.5rem + 0.5vw), 1.75rem);\n    color: var(--primary-dark);\n}\n\nbody {\n    background-color: var(--primary-light);\n}\n\nh1 {\n    font-size: 3rem;\n    font-weight: 700;\n}\n\nh2 {\n    font-size: 2.5rem;\n    font-weight: 700;\n}\n\nh4 {\n    font-size: 1.5rem;\n    font-weight: 700;\n}\n\nheader {\n    cursor: default;\n    height: 1.5rem;\n    border-bottom: 2px solid var(--accent-secondary);\n    padding: 2rem 3rem;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\nfooter {\n    height: 2rem;\n    border-top: 2px solid var(--accent-secondary);\n    padding: 0.5rem 0 0.5rem 0;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: 3rem;\n}\n\n\n/* Body styling */\n#main {\n    display: grid;\n    grid-template-columns: .25fr 2fr;\n}\n\n#sidebar {\n    height: auto;\n    max-height: 820px;\n    width: 13rem;\n    padding: 2rem;\n    border-right: 2px solid var(--accent-secondary);\n    grid-column: 1 / 2;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 2.5rem;\n}\n\n#navLists,\n#userLists,\n#listContainer {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 1.25rem;\n}\n\n.listBox {\n    cursor: pointer;\n    display: grid;\n    grid-template-columns: 2fr 1fr;\n    justify-content: space-between;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n#content {\n    padding: 2rem 7rem;\n    grid-column: 2 / 3;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    gap: 2rem;\n}\n\n.borderButton {\n    cursor: pointer;\n    height: 3rem;\n    width: max-content;\n    border: none;\n    border-radius: 1rem;\n    padding: 0 1.5rem;\n    background-color: var(--accent-main);\n    font-size: 1rem;\n    transition: .25s;\n}\n\n.textButton {\n    cursor: pointer;\n    height: 2rem;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: 1.25rem;\n    transition: .25s;\n}\n\n.imageButton {\n    height: 1.5rem;\n    width: 1.5rem;\n    transition: .25s;\n}\n\n.borderButton:hover,\n.textButton:hover {\n    transform: scale(1.05);\n}\n\n.imageButton:hover {\n    transform: scale(1.25);\n}\n\n.delete {\n    color: #dc2626;\n    font-size: 1rem;\n}\n\n.submit {\n    font-size: 1rem;\n}\n\n.linkBox {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    gap: .75rem;\n}\n\n#githubIconContainer {\n    transition: .25s;\n}\n\n#githubIconContainer:hover {\n    transform: scale(1.2);\n}\n\n\n/* TodoCard styling */\n#todoCardContainer,\n#listCardContainer {\n    max-width: 25rem;\n    min-height: 675px;\n    border: 2px solid var(--accent-secondary);\n    border-radius: 1rem;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n#todoHeader {\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n}\n\n#menuContainer {\n    cursor: pointer;\n    position: relative;\n    float: right;\n}\n\n#menuBox {\n    position: absolute;\n    z-index: 1;\n    right: 0;\n    width: max-content;\n    padding: .75rem;\n    border: 2px solid var(--accent-secondary);\n    border-radius: .5rem;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#clearCompleted {\n    cursor: pointer;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: .9rem;\n}\n\n#clearCompleted:hover {\n    transform: scale(1.05);\n}\n\n.hidden {\n    visibility: hidden;\n}\n\n.listInfo {\n    max-width: 20rem;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: 2.5rem;\n    font-weight: 700;\n}\n\n#listDescription {\n    font-size: 1.5rem;\n}\n\n.buttonContainer {\n    margin-top: auto;\n    width: 25rem;\n    display: flex;\n    justify-content: center;\n    gap: 4rem;\n}\n\n#taskContainer {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n.taskBox {\n    cursor: pointer;\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n}\n\n.checkbox {\n    -webkit-appearance: none;\n    appearance: none;\n    cursor: pointer;\n    height: 1.2rem;\n    width: 1.2rem;\n    border: 1px solid var(--primary-dark);\n    border-radius: 5px;\n    background-color: var(--primary-light);\n    transform: translateY(-0.075rem);\n    display: grid;\n    place-content: center;\n}\n\n.checkbox::after {\n    content: \"\";\n    height: 0.65rem;\n    width: 0.65rem;\n    transform: scale(0);\n    transform-origin: bottom left;\n    transition: 120ms ease-in-out;\n    box-shadow: inset 1rem 1rem var(--primary-dark);\n    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);\n}\n\n.checkbox:checked::after {\n    transform: scale(1);\n}\n\n.smaller {\n    width: 1rem;\n    height: 1rem;\n}\n\n.taskText {\n    width: 20rem;\n    overflow: hidden;\n    font-size: 1.25rem;\n    transition: .25s;\n}\n\n.taskText:hover {\n    transform: scale(1.015);\n}\n\n.message {\n    margin-top: 225px;\n    align-self: center;\n    font-size: 1.5rem;\n    font-weight: 300;\n}\n\n@keyframes completed {\n    from { text-decoration-color: transparent; }\n    to { text-decoration-color: auto; }\n}\n  .completed {  \n    text-decoration: line-through;\n    animation: completed .5s normal;\n  }\n\n#quickAddBar {\n    margin-top: auto;\n    display: flex;\n}\n\n#quickAddTask {\n    height: 3.15rem;\n    width: 18rem;\n    border: 0.5px solid var(--accent-secondary);\n    border-top-left-radius: 1rem;\n    border-bottom-left-radius: 1rem;\n    padding: 0 1rem;\n    font-size: .75rem;\n}\n\n#submitQuickAdd {\n    cursor: pointer;\n    height: 3.2rem;\n    width: 5rem;\n    border: none;\n    border-top-right-radius: 1rem;\n    border-bottom-right-radius: 1rem;\n    background-color: var(--accent-main);\n    font-size: .75rem;\n    transition: .25s;\n}\n\n#submitQuickAdd:hover {\n    transform: scale(1.05);\n}\n\n\n/* EditorCard styling */\n#editorCardContainer {\n    cursor: default;\n    max-width: 25rem;\n    min-height: 675px;\n    border: 2px solid var(--accent-secondary);\n    border-radius: 1rem;\n    padding: 2rem;\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n#editorForm {\n    display: flex;\n    flex-direction: column;\n    gap: 2rem;\n}\n\n#currentTask {\n    max-width: 20rem;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: 1.5rem;\n    font-weight: 700;\n}\n\n#priorityContainer {\n    display: flex;\n    gap: 2.5rem;\n}\n\n.priority {\n    cursor: pointer;\n    height: 2.5rem;\n    width: 5rem;\n    border: none;\n    border-radius: 5rem;\n    font-size: 0.8rem;\n    transition: .25s;\n}\n\n.priority:hover {\n    transform: scale(1.2);\n}\n\n.clicked {\n    transform: scale(1.2);\n}\n\n.critical {\n    background-color: #fda4af;\n}\n\n.important {\n    background-color: #fcd34d;\n}\n\n.low {\n    background-color: #6ee7b7 ;\n}\n\n.editOption {\n    display: flex;\n    flex-direction: column;\n    gap: 0.25rem;\n}\n\n#dueDate,\n#listDropdown {\n    cursor: pointer;\n    height: 2rem;\n    width: 12.5rem;\n    border: 1px solid var(--primary-dark);\n    border-radius: 0.35rem;\n    padding-inline: .5rem;\n    background-color: var(--primary-light);\n    font-size: 0.85rem;\n    transition: .25s;\n}\n\n#dueDate:hover,\n#listDropdown:hover {\n    transform: scale(1.015);\n}\n\n#subtaskContainer {\n    margin-top: .25rem;\n    display: flex;\n    flex-direction: column;\n    gap: .25rem;\n}\n\n#createSubtaskButton {\n    margin: 0 0 0 1rem;\n    font-size: 1rem;\n    align-self: flex-start;\n}\n\n.subtaskBox {\n    cursor: pointer;\n    margin-left: 1rem;\n    display: flex;\n    align-items: center;\n    gap: 0.5rem;\n}\n\n.subtaskText {\n    width: 15rem;\n    border: none;\n    background-color: var(--primary-light);\n    font-size: 1rem;\n}\n\n#notes {\n    height: 5rem;\n    width: 20rem;\n    border: 1px solid var(--primary-dark);\n    border-radius: 0.35rem;\n    padding: 0.5rem;\n    background-color: var(--primary-light);\n    resize: none;\n    transition: .25s;\n}\n\n#notes:hover {\n    transform: scale(1.01) ;\n}\n\n#deleteTask:hover,\n#submitTask:hover {\n    transform: scale(1.1);\n}"],sourceRoot:""}]);const C=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var c=[].concat(n[d]);r&&i[c[0]]||(void 0!==a&&(void 0===c[5]||(c[1]="@layer".concat(c[5].length>0?" ".concat(c[5]):""," {").concat(c[1],"}")),c[5]=a),t&&(c[2]?(c[1]="@media ".concat(c[2]," {").concat(c[1],"}"),c[2]=t):c[2]=t),o&&(c[4]?(c[1]="@supports (".concat(c[4],") {").concat(c[1],"}"),c[4]=o):c[4]="".concat(o)),e.push(c))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],d=r.base?s[0]+r.base:s[0],c=a[d]||0,l="".concat(d," ").concat(c);a[d]=c+1;var m=t(l),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==m)e[m].references++,e[m].updater(u);else{var C=o(u,r);r.byIndex=A,e.splice(A,0,{identifier:l,updater:C,references:1})}i.push(l)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var s=r(n,o),d=0;d<a.length;d++){var c=t(a[d]);0===e[c].references&&(e[c].updater(),e.splice(c,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},605:(n,e,t)=>{var r=t(379),o=t.n(r),a=t(795),i=t.n(a),A=t(569),s=t.n(A),d=t(565),c=t.n(d),l=t(216),m=t.n(l),u=t(589),C=t.n(u),p=t(426),B={};B.styleTagTransform=C(),B.setAttributes=c(),B.insert=s().bind(null,"head"),B.domAPI=i(),B.insertStyleElement=m(),o()(p.Z,B),p.Z&&p.Z.locals&&p.Z.locals;const g=t.p+"26269cc7039cf66cc330.png",f=t.p+"0035c307a36c17babb8d.png",I=t.p+"fadee1a4bd2ae96656b5.png",h=t.p+"f099a57596aa547ba1cc.png";let y;y=void 0===v()?[{title:"Test list",description:"foobar",tasks:[{title:"Test task",priority:"critical",dueDate:"2022-10-22T16:20",list:"Test list",subtasks:[{title:"foo",completed:!0,subtask:1}],notes:"bar",completed:!1,taskID:1}],listID:1}]:v();const b=[];function k(){localStorage.clear();const n=JSON.stringify(y);localStorage.setItem("userLists",n)}function v(){if(null!==localStorage.getItem("userLists"))return JSON.parse(localStorage.getItem("userLists"))}const E=()=>{const n=t=>{const r=document.getElementById("listContainer");r.innerHTML="",t.forEach((a=>{const i=document.getElementById("list-template"),A=document.importNode(i.content,!0);r.appendChild(A);const s=Array.from(document.querySelectorAll("[data-list]")),d=Array.from(document.querySelectorAll("[data-delete]")),c=t.indexOf(a);s[c].textContent=a.title,s[c].dataset.list=a.listID,s[c].addEventListener("click",(()=>{G().renderUserList(a)})),d[c].src=h,d[c].addEventListener("click",(()=>{e(t,a),o(t),n(t)}))}))},e=(n,e)=>{const t=n.indexOf(e);n.splice(t,1),k()},t=()=>document.getElementById("listTitle").value,r=()=>document.getElementById("listDescription").value,o=n=>{let e=1;n.forEach((n=>{n.listID=e,e++}))};return{display:n,handleForm:n=>{const e=n.length+1,o=((n,e,t,r)=>({title:n,description:e,tasks:[],listID:r}))(t(),r(),0,e);return n.push(o),k(),o},updateTitle:n=>{const e=t();""!==e&&(n.title=e,k())},updateDescription:n=>{const e=r();""!==e&&(n.description=e,k())},getActiveList:()=>{const n=document.getElementById("listTitle").value;return y.find((({title:e})=>e===n))}}},x=()=>{const n=n=>{const e=t();n.title=e;const i=r();n.priority=i;const A=o();n.dueDate=A;const d=a();n.list=d;const c=s();n.notes=c,_().display(b),k()},e=n=>{if("All tasks"===document.getElementById("listTitle").value){if("All tasks"===n.list)_().handleDelete(b,n);else{const e=y.find((({title:e})=>e===n.list));_().handleDelete(e.tasks,n)}_().resetIDs(b),_().display(b)}else{const e=E().getActiveList();_().handleDelete(e.tasks,n),_().resetIDs(e),_().resetIDs(b),_().display(e.tasks)}content.removeChild(editorCardContainer),k()},t=()=>{const n=document.getElementById("currentTask");return""===n.value?n.placeholder:n.value},r=()=>{const n=Array.from(document.querySelectorAll("[data-priority]")).find((({classList:n})=>n.contains("clicked")));if(void 0!==n)return n.dataset.priority},o=()=>document.getElementById("dueDate").value,a=()=>document.getElementById("listDropdown").value,i=()=>{const n=Array.from(document.querySelectorAll("[data-subtask]")),e=[];return n.forEach((n=>{const t={title:n.value,completed:!1,taskID:1};e.push(t)})),e},A=n=>{!0===n.completed?n.completed=!1:n.completed=!0,k()},s=()=>document.getElementById("notes").value;return{displayTask:t=>{G().initEditorClone(),editorCardContainer.contains(document.getElementById("submitTask"))&&((e=>{const t=editorCardContainer.querySelector(".buttonContainer");t.removeChild(submitTask);const r=document.createElement("button");r.id="updateTask",r.classList.add("textButton","submit"),r.textContent="Update Task",t.append(r),r.addEventListener("click",(()=>{n(e),document.getElementById("editorCardContainer").remove()}))})(t),(n=>{const t=editorCardContainer.querySelector(".buttonContainer");t.removeChild(cancelEditor);const r=document.createElement("button");r.id="deleteTask",r.classList.add("textButton","delete"),r.textContent="Delete Task",t.prepend(r),r.addEventListener("click",(()=>{e(n)}))})(t)),(n=>{""!==n.title&&(document.getElementById("currentTask").value=n.title)})(t),(n=>{if(""===n.priority)return;Array.from(document.querySelectorAll("[data-priority]")).forEach((n=>{n.classList.remove("clicked")}));const e=n.priority;""!==e&&("critical"===e?document.querySelector('[data-priority="critical"]').classList.add("clicked"):"important"===e?document.querySelector('[data-priority="important"]').classList.add("clicked"):"low"===e&&document.querySelector('[data-priority="low"]').classList.add("clicked"))})(t),(n=>{""!==n.dueDate&&(document.getElementById("dueDate").value=n.dueDate)})(t),(n=>{""!==n.list&&(document.getElementById("listDropdown").value=n.list)})(t),(n=>{if(""===n.subtasks)return;const e=document.getElementById("subtaskContainer"),t=n.subtasks;e.innerHTML="",t.forEach((n=>{const r=document.getElementById("subtask-template"),o=document.importNode(r.content,!0);e.appendChild(o);const a=Array.from(document.querySelectorAll("[data-subtask]")),i=Array.from(document.querySelectorAll("[data-check")),s=t.indexOf(n);!0===n.completed&&(i[s].checked=!0),a[s].value=n.title,i[s].addEventListener("click",(()=>{A(n)}))}))})(t),(n=>{""!==n.notes&&(document.getElementById("notes").value=n.notes)})(t),G().setPlaceholder(currentTask),currentTask.blur()},handleForm:()=>{const n=a();let e;if("All tasks"===n){const n=b.length+1;e=$(t(),r(),o(),a(),i(),s(),!1,n),b.push(e),G().renderNavOption("All tasks"),_().display(b)}else{const A=b.length+1;e=$(t(),r(),o(),a(),i(),s(),!1,A);const d=y.find((({title:e})=>e===n));d.tasks.push(e),b.push(e),G().renderUserList(d)}return k(),e},getTargetList:a,handleSubtask:n=>{const e=document.getElementById("subtaskContainer"),t=document.getElementById("subtask-template"),r=document.importNode(t.content,!0);let o;e.appendChild(r),Array.from(document.querySelectorAll("[data-subtask]")),o=void 0===n?0:n.subtasks.length},initListDropdown:n=>{listDropdown.innerHTML="";const e=document.createElement("option");e.value="All tasks",e.textContent="All tasks",listDropdown.appendChild(e),n.forEach((n=>{const e=document.createElement("option");e.value=n.title,e.textContent=n.title,listDropdown.appendChild(e)}))}}};function w(n,e){if(e.length<n)throw new TypeError(n+" argument"+(n>1?"s":"")+" required, but only "+e.length+" present")}function D(n){w(1,arguments);var e=Object.prototype.toString.call(n);return n instanceof Date||"object"==typeof n&&"[object Date]"===e?new Date(n.getTime()):"number"==typeof n||"[object Number]"===e?new Date(n):("string"!=typeof n&&"[object String]"!==e||"undefined"==typeof console||(console.warn("Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule"),console.warn((new Error).stack)),new Date(NaN))}Math.pow(10,8);var T=36e5;function L(n){if(null===n||!0===n||!1===n)return NaN;var e=Number(n);return isNaN(e)?e:e<0?Math.ceil(e):Math.floor(e)}function S(n,e){w(1,arguments);var t=e||{},r=null==t.additionalDigits?2:L(t.additionalDigits);if(2!==r&&1!==r&&0!==r)throw new RangeError("additionalDigits must be 0, 1 or 2");if("string"!=typeof n&&"[object String]"!==Object.prototype.toString.call(n))return new Date(NaN);var o,a=j(n);if(a.date){var i=Z(a.date,r);o=U(i.restDateString,i.year)}if(!o||isNaN(o.getTime()))return new Date(NaN);var A,s=o.getTime(),d=0;if(a.time&&(d=M(a.time),isNaN(d)))return new Date(NaN);if(!a.timezone){var c=new Date(s+d),l=new Date(0);return l.setFullYear(c.getUTCFullYear(),c.getUTCMonth(),c.getUTCDate()),l.setHours(c.getUTCHours(),c.getUTCMinutes(),c.getUTCSeconds(),c.getUTCMilliseconds()),l}return A=R(a.timezone),isNaN(A)?new Date(NaN):new Date(s+d+A)}var Y={dateTimeDelimiter:/[T ]/,timeZoneDelimiter:/[Z ]/i,timezone:/([Z+-].*)$/},z=/^-?(?:(\d{3})|(\d{2})(?:-?(\d{2}))?|W(\d{2})(?:-?(\d{1}))?|)$/,q=/^(\d{2}(?:[.,]\d*)?)(?::?(\d{2}(?:[.,]\d*)?))?(?::?(\d{2}(?:[.,]\d*)?))?$/,N=/^([+-])(\d{2})(?::?(\d{2}))?$/;function j(n){var e,t={},r=n.split(Y.dateTimeDelimiter);if(r.length>2)return t;if(/:/.test(r[0])?e=r[0]:(t.date=r[0],e=r[1],Y.timeZoneDelimiter.test(t.date)&&(t.date=n.split(Y.timeZoneDelimiter)[0],e=n.substr(t.date.length,n.length))),e){var o=Y.timezone.exec(e);o?(t.time=e.replace(o[1],""),t.timezone=o[1]):t.time=e}return t}function Z(n,e){var t=new RegExp("^(?:(\\d{4}|[+-]\\d{"+(4+e)+"})|(\\d{2}|[+-]\\d{"+(2+e)+"})$)"),r=n.match(t);if(!r)return{year:NaN,restDateString:""};var o=r[1]?parseInt(r[1]):null,a=r[2]?parseInt(r[2]):null;return{year:null===a?o:100*a,restDateString:n.slice((r[1]||r[2]).length)}}function U(n,e){if(null===e)return new Date(NaN);var t=n.match(z);if(!t)return new Date(NaN);var r=!!t[4],o=O(t[1]),a=O(t[2])-1,i=O(t[3]),A=O(t[4]),s=O(t[5])-1;if(r)return function(n,e,t){return e>=1&&e<=53&&t>=0&&t<=6}(0,A,s)?function(n,e,t){var r=new Date(0);r.setUTCFullYear(n,0,4);var o=7*(e-1)+t+1-(r.getUTCDay()||7);return r.setUTCDate(r.getUTCDate()+o),r}(e,A,s):new Date(NaN);var d=new Date(0);return function(n,e,t){return e>=0&&e<=11&&t>=1&&t<=(F[e]||(Q(n)?29:28))}(e,a,i)&&function(n,e){return e>=1&&e<=(Q(n)?366:365)}(e,o)?(d.setUTCFullYear(e,a,Math.max(o,i)),d):new Date(NaN)}function O(n){return n?parseInt(n):1}function M(n){var e=n.match(q);if(!e)return NaN;var t=W(e[1]),r=W(e[2]),o=W(e[3]);return function(n,e,t){return 24===n?0===e&&0===t:t>=0&&t<60&&e>=0&&e<60&&n>=0&&n<25}(t,r,o)?t*T+6e4*r+1e3*o:NaN}function W(n){return n&&parseFloat(n.replace(",","."))||0}function R(n){if("Z"===n)return 0;var e=n.match(N);if(!e)return 0;var t="+"===e[1]?-1:1,r=parseInt(e[2]),o=e[3]&&parseInt(e[3])||0;return function(n,e){return e>=0&&e<=59}(0,o)?t*(r*T+6e4*o):NaN}var F=[31,null,31,30,31,30,31,31,30,31,30,31];function Q(n){return n%400==0||n%4==0&&n%100!=0}function H(n,e){w(2,arguments);var t=D(n),r=D(e);return t.getTime()<r.getTime()}function P(n,e){w(1,arguments);var t=e||{},r=t.locale,o=r&&r.options&&r.options.weekStartsOn,a=null==o?0:L(o),i=null==t.weekStartsOn?a:L(t.weekStartsOn);if(!(i>=0&&i<=6))throw new RangeError("weekStartsOn must be between 0 and 6 inclusively");var A=D(n),s=A.getDay(),d=6+(s<i?-7:0)-(s-i);return A.setDate(A.getDate()+d),A.setHours(23,59,59,999),A}const $=(n,e,t,r,o,a,i,A)=>({title:n,priority:e,dueDate:t,list:r,subtasks:o,notes:a,completed:i,taskID:A}),_=()=>{const n=n=>{const t=document.getElementById("taskContainer");t.innerHTML="",n.forEach((r=>{const o=document.getElementById("task-template"),a=document.importNode(o.content,!0);t.appendChild(a);const i=Array.from(document.querySelectorAll("[data-task]")),A=Array.from(document.querySelectorAll("[data-complete")),s=n.indexOf(r);i[s].textContent=r.title,i[s].dataset.task=r.taskID,!0===r.completed&&(i[s].classList.add("completed"),A[s].checked=!0),i[s].addEventListener("click",(()=>{x().displayTask(r)})),A[s].addEventListener("click",(()=>{e(r,i[s])}))}))},e=(n,e)=>{!0===n.completed?(n.completed=!1,e.classList.remove("completed")):(n.completed=!0,e.classList.add("completed")),k()};return{display:n,handleQuickAdd:e=>{const t=document.getElementById("quickAddTask").value;let r,o;if(r=void 0===e.length?e.tasks.length+1:e.length+1,void 0===E().getActiveList())o=$(t,"","","",[],"","",r);else{const n=E().getActiveList().title;o=$(t,"","",n,[],"","",r)}void 0===e.tasks?(b.push(o),quickAddTask.value="",G().renderNavOption("All tasks"),n(e)):(e.tasks.push(o),b.push(o),quickAddTask.value="",n(e.tasks)),k()},handleDelete:(n,e)=>{const t=n.indexOf(e),r=b.find((({title:n})=>n===e.title)),o=b.indexOf(r);n.splice(t,1),b.splice(o,1),k()},getActiveTask:n=>{const e=document.getElementById("currentTask").placeholder;return n.find((({title:n})=>n===e))},getAllTasks:n=>{n.forEach((n=>{const e=n.tasks.values();for(const n of e)b.push(n)}))},getTodayTasks:n=>{let e=[];for(let t=0;t<n.length;t++){const r=function(n){w(1,arguments);var e=D(n);return e.setHours(23,59,59,999),e}(Date.now());H(S(n[t].dueDate),r)&&e.push(n[t])}return e},getWeekTasks:n=>{const e=new Date;let t=[];for(let r=0;r<n.length;r++){const o=P(e);H(S(n[r].dueDate),o)&&t.push(n[r])}return t},clearCompleted:n=>{n.forEach((e=>{if(!0===e.completed){const t=n.indexOf(e);n.splice(t,1)}})),k()},resetIDs:n=>{if(void 0===n.tasks){let e=1;n.forEach((n=>{n.taskID=e,e++}))}else{let e=1;n.tasks.forEach((n=>{n.taskID=e,e++}))}}}},G=()=>{const n=()=>{content.contains(document.getElementById("listCardContainer"))&&document.getElementById("listCardContainer").remove(),content.contains(document.getElementById("todoCardContainer"))&&document.getElementById("todoCardContainer").remove();const n=document.getElementById("listCard-template"),t=document.importNode(n.content,!0);content.appendChild(t);const r=document.getElementById("listTitle"),o=document.getElementById("listDescription");return r.focus(),e(),{listTitle:r,listDescription:o}},e=()=>{const n=document.getElementById("cancelList"),e=document.getElementById("submitList");n.addEventListener("click",(()=>{t(),a("All tasks")})),e.addEventListener("click",(()=>{const n=E().handleForm(y);E().display(y),i(n)}))},t=()=>{content.contains(document.getElementById("todoCardContainer"))&&document.getElementById("todoCardContainer").remove(),content.contains(document.getElementById("listCardContainer"))&&document.getElementById("listCardContainer").remove();const n=document.getElementById("todoCard-template"),e=document.importNode(n.content,!0);content.appendChild(e);const t=document.getElementById("todoCardContainer"),r=document.getElementById("listTitle"),o=document.getElementById("listDescription"),a=document.getElementById("submitQuickAdd");return A(),{todoCardContainer:t,listTitle:r,listDescription:o,submitQuickAdd:a}},r=()=>{content.contains(document.getElementById("editorCardContainer"))&&document.getElementById("editorCardContainer").remove();const n=document.getElementById("editorCard-template"),e=document.importNode(n.content,!0);content.prepend(e);const t=document.getElementById("editorForm"),r=document.getElementById("currentTask"),a=document.getElementById("dueDate"),i=document.getElementById("listDropdown"),A=document.getElementById("subtaskContainer"),s=document.getElementById("notes");return x().initListDropdown(y),o(),r.focus(),{editorForm:t,currentTask:r,dueDate:a,listDropdown:i,subtaskContainer:A,notes:s}},o=()=>{const n=Array.from(document.querySelectorAll("[data-priority]")),e=document.getElementById("createSubtaskButton"),t=document.getElementById("submitTask"),r=document.getElementById("cancelEditor");n.forEach((n=>{n.addEventListener("click",(n=>{d(),n.target.classList.add("clicked")}))})),e.addEventListener("click",(n=>{const e=_().getActiveTask(b,n);x().handleSubtask(e)})),t.addEventListener("click",(()=>{x().handleForm(),content.removeChild(editorCardContainer)})),r.addEventListener("click",(n=>{content.removeChild(editorCardContainer)}))},a=n=>{t(),listTitle.value=n,listTitle.setAttribute("readonly","readonly"),todoCardContainer.removeChild(listDescription),submitQuickAdd.addEventListener("click",(()=>{_().handleQuickAdd(b)}))},i=n=>{t(),listTitle.value=n.title,listTitle.dataset.list=n.listID,listTitle.addEventListener("focus",(()=>{s(listTitle)}),{once:!0}),listTitle.addEventListener("focusout",(()=>{const n=E().getActiveList();E().updateTitle(n),E().display(y)})),""===n.description?todoCardContainer.removeChild(listDescription):(listDescription.value=n.description,listDescription.addEventListener("focus",(()=>{s(listDescription)}),{once:!0}),listDescription.addEventListener("focusout",(()=>{const n=E().getActiveList();E().updateDescription(n)}))),""===n.tasks||_().display(n.tasks),submitQuickAdd.addEventListener("click",(()=>{_().handleQuickAdd(n)}))},A=()=>{const n=document.getElementById("menuContainer"),e=document.getElementById("menuBox"),t=document.getElementById("clearCompleted"),r=new Image(25,25);r.src=I,n.prepend(r),r.addEventListener("click",(()=>{e.classList.remove("hidden")})),e.addEventListener("mouseleave",(()=>{e.classList.add("hidden")})),t.addEventListener("click",(()=>{const n=E().getActiveList();void 0===n?(_().clearCompleted(b),_().display(b)):(_().clearCompleted(n.tasks),_().clearCompleted(b),_().display(n.tasks))}))},s=n=>{n.placeholder=n.value,n.value=""},d=()=>{Array.from(document.querySelectorAll("[data-priority]")).forEach((n=>{n.classList.contains("clicked")&&n.classList.remove("clicked")}))};return{initPage:()=>{const e=document.getElementById("taskCatIconContainer"),t=new Image(60,60);t.src=g,e.appendChild(t);const o=document.getElementById("githubIconContainer"),i=new Image(25,25);i.src=f,o.appendChild(i),_().getAllTasks(y),E().display(y),a("All tasks"),_().display(b),(()=>{const e=document.getElementById("createTaskButton"),t=document.getElementById("addListButton"),o=document.querySelector("[data-all]"),i=document.querySelector("[data-today]"),A=document.querySelector("[data-week]");e.addEventListener("click",r),t.addEventListener("click",n),o.addEventListener("click",(()=>{a("All tasks"),_().display(b)})),i.addEventListener("click",(()=>{const n=_().getTodayTasks(b);a("Today"),0===n.length?G().renderMessage("You're all caught up!"):_().display(n)})),A.addEventListener("click",(()=>{const n=_().getWeekTasks(b);a("This week"),0===n.length?G().renderMessage("You're all caught up!"):_().display(n)}))})()},initEditorClone:r,renderUserList:i,renderNavOption:a,renderMessage:n=>{const e=document.getElementById("taskContainer");e.innerHTML="";const t=document.createElement("div");t.textContent=n,t.classList.add("message"),e.appendChild(t)},setPlaceholder:s}};window.onload=()=>{G().initPage()}},62:(n,e,t)=>{n.exports=t.p+"f80816a5455d171f948d.ttf"},656:(n,e,t)=>{n.exports=t.p+"fc2b5060f7accec5cf74.ttf"}},n=>{n(n.s=605)}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QWlCLFFBQVNvQyxHQUMzQytNLEVBQWNuUCxpQkFBaUIsUUFBU21OLEdBQ3hDaUMsRUFBT3BQLGlCQUFpQixTQUFTLEtBQzdCZ0UsRUFBZ0IsYUFDaEJsRyxJQUFRa0IsUUFBUVQsRUFBUyxJQUU3QjhRLEVBQVNyUCxpQkFBaUIsU0FBUyxLQUMvQixNQUFNMk0sRUFBYTdPLElBQVE0TyxjQUFjbk8sR0FDekN5RixFQUFnQixTQUNVLElBQXRCMkksRUFBV2pWLE9BQ1h1SSxJQUFLc1AsY0FBYyx5QkFFbkJ6UixJQUFRa0IsUUFBUTJOLEVBQ3BCLElBRUoyQyxFQUFRdFAsaUJBQWlCLFNBQVMsS0FDOUIsTUFBTWdOLEVBQVlsUCxJQUFRZ1AsYUFBYXZPLEdBQ3ZDeUYsRUFBZ0IsYUFDUyxJQUFyQmdKLEVBQVV0VixPQUNWdUksSUFBS3NQLGNBQWMseUJBRW5CelIsSUFBUWtCLFFBQVFnTyxFQUNwQixHQUNGLEVBakNGd0MsRUFBa0IsRUFnRkhwTixrQkFBaUJsQyxpQkFBZ0I4RCxrQkFBaUJ1TCxjQXpHOUNFLElBQ25CLE1BQU0vRCxFQUFnQjNQLFNBQVNvRCxlQUFlLGlCQUM5Q3VNLEVBQWN0TSxVQUFZLEdBRTFCLE1BQU1zUSxFQUFNM1QsU0FBU1csY0FBYyxPQUNuQ2dULEVBQUk1UCxZQUFjMlAsRUFDbEJDLEVBQUk3TixVQUFVVyxJQUFJLFdBQ2xCa0osRUFBY2xQLFlBQVlrVCxFQUFJLEVBa0drRC9MLGlCQUFnQixFQy9SeEcxSCxPQUFPMFQsT0FBUyxLQUNaMVAsSUFBSzRPLFVBQVUsQyIsInNvdXJjZXMiOlsid2VicGFjazovL29kaW4tdG9kby1saXN0Ly4vc3JjL3N0eWxlLmNzcyIsIndlYnBhY2s6Ly9vZGluLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzIiwid2VicGFjazovL29kaW4tdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzIiwid2VicGFjazovL29kaW4tdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL29kaW4tdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzIiwid2VicGFjazovL29kaW4tdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9vZGluLXRvZG8tbGlzdC8uL3NyYy9zdHlsZS5jc3M/NzE2MyIsIndlYnBhY2s6Ly9vZGluLXRvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL2RhdGEuanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLWxpc3QvLi9zcmMvbW9kdWxlcy9saXN0LmpzIiwid2VicGFjazovL29kaW4tdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvZWRpdG9yLmpzIiwid2VicGFjazovL29kaW4tdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qcyIsIndlYnBhY2s6Ly9vZGluLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vdG9EYXRlL2luZGV4LmpzIiwid2VicGFjazovL29kaW4tdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9jb25zdGFudHMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL19saWIvdG9JbnRlZ2VyL2luZGV4LmpzIiwid2VicGFjazovL29kaW4tdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9wYXJzZUlTTy9pbmRleC5qcyIsIndlYnBhY2s6Ly9vZGluLXRvZG8tbGlzdC8uL25vZGVfbW9kdWxlcy9kYXRlLWZucy9lc20vaXNCZWZvcmUvaW5kZXguanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2VuZE9mV2Vlay9pbmRleC5qcyIsIndlYnBhY2s6Ly9vZGluLXRvZG8tbGlzdC8uL3NyYy9tb2R1bGVzL3Rhc2suanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLWxpc3QvLi9ub2RlX21vZHVsZXMvZGF0ZS1mbnMvZXNtL2VuZE9mRGF5L2luZGV4LmpzIiwid2VicGFjazovL29kaW4tdG9kby1saXN0Ly4vbm9kZV9tb2R1bGVzL2RhdGUtZm5zL2VzbS9lbmRPZlRvZGF5L2luZGV4LmpzIiwid2VicGFjazovL29kaW4tdG9kby1saXN0Ly4vc3JjL21vZHVsZXMvdWkuanMiLCJ3ZWJwYWNrOi8vb2Rpbi10b2RvLWxpc3QvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fID0gbmV3IFVSTChcIi4vZm9udC9Sb2JvdG8tUmVndWxhci50dGZcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMV9fXyA9IG5ldyBVUkwoXCIuL2ZvbnQvUm9ib3RvLUJvbGQudHRmXCIsIGltcG9ydC5tZXRhLnVybCk7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyA9IF9fX0NTU19MT0FERVJfR0VUX1VSTF9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzFfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8xX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKSBmb3JtYXQoJ3R0ZicpO1xcbiAgICBmb250LXdlaWdodDogNDAwO1xcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XFxufVxcblxcbkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMV9fXyArIFwiKSBmb3JtYXQoJ3R0ZicpO1xcbiAgICBmb250LXdlaWdodDogNzAwO1xcbiAgICBmb250LXN0eWxlOiBub3JtYWw7XFxufVxcblxcbjpyb290IHtcXG4gICAgLS1wcmltYXJ5LWRhcms6ICMxZjI5Mzc7XFxuICAgIC0tcHJpbWFyeS1saWdodDogI2Y5ZmFmYjtcXG4gICAgLS1hY2NlbnQtc2Vjb25kYXJ5OiAjZTVlN2ViO1xcbiAgICAtLWFjY2VudC1tYWluOiAjMGVhNWU5O1xcbn1cXG5cXG4qIHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBwYWRkaW5nOiAwO1xcbiAgICBvdXRsaW5lOiBub25lO1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90bycsIHNhbnMtc2VyaWY7XFxuICAgIGZvbnQtc2l6ZTogY2xhbXAoMXJlbSwgY2FsYygwLjVyZW0gKyAwLjV2dyksIDEuNzVyZW0pO1xcbiAgICBjb2xvcjogdmFyKC0tcHJpbWFyeS1kYXJrKTtcXG59XFxuXFxuYm9keSB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnktbGlnaHQpO1xcbn1cXG5cXG5oMSB7XFxuICAgIGZvbnQtc2l6ZTogM3JlbTtcXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcXG59XFxuXFxuaDIge1xcbiAgICBmb250LXNpemU6IDIuNXJlbTtcXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcXG59XFxuXFxuaDQge1xcbiAgICBmb250LXNpemU6IDEuNXJlbTtcXG4gICAgZm9udC13ZWlnaHQ6IDcwMDtcXG59XFxuXFxuaGVhZGVyIHtcXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xcbiAgICBoZWlnaHQ6IDEuNXJlbTtcXG4gICAgYm9yZGVyLWJvdHRvbTogMnB4IHNvbGlkIHZhcigtLWFjY2VudC1zZWNvbmRhcnkpO1xcbiAgICBwYWRkaW5nOiAycmVtIDNyZW07XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogMXJlbTtcXG59XFxuXFxuZm9vdGVyIHtcXG4gICAgaGVpZ2h0OiAycmVtO1xcbiAgICBib3JkZXItdG9wOiAycHggc29saWQgdmFyKC0tYWNjZW50LXNlY29uZGFyeSk7XFxuICAgIHBhZGRpbmc6IDAuNXJlbSAwIDAuNXJlbSAwO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAzcmVtO1xcbn1cXG5cXG5cXG4vKiBCb2R5IHN0eWxpbmcgKi9cXG4jbWFpbiB7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogLjI1ZnIgMmZyO1xcbn1cXG5cXG4jc2lkZWJhciB7XFxuICAgIGhlaWdodDogYXV0bztcXG4gICAgbWF4LWhlaWdodDogODIwcHg7XFxuICAgIHdpZHRoOiAxM3JlbTtcXG4gICAgcGFkZGluZzogMnJlbTtcXG4gICAgYm9yZGVyLXJpZ2h0OiAycHggc29saWQgdmFyKC0tYWNjZW50LXNlY29uZGFyeSk7XFxuICAgIGdyaWQtY29sdW1uOiAxIC8gMjtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAyLjVyZW07XFxufVxcblxcbiNuYXZMaXN0cyxcXG4jdXNlckxpc3RzLFxcbiNsaXN0Q29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAxLjI1cmVtO1xcbn1cXG5cXG4ubGlzdEJveCB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAyZnIgMWZyO1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogMC41cmVtO1xcbn1cXG5cXG4jY29udGVudCB7XFxuICAgIHBhZGRpbmc6IDJyZW0gN3JlbTtcXG4gICAgZ3JpZC1jb2x1bW46IDIgLyAzO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDFmciAxZnI7XFxuICAgIGdhcDogMnJlbTtcXG59XFxuXFxuLmJvcmRlckJ1dHRvbiB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgaGVpZ2h0OiAzcmVtO1xcbiAgICB3aWR0aDogbWF4LWNvbnRlbnQ7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYm9yZGVyLXJhZGl1czogMXJlbTtcXG4gICAgcGFkZGluZzogMCAxLjVyZW07XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC1tYWluKTtcXG4gICAgZm9udC1zaXplOiAxcmVtO1xcbiAgICB0cmFuc2l0aW9uOiAuMjVzO1xcbn1cXG5cXG4udGV4dEJ1dHRvbiB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgaGVpZ2h0OiAycmVtO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnktbGlnaHQpO1xcbiAgICBmb250LXNpemU6IDEuMjVyZW07XFxuICAgIHRyYW5zaXRpb246IC4yNXM7XFxufVxcblxcbi5pbWFnZUJ1dHRvbiB7XFxuICAgIGhlaWdodDogMS41cmVtO1xcbiAgICB3aWR0aDogMS41cmVtO1xcbiAgICB0cmFuc2l0aW9uOiAuMjVzO1xcbn1cXG5cXG4uYm9yZGVyQnV0dG9uOmhvdmVyLFxcbi50ZXh0QnV0dG9uOmhvdmVyIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcXG59XFxuXFxuLmltYWdlQnV0dG9uOmhvdmVyIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjI1KTtcXG59XFxuXFxuLmRlbGV0ZSB7XFxuICAgIGNvbG9yOiAjZGMyNjI2O1xcbiAgICBmb250LXNpemU6IDFyZW07XFxufVxcblxcbi5zdWJtaXQge1xcbiAgICBmb250LXNpemU6IDFyZW07XFxufVxcblxcbi5saW5rQm94IHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogLjc1cmVtO1xcbn1cXG5cXG4jZ2l0aHViSWNvbkNvbnRhaW5lciB7XFxuICAgIHRyYW5zaXRpb246IC4yNXM7XFxufVxcblxcbiNnaXRodWJJY29uQ29udGFpbmVyOmhvdmVyIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xcbn1cXG5cXG5cXG4vKiBUb2RvQ2FyZCBzdHlsaW5nICovXFxuI3RvZG9DYXJkQ29udGFpbmVyLFxcbiNsaXN0Q2FyZENvbnRhaW5lciB7XFxuICAgIG1heC13aWR0aDogMjVyZW07XFxuICAgIG1pbi1oZWlnaHQ6IDY3NXB4O1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1hY2NlbnQtc2Vjb25kYXJ5KTtcXG4gICAgYm9yZGVyLXJhZGl1czogMXJlbTtcXG4gICAgcGFkZGluZzogMnJlbTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAycmVtO1xcbn1cXG5cXG4jdG9kb0hlYWRlciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG59XFxuXFxuI21lbnVDb250YWluZXIge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gICAgZmxvYXQ6IHJpZ2h0O1xcbn1cXG5cXG4jbWVudUJveCB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgei1pbmRleDogMTtcXG4gICAgcmlnaHQ6IDA7XFxuICAgIHdpZHRoOiBtYXgtY29udGVudDtcXG4gICAgcGFkZGluZzogLjc1cmVtO1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1hY2NlbnQtc2Vjb25kYXJ5KTtcXG4gICAgYm9yZGVyLXJhZGl1czogLjVyZW07XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4jY2xlYXJDb21wbGV0ZWQge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodCk7XFxuICAgIGZvbnQtc2l6ZTogLjlyZW07XFxufVxcblxcbiNjbGVhckNvbXBsZXRlZDpob3ZlciB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XFxufVxcblxcbi5oaWRkZW4ge1xcbiAgICB2aXNpYmlsaXR5OiBoaWRkZW47XFxufVxcblxcbi5saXN0SW5mbyB7XFxuICAgIG1heC13aWR0aDogMjByZW07XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodCk7XFxuICAgIGZvbnQtc2l6ZTogMi41cmVtO1xcbiAgICBmb250LXdlaWdodDogNzAwO1xcbn1cXG5cXG4jbGlzdERlc2NyaXB0aW9uIHtcXG4gICAgZm9udC1zaXplOiAxLjVyZW07XFxufVxcblxcbi5idXR0b25Db250YWluZXIge1xcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xcbiAgICB3aWR0aDogMjVyZW07XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBnYXA6IDRyZW07XFxufVxcblxcbiN0YXNrQ29udGFpbmVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAycmVtO1xcbn1cXG5cXG4udGFza0JveCB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAxcmVtO1xcbn1cXG5cXG4uY2hlY2tib3gge1xcbiAgICAtd2Via2l0LWFwcGVhcmFuY2U6IG5vbmU7XFxuICAgIGFwcGVhcmFuY2U6IG5vbmU7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgaGVpZ2h0OiAxLjJyZW07XFxuICAgIHdpZHRoOiAxLjJyZW07XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLXByaW1hcnktZGFyayk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDVweDtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodCk7XFxuICAgIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMC4wNzVyZW0pO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBwbGFjZS1jb250ZW50OiBjZW50ZXI7XFxufVxcblxcbi5jaGVja2JveDo6YWZ0ZXIge1xcbiAgICBjb250ZW50OiBcXFwiXFxcIjtcXG4gICAgaGVpZ2h0OiAwLjY1cmVtO1xcbiAgICB3aWR0aDogMC42NXJlbTtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgwKTtcXG4gICAgdHJhbnNmb3JtLW9yaWdpbjogYm90dG9tIGxlZnQ7XFxuICAgIHRyYW5zaXRpb246IDEyMG1zIGVhc2UtaW4tb3V0O1xcbiAgICBib3gtc2hhZG93OiBpbnNldCAxcmVtIDFyZW0gdmFyKC0tcHJpbWFyeS1kYXJrKTtcXG4gICAgY2xpcC1wYXRoOiBwb2x5Z29uKDE0JSA0NCUsIDAgNjUlLCA1MCUgMTAwJSwgMTAwJSAxNiUsIDgwJSAwJSwgNDMlIDYyJSk7XFxufVxcblxcbi5jaGVja2JveDpjaGVja2VkOjphZnRlciB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMSk7XFxufVxcblxcbi5zbWFsbGVyIHtcXG4gICAgd2lkdGg6IDFyZW07XFxuICAgIGhlaWdodDogMXJlbTtcXG59XFxuXFxuLnRhc2tUZXh0IHtcXG4gICAgd2lkdGg6IDIwcmVtO1xcbiAgICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgICBmb250LXNpemU6IDEuMjVyZW07XFxuICAgIHRyYW5zaXRpb246IC4yNXM7XFxufVxcblxcbi50YXNrVGV4dDpob3ZlciB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMTUpO1xcbn1cXG5cXG4ubWVzc2FnZSB7XFxuICAgIG1hcmdpbi10b3A6IDIyNXB4O1xcbiAgICBhbGlnbi1zZWxmOiBjZW50ZXI7XFxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xcbiAgICBmb250LXdlaWdodDogMzAwO1xcbn1cXG5cXG5Aa2V5ZnJhbWVzIGNvbXBsZXRlZCB7XFxuICAgIGZyb20geyB0ZXh0LWRlY29yYXRpb24tY29sb3I6IHRyYW5zcGFyZW50OyB9XFxuICAgIHRvIHsgdGV4dC1kZWNvcmF0aW9uLWNvbG9yOiBhdXRvOyB9XFxufVxcbiAgLmNvbXBsZXRlZCB7ICBcXG4gICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7XFxuICAgIGFuaW1hdGlvbjogY29tcGxldGVkIC41cyBub3JtYWw7XFxuICB9XFxuXFxuI3F1aWNrQWRkQmFyIHtcXG4gICAgbWFyZ2luLXRvcDogYXV0bztcXG4gICAgZGlzcGxheTogZmxleDtcXG59XFxuXFxuI3F1aWNrQWRkVGFzayB7XFxuICAgIGhlaWdodDogMy4xNXJlbTtcXG4gICAgd2lkdGg6IDE4cmVtO1xcbiAgICBib3JkZXI6IDAuNXB4IHNvbGlkIHZhcigtLWFjY2VudC1zZWNvbmRhcnkpO1xcbiAgICBib3JkZXItdG9wLWxlZnQtcmFkaXVzOiAxcmVtO1xcbiAgICBib3JkZXItYm90dG9tLWxlZnQtcmFkaXVzOiAxcmVtO1xcbiAgICBwYWRkaW5nOiAwIDFyZW07XFxuICAgIGZvbnQtc2l6ZTogLjc1cmVtO1xcbn1cXG5cXG4jc3VibWl0UXVpY2tBZGQge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGhlaWdodDogMy4ycmVtO1xcbiAgICB3aWR0aDogNXJlbTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBib3JkZXItdG9wLXJpZ2h0LXJhZGl1czogMXJlbTtcXG4gICAgYm9yZGVyLWJvdHRvbS1yaWdodC1yYWRpdXM6IDFyZW07XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLWFjY2VudC1tYWluKTtcXG4gICAgZm9udC1zaXplOiAuNzVyZW07XFxuICAgIHRyYW5zaXRpb246IC4yNXM7XFxufVxcblxcbiNzdWJtaXRRdWlja0FkZDpob3ZlciB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wNSk7XFxufVxcblxcblxcbi8qIEVkaXRvckNhcmQgc3R5bGluZyAqL1xcbiNlZGl0b3JDYXJkQ29udGFpbmVyIHtcXG4gICAgY3Vyc29yOiBkZWZhdWx0O1xcbiAgICBtYXgtd2lkdGg6IDI1cmVtO1xcbiAgICBtaW4taGVpZ2h0OiA2NzVweDtcXG4gICAgYm9yZGVyOiAycHggc29saWQgdmFyKC0tYWNjZW50LXNlY29uZGFyeSk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDFyZW07XFxuICAgIHBhZGRpbmc6IDJyZW07XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMnJlbTtcXG59XFxuXFxuI2VkaXRvckZvcm0ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDJyZW07XFxufVxcblxcbiNjdXJyZW50VGFzayB7XFxuICAgIG1heC13aWR0aDogMjByZW07XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodCk7XFxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xcbiAgICBmb250LXdlaWdodDogNzAwO1xcbn1cXG5cXG4jcHJpb3JpdHlDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBnYXA6IDIuNXJlbTtcXG59XFxuXFxuLnByaW9yaXR5IHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBoZWlnaHQ6IDIuNXJlbTtcXG4gICAgd2lkdGg6IDVyZW07XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYm9yZGVyLXJhZGl1czogNXJlbTtcXG4gICAgZm9udC1zaXplOiAwLjhyZW07XFxuICAgIHRyYW5zaXRpb246IC4yNXM7XFxufVxcblxcbi5wcmlvcml0eTpob3ZlciB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcXG59XFxuXFxuLmNsaWNrZWQge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XFxufVxcblxcbi5jcml0aWNhbCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZGE0YWY7XFxufVxcblxcbi5pbXBvcnRhbnQge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmNkMzRkO1xcbn1cXG5cXG4ubG93IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzZlZTdiNyA7XFxufVxcblxcbi5lZGl0T3B0aW9uIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAwLjI1cmVtO1xcbn1cXG5cXG4jZHVlRGF0ZSxcXG4jbGlzdERyb3Bkb3duIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBoZWlnaHQ6IDJyZW07XFxuICAgIHdpZHRoOiAxMi41cmVtO1xcbiAgICBib3JkZXI6IDFweCBzb2xpZCB2YXIoLS1wcmltYXJ5LWRhcmspO1xcbiAgICBib3JkZXItcmFkaXVzOiAwLjM1cmVtO1xcbiAgICBwYWRkaW5nLWlubGluZTogLjVyZW07XFxuICAgIGJhY2tncm91bmQtY29sb3I6IHZhcigtLXByaW1hcnktbGlnaHQpO1xcbiAgICBmb250LXNpemU6IDAuODVyZW07XFxuICAgIHRyYW5zaXRpb246IC4yNXM7XFxufVxcblxcbiNkdWVEYXRlOmhvdmVyLFxcbiNsaXN0RHJvcGRvd246aG92ZXIge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDE1KTtcXG59XFxuXFxuI3N1YnRhc2tDb250YWluZXIge1xcbiAgICBtYXJnaW4tdG9wOiAuMjVyZW07XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogLjI1cmVtO1xcbn1cXG5cXG4jY3JlYXRlU3VidGFza0J1dHRvbiB7XFxuICAgIG1hcmdpbjogMCAwIDAgMXJlbTtcXG4gICAgZm9udC1zaXplOiAxcmVtO1xcbiAgICBhbGlnbi1zZWxmOiBmbGV4LXN0YXJ0O1xcbn1cXG5cXG4uc3VidGFza0JveCB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgbWFyZ2luLWxlZnQ6IDFyZW07XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICAgIGdhcDogMC41cmVtO1xcbn1cXG5cXG4uc3VidGFza1RleHQge1xcbiAgICB3aWR0aDogMTVyZW07XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodCk7XFxuICAgIGZvbnQtc2l6ZTogMXJlbTtcXG59XFxuXFxuI25vdGVzIHtcXG4gICAgaGVpZ2h0OiA1cmVtO1xcbiAgICB3aWR0aDogMjByZW07XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLXByaW1hcnktZGFyayk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDAuMzVyZW07XFxuICAgIHBhZGRpbmc6IDAuNXJlbTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodCk7XFxuICAgIHJlc2l6ZTogbm9uZTtcXG4gICAgdHJhbnNpdGlvbjogLjI1cztcXG59XFxuXFxuI25vdGVzOmhvdmVyIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAxKSA7XFxufVxcblxcbiNkZWxldGVUYXNrOmhvdmVyLFxcbiNzdWJtaXRUYXNrOmhvdmVyIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjEpO1xcbn1cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGUuY3NzXCJdLFwibmFtZXNcIjpbXSxcIm1hcHBpbmdzXCI6XCJBQUFBO0lBQ0kscUJBQXFCO0lBQ3JCLDBEQUFtRDtJQUNuRCxnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0kscUJBQXFCO0lBQ3JCLDBEQUFnRDtJQUNoRCxnQkFBZ0I7SUFDaEIsa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksdUJBQXVCO0lBQ3ZCLHdCQUF3QjtJQUN4QiwyQkFBMkI7SUFDM0Isc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksU0FBUztJQUNULFVBQVU7SUFDVixhQUFhO0lBQ2IsaUNBQWlDO0lBQ2pDLHFEQUFxRDtJQUNyRCwwQkFBMEI7QUFDOUI7O0FBRUE7SUFDSSxzQ0FBc0M7QUFDMUM7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsY0FBYztJQUNkLGdEQUFnRDtJQUNoRCxrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLG1CQUFtQjtJQUNuQixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxZQUFZO0lBQ1osNkNBQTZDO0lBQzdDLDBCQUEwQjtJQUMxQixhQUFhO0lBQ2IsdUJBQXVCO0lBQ3ZCLG1CQUFtQjtJQUNuQixTQUFTO0FBQ2I7OztBQUdBLGlCQUFpQjtBQUNqQjtJQUNJLGFBQWE7SUFDYixnQ0FBZ0M7QUFDcEM7O0FBRUE7SUFDSSxZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLFlBQVk7SUFDWixhQUFhO0lBQ2IsK0NBQStDO0lBQy9DLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLG1CQUFtQjtJQUNuQixXQUFXO0FBQ2Y7O0FBRUE7OztJQUdJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsbUJBQW1CO0lBQ25CLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsYUFBYTtJQUNiLDhCQUE4QjtJQUM5Qiw4QkFBOEI7SUFDOUIsbUJBQW1CO0lBQ25CLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGtCQUFrQjtJQUNsQixrQkFBa0I7SUFDbEIsYUFBYTtJQUNiLDhCQUE4QjtJQUM5QixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsWUFBWTtJQUNaLGtCQUFrQjtJQUNsQixZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixvQ0FBb0M7SUFDcEMsZUFBZTtJQUNmLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixZQUFZO0lBQ1osWUFBWTtJQUNaLHNDQUFzQztJQUN0QyxrQkFBa0I7SUFDbEIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksY0FBYztJQUNkLGFBQWE7SUFDYixnQkFBZ0I7QUFDcEI7O0FBRUE7O0lBRUksc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksY0FBYztJQUNkLGVBQWU7QUFDbkI7O0FBRUE7SUFDSSxlQUFlO0FBQ25COztBQUVBO0lBQ0ksYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixtQkFBbUI7SUFDbkIsV0FBVztBQUNmOztBQUVBO0lBQ0ksZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0kscUJBQXFCO0FBQ3pCOzs7QUFHQSxxQkFBcUI7QUFDckI7O0lBRUksZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQix5Q0FBeUM7SUFDekMsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGFBQWE7SUFDYiw4QkFBOEI7SUFDOUIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLGtCQUFrQjtJQUNsQixZQUFZO0FBQ2hCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLFVBQVU7SUFDVixRQUFRO0lBQ1Isa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZix5Q0FBeUM7SUFDekMsb0JBQW9CO0lBQ3BCLGFBQWE7SUFDYix1QkFBdUI7SUFDdkIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksZUFBZTtJQUNmLFlBQVk7SUFDWixzQ0FBc0M7SUFDdEMsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksc0JBQXNCO0FBQzFCOztBQUVBO0lBQ0ksa0JBQWtCO0FBQ3RCOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixzQ0FBc0M7SUFDdEMsaUJBQWlCO0lBQ2pCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixZQUFZO0lBQ1osYUFBYTtJQUNiLHVCQUF1QjtJQUN2QixTQUFTO0FBQ2I7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGVBQWU7SUFDZixhQUFhO0lBQ2IsbUJBQW1CO0lBQ25CLFNBQVM7QUFDYjs7QUFFQTtJQUNJLHdCQUF3QjtJQUN4QixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLGNBQWM7SUFDZCxhQUFhO0lBQ2IscUNBQXFDO0lBQ3JDLGtCQUFrQjtJQUNsQixzQ0FBc0M7SUFDdEMsZ0NBQWdDO0lBQ2hDLGFBQWE7SUFDYixxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxXQUFXO0lBQ1gsZUFBZTtJQUNmLGNBQWM7SUFDZCxtQkFBbUI7SUFDbkIsNkJBQTZCO0lBQzdCLDZCQUE2QjtJQUM3QiwrQ0FBK0M7SUFDL0MsdUVBQXVFO0FBQzNFOztBQUVBO0lBQ0ksbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxZQUFZO0lBQ1osZ0JBQWdCO0lBQ2hCLGtCQUFrQjtJQUNsQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSx1QkFBdUI7QUFDM0I7O0FBRUE7SUFDSSxpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGlCQUFpQjtJQUNqQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxPQUFPLGtDQUFrQyxFQUFFO0lBQzNDLEtBQUssMkJBQTJCLEVBQUU7QUFDdEM7RUFDRTtJQUNFLDZCQUE2QjtJQUM3QiwrQkFBK0I7RUFDakM7O0FBRUY7SUFDSSxnQkFBZ0I7SUFDaEIsYUFBYTtBQUNqQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixZQUFZO0lBQ1osMkNBQTJDO0lBQzNDLDRCQUE0QjtJQUM1QiwrQkFBK0I7SUFDL0IsZUFBZTtJQUNmLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGVBQWU7SUFDZixjQUFjO0lBQ2QsV0FBVztJQUNYLFlBQVk7SUFDWiw2QkFBNkI7SUFDN0IsZ0NBQWdDO0lBQ2hDLG9DQUFvQztJQUNwQyxpQkFBaUI7SUFDakIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksc0JBQXNCO0FBQzFCOzs7QUFHQSx1QkFBdUI7QUFDdkI7SUFDSSxlQUFlO0lBQ2YsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQix5Q0FBeUM7SUFDekMsbUJBQW1CO0lBQ25CLGFBQWE7SUFDYixhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsU0FBUztBQUNiOztBQUVBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixzQ0FBc0M7SUFDdEMsaUJBQWlCO0lBQ2pCLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGFBQWE7SUFDYixXQUFXO0FBQ2Y7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsY0FBYztJQUNkLFdBQVc7SUFDWCxZQUFZO0lBQ1osbUJBQW1CO0lBQ25CLGlCQUFpQjtJQUNqQixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSxxQkFBcUI7QUFDekI7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSx5QkFBeUI7QUFDN0I7O0FBRUE7SUFDSSwwQkFBMEI7QUFDOUI7O0FBRUE7SUFDSSxhQUFhO0lBQ2Isc0JBQXNCO0lBQ3RCLFlBQVk7QUFDaEI7O0FBRUE7O0lBRUksZUFBZTtJQUNmLFlBQVk7SUFDWixjQUFjO0lBQ2QscUNBQXFDO0lBQ3JDLHNCQUFzQjtJQUN0QixxQkFBcUI7SUFDckIsc0NBQXNDO0lBQ3RDLGtCQUFrQjtJQUNsQixnQkFBZ0I7QUFDcEI7O0FBRUE7O0lBRUksdUJBQXVCO0FBQzNCOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGFBQWE7SUFDYixzQkFBc0I7SUFDdEIsV0FBVztBQUNmOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGVBQWU7SUFDZixzQkFBc0I7QUFDMUI7O0FBRUE7SUFDSSxlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLGFBQWE7SUFDYixtQkFBbUI7SUFDbkIsV0FBVztBQUNmOztBQUVBO0lBQ0ksWUFBWTtJQUNaLFlBQVk7SUFDWixzQ0FBc0M7SUFDdEMsZUFBZTtBQUNuQjs7QUFFQTtJQUNJLFlBQVk7SUFDWixZQUFZO0lBQ1oscUNBQXFDO0lBQ3JDLHNCQUFzQjtJQUN0QixlQUFlO0lBQ2Ysc0NBQXNDO0lBQ3RDLFlBQVk7SUFDWixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSx1QkFBdUI7QUFDM0I7O0FBRUE7O0lBRUkscUJBQXFCO0FBQ3pCXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBmb250LWZhY2Uge1xcbiAgICBmb250LWZhbWlseTogJ1JvYm90byc7XFxuICAgIHNyYzogdXJsKCcuL2ZvbnQvUm9ib3RvLVJlZ3VsYXIudHRmJykgZm9ybWF0KCd0dGYnKTtcXG4gICAgZm9udC13ZWlnaHQ6IDQwMDtcXG4gICAgZm9udC1zdHlsZTogbm9ybWFsO1xcbn1cXG5cXG5AZm9udC1mYWNlIHtcXG4gICAgZm9udC1mYW1pbHk6ICdSb2JvdG8nO1xcbiAgICBzcmM6IHVybCgnLi9mb250L1JvYm90by1Cb2xkLnR0ZicpIGZvcm1hdCgndHRmJyk7XFxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XFxuICAgIGZvbnQtc3R5bGU6IG5vcm1hbDtcXG59XFxuXFxuOnJvb3Qge1xcbiAgICAtLXByaW1hcnktZGFyazogIzFmMjkzNztcXG4gICAgLS1wcmltYXJ5LWxpZ2h0OiAjZjlmYWZiO1xcbiAgICAtLWFjY2VudC1zZWNvbmRhcnk6ICNlNWU3ZWI7XFxuICAgIC0tYWNjZW50LW1haW46ICMwZWE1ZTk7XFxufVxcblxcbioge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIHBhZGRpbmc6IDA7XFxuICAgIG91dGxpbmU6IG5vbmU7XFxuICAgIGZvbnQtZmFtaWx5OiAnUm9ib3RvJywgc2Fucy1zZXJpZjtcXG4gICAgZm9udC1zaXplOiBjbGFtcCgxcmVtLCBjYWxjKDAuNXJlbSArIDAuNXZ3KSwgMS43NXJlbSk7XFxuICAgIGNvbG9yOiB2YXIoLS1wcmltYXJ5LWRhcmspO1xcbn1cXG5cXG5ib2R5IHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodCk7XFxufVxcblxcbmgxIHtcXG4gICAgZm9udC1zaXplOiAzcmVtO1xcbiAgICBmb250LXdlaWdodDogNzAwO1xcbn1cXG5cXG5oMiB7XFxuICAgIGZvbnQtc2l6ZTogMi41cmVtO1xcbiAgICBmb250LXdlaWdodDogNzAwO1xcbn1cXG5cXG5oNCB7XFxuICAgIGZvbnQtc2l6ZTogMS41cmVtO1xcbiAgICBmb250LXdlaWdodDogNzAwO1xcbn1cXG5cXG5oZWFkZXIge1xcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XFxuICAgIGhlaWdodDogMS41cmVtO1xcbiAgICBib3JkZXItYm90dG9tOiAycHggc29saWQgdmFyKC0tYWNjZW50LXNlY29uZGFyeSk7XFxuICAgIHBhZGRpbmc6IDJyZW0gM3JlbTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAxcmVtO1xcbn1cXG5cXG5mb290ZXIge1xcbiAgICBoZWlnaHQ6IDJyZW07XFxuICAgIGJvcmRlci10b3A6IDJweCBzb2xpZCB2YXIoLS1hY2NlbnQtc2Vjb25kYXJ5KTtcXG4gICAgcGFkZGluZzogMC41cmVtIDAgMC41cmVtIDA7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDNyZW07XFxufVxcblxcblxcbi8qIEJvZHkgc3R5bGluZyAqL1xcbiNtYWluIHtcXG4gICAgZGlzcGxheTogZ3JpZDtcXG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAuMjVmciAyZnI7XFxufVxcblxcbiNzaWRlYmFyIHtcXG4gICAgaGVpZ2h0OiBhdXRvO1xcbiAgICBtYXgtaGVpZ2h0OiA4MjBweDtcXG4gICAgd2lkdGg6IDEzcmVtO1xcbiAgICBwYWRkaW5nOiAycmVtO1xcbiAgICBib3JkZXItcmlnaHQ6IDJweCBzb2xpZCB2YXIoLS1hY2NlbnQtc2Vjb25kYXJ5KTtcXG4gICAgZ3JpZC1jb2x1bW46IDEgLyAyO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDIuNXJlbTtcXG59XFxuXFxuI25hdkxpc3RzLFxcbiN1c2VyTGlzdHMsXFxuI2xpc3RDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDEuMjVyZW07XFxufVxcblxcbi5saXN0Qm94IHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBkaXNwbGF5OiBncmlkO1xcbiAgICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IDJmciAxZnI7XFxuICAgIGp1c3RpZnktY29udGVudDogc3BhY2UtYmV0d2VlbjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAwLjVyZW07XFxufVxcblxcbiNjb250ZW50IHtcXG4gICAgcGFkZGluZzogMnJlbSA3cmVtO1xcbiAgICBncmlkLWNvbHVtbjogMiAvIDM7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIGdyaWQtdGVtcGxhdGUtY29sdW1uczogMWZyIDFmcjtcXG4gICAgZ2FwOiAycmVtO1xcbn1cXG5cXG4uYm9yZGVyQnV0dG9uIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBoZWlnaHQ6IDNyZW07XFxuICAgIHdpZHRoOiBtYXgtY29udGVudDtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBib3JkZXItcmFkaXVzOiAxcmVtO1xcbiAgICBwYWRkaW5nOiAwIDEuNXJlbTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWNjZW50LW1haW4pO1xcbiAgICBmb250LXNpemU6IDFyZW07XFxuICAgIHRyYW5zaXRpb246IC4yNXM7XFxufVxcblxcbi50ZXh0QnV0dG9uIHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBoZWlnaHQ6IDJyZW07XFxuICAgIGJvcmRlcjogbm9uZTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodCk7XFxuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcXG4gICAgdHJhbnNpdGlvbjogLjI1cztcXG59XFxuXFxuLmltYWdlQnV0dG9uIHtcXG4gICAgaGVpZ2h0OiAxLjVyZW07XFxuICAgIHdpZHRoOiAxLjVyZW07XFxuICAgIHRyYW5zaXRpb246IC4yNXM7XFxufVxcblxcbi5ib3JkZXJCdXR0b246aG92ZXIsXFxuLnRleHRCdXR0b246aG92ZXIge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xcbn1cXG5cXG4uaW1hZ2VCdXR0b246aG92ZXIge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMjUpO1xcbn1cXG5cXG4uZGVsZXRlIHtcXG4gICAgY29sb3I6ICNkYzI2MjY7XFxuICAgIGZvbnQtc2l6ZTogMXJlbTtcXG59XFxuXFxuLnN1Ym1pdCB7XFxuICAgIGZvbnQtc2l6ZTogMXJlbTtcXG59XFxuXFxuLmxpbmtCb3gge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAuNzVyZW07XFxufVxcblxcbiNnaXRodWJJY29uQ29udGFpbmVyIHtcXG4gICAgdHJhbnNpdGlvbjogLjI1cztcXG59XFxuXFxuI2dpdGh1Ykljb25Db250YWluZXI6aG92ZXIge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMik7XFxufVxcblxcblxcbi8qIFRvZG9DYXJkIHN0eWxpbmcgKi9cXG4jdG9kb0NhcmRDb250YWluZXIsXFxuI2xpc3RDYXJkQ29udGFpbmVyIHtcXG4gICAgbWF4LXdpZHRoOiAyNXJlbTtcXG4gICAgbWluLWhlaWdodDogNjc1cHg7XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWFjY2VudC1zZWNvbmRhcnkpO1xcbiAgICBib3JkZXItcmFkaXVzOiAxcmVtO1xcbiAgICBwYWRkaW5nOiAycmVtO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDJyZW07XFxufVxcblxcbiN0b2RvSGVhZGVyIHtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuO1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbn1cXG5cXG4jbWVudUNvbnRhaW5lciB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgICBmbG9hdDogcmlnaHQ7XFxufVxcblxcbiNtZW51Qm94IHtcXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgICB6LWluZGV4OiAxO1xcbiAgICByaWdodDogMDtcXG4gICAgd2lkdGg6IG1heC1jb250ZW50O1xcbiAgICBwYWRkaW5nOiAuNzVyZW07XFxuICAgIGJvcmRlcjogMnB4IHNvbGlkIHZhcigtLWFjY2VudC1zZWNvbmRhcnkpO1xcbiAgICBib3JkZXItcmFkaXVzOiAuNXJlbTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxufVxcblxcbiNjbGVhckNvbXBsZXRlZCB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWxpZ2h0KTtcXG4gICAgZm9udC1zaXplOiAuOXJlbTtcXG59XFxuXFxuI2NsZWFyQ29tcGxldGVkOmhvdmVyIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcXG59XFxuXFxuLmhpZGRlbiB7XFxuICAgIHZpc2liaWxpdHk6IGhpZGRlbjtcXG59XFxuXFxuLmxpc3RJbmZvIHtcXG4gICAgbWF4LXdpZHRoOiAyMHJlbTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWxpZ2h0KTtcXG4gICAgZm9udC1zaXplOiAyLjVyZW07XFxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XFxufVxcblxcbiNsaXN0RGVzY3JpcHRpb24ge1xcbiAgICBmb250LXNpemU6IDEuNXJlbTtcXG59XFxuXFxuLmJ1dHRvbkNvbnRhaW5lciB7XFxuICAgIG1hcmdpbi10b3A6IGF1dG87XFxuICAgIHdpZHRoOiAyNXJlbTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XFxuICAgIGdhcDogNHJlbTtcXG59XFxuXFxuI3Rhc2tDb250YWluZXIge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDJyZW07XFxufVxcblxcbi50YXNrQm94IHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xcbiAgICBnYXA6IDFyZW07XFxufVxcblxcbi5jaGVja2JveCB7XFxuICAgIC13ZWJraXQtYXBwZWFyYW5jZTogbm9uZTtcXG4gICAgYXBwZWFyYW5jZTogbm9uZTtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBoZWlnaHQ6IDEuMnJlbTtcXG4gICAgd2lkdGg6IDEuMnJlbTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tcHJpbWFyeS1kYXJrKTtcXG4gICAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWxpZ2h0KTtcXG4gICAgdHJhbnNmb3JtOiB0cmFuc2xhdGVZKC0wLjA3NXJlbSk7XFxuICAgIGRpc3BsYXk6IGdyaWQ7XFxuICAgIHBsYWNlLWNvbnRlbnQ6IGNlbnRlcjtcXG59XFxuXFxuLmNoZWNrYm94OjphZnRlciB7XFxuICAgIGNvbnRlbnQ6IFxcXCJcXFwiO1xcbiAgICBoZWlnaHQ6IDAuNjVyZW07XFxuICAgIHdpZHRoOiAwLjY1cmVtO1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDApO1xcbiAgICB0cmFuc2Zvcm0tb3JpZ2luOiBib3R0b20gbGVmdDtcXG4gICAgdHJhbnNpdGlvbjogMTIwbXMgZWFzZS1pbi1vdXQ7XFxuICAgIGJveC1zaGFkb3c6IGluc2V0IDFyZW0gMXJlbSB2YXIoLS1wcmltYXJ5LWRhcmspO1xcbiAgICBjbGlwLXBhdGg6IHBvbHlnb24oMTQlIDQ0JSwgMCA2NSUsIDUwJSAxMDAlLCAxMDAlIDE2JSwgODAlIDAlLCA0MyUgNjIlKTtcXG59XFxuXFxuLmNoZWNrYm94OmNoZWNrZWQ6OmFmdGVyIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxKTtcXG59XFxuXFxuLnNtYWxsZXIge1xcbiAgICB3aWR0aDogMXJlbTtcXG4gICAgaGVpZ2h0OiAxcmVtO1xcbn1cXG5cXG4udGFza1RleHQge1xcbiAgICB3aWR0aDogMjByZW07XFxuICAgIG92ZXJmbG93OiBoaWRkZW47XFxuICAgIGZvbnQtc2l6ZTogMS4yNXJlbTtcXG4gICAgdHJhbnNpdGlvbjogLjI1cztcXG59XFxuXFxuLnRhc2tUZXh0OmhvdmVyIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjAxNSk7XFxufVxcblxcbi5tZXNzYWdlIHtcXG4gICAgbWFyZ2luLXRvcDogMjI1cHg7XFxuICAgIGFsaWduLXNlbGY6IGNlbnRlcjtcXG4gICAgZm9udC1zaXplOiAxLjVyZW07XFxuICAgIGZvbnQtd2VpZ2h0OiAzMDA7XFxufVxcblxcbkBrZXlmcmFtZXMgY29tcGxldGVkIHtcXG4gICAgZnJvbSB7IHRleHQtZGVjb3JhdGlvbi1jb2xvcjogdHJhbnNwYXJlbnQ7IH1cXG4gICAgdG8geyB0ZXh0LWRlY29yYXRpb24tY29sb3I6IGF1dG87IH1cXG59XFxuICAuY29tcGxldGVkIHsgIFxcbiAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDtcXG4gICAgYW5pbWF0aW9uOiBjb21wbGV0ZWQgLjVzIG5vcm1hbDtcXG4gIH1cXG5cXG4jcXVpY2tBZGRCYXIge1xcbiAgICBtYXJnaW4tdG9wOiBhdXRvO1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbn1cXG5cXG4jcXVpY2tBZGRUYXNrIHtcXG4gICAgaGVpZ2h0OiAzLjE1cmVtO1xcbiAgICB3aWR0aDogMThyZW07XFxuICAgIGJvcmRlcjogMC41cHggc29saWQgdmFyKC0tYWNjZW50LXNlY29uZGFyeSk7XFxuICAgIGJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDFyZW07XFxuICAgIGJvcmRlci1ib3R0b20tbGVmdC1yYWRpdXM6IDFyZW07XFxuICAgIHBhZGRpbmc6IDAgMXJlbTtcXG4gICAgZm9udC1zaXplOiAuNzVyZW07XFxufVxcblxcbiNzdWJtaXRRdWlja0FkZCB7XFxuICAgIGN1cnNvcjogcG9pbnRlcjtcXG4gICAgaGVpZ2h0OiAzLjJyZW07XFxuICAgIHdpZHRoOiA1cmVtO1xcbiAgICBib3JkZXI6IG5vbmU7XFxuICAgIGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAxcmVtO1xcbiAgICBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMXJlbTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tYWNjZW50LW1haW4pO1xcbiAgICBmb250LXNpemU6IC43NXJlbTtcXG4gICAgdHJhbnNpdGlvbjogLjI1cztcXG59XFxuXFxuI3N1Ym1pdFF1aWNrQWRkOmhvdmVyIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjA1KTtcXG59XFxuXFxuXFxuLyogRWRpdG9yQ2FyZCBzdHlsaW5nICovXFxuI2VkaXRvckNhcmRDb250YWluZXIge1xcbiAgICBjdXJzb3I6IGRlZmF1bHQ7XFxuICAgIG1heC13aWR0aDogMjVyZW07XFxuICAgIG1pbi1oZWlnaHQ6IDY3NXB4O1xcbiAgICBib3JkZXI6IDJweCBzb2xpZCB2YXIoLS1hY2NlbnQtc2Vjb25kYXJ5KTtcXG4gICAgYm9yZGVyLXJhZGl1czogMXJlbTtcXG4gICAgcGFkZGluZzogMnJlbTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAycmVtO1xcbn1cXG5cXG4jZWRpdG9yRm9ybSB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIGdhcDogMnJlbTtcXG59XFxuXFxuI2N1cnJlbnRUYXNrIHtcXG4gICAgbWF4LXdpZHRoOiAyMHJlbTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWxpZ2h0KTtcXG4gICAgZm9udC1zaXplOiAxLjVyZW07XFxuICAgIGZvbnQtd2VpZ2h0OiA3MDA7XFxufVxcblxcbiNwcmlvcml0eUNvbnRhaW5lciB7XFxuICAgIGRpc3BsYXk6IGZsZXg7XFxuICAgIGdhcDogMi41cmVtO1xcbn1cXG5cXG4ucHJpb3JpdHkge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGhlaWdodDogMi41cmVtO1xcbiAgICB3aWR0aDogNXJlbTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBib3JkZXItcmFkaXVzOiA1cmVtO1xcbiAgICBmb250LXNpemU6IDAuOHJlbTtcXG4gICAgdHJhbnNpdGlvbjogLjI1cztcXG59XFxuXFxuLnByaW9yaXR5OmhvdmVyIHtcXG4gICAgdHJhbnNmb3JtOiBzY2FsZSgxLjIpO1xcbn1cXG5cXG4uY2xpY2tlZCB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4yKTtcXG59XFxuXFxuLmNyaXRpY2FsIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2ZkYTRhZjtcXG59XFxuXFxuLmltcG9ydGFudCB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmY2QzNGQ7XFxufVxcblxcbi5sb3cge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjNmVlN2I3IDtcXG59XFxuXFxuLmVkaXRPcHRpb24ge1xcbiAgICBkaXNwbGF5OiBmbGV4O1xcbiAgICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xcbiAgICBnYXA6IDAuMjVyZW07XFxufVxcblxcbiNkdWVEYXRlLFxcbiNsaXN0RHJvcGRvd24ge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7XFxuICAgIGhlaWdodDogMnJlbTtcXG4gICAgd2lkdGg6IDEyLjVyZW07XFxuICAgIGJvcmRlcjogMXB4IHNvbGlkIHZhcigtLXByaW1hcnktZGFyayk7XFxuICAgIGJvcmRlci1yYWRpdXM6IDAuMzVyZW07XFxuICAgIHBhZGRpbmctaW5saW5lOiAuNXJlbTtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdmFyKC0tcHJpbWFyeS1saWdodCk7XFxuICAgIGZvbnQtc2l6ZTogMC44NXJlbTtcXG4gICAgdHJhbnNpdGlvbjogLjI1cztcXG59XFxuXFxuI2R1ZURhdGU6aG92ZXIsXFxuI2xpc3REcm9wZG93bjpob3ZlciB7XFxuICAgIHRyYW5zZm9ybTogc2NhbGUoMS4wMTUpO1xcbn1cXG5cXG4jc3VidGFza0NvbnRhaW5lciB7XFxuICAgIG1hcmdpbi10b3A6IC4yNXJlbTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgZ2FwOiAuMjVyZW07XFxufVxcblxcbiNjcmVhdGVTdWJ0YXNrQnV0dG9uIHtcXG4gICAgbWFyZ2luOiAwIDAgMCAxcmVtO1xcbiAgICBmb250LXNpemU6IDFyZW07XFxuICAgIGFsaWduLXNlbGY6IGZsZXgtc3RhcnQ7XFxufVxcblxcbi5zdWJ0YXNrQm94IHtcXG4gICAgY3Vyc29yOiBwb2ludGVyO1xcbiAgICBtYXJnaW4tbGVmdDogMXJlbTtcXG4gICAgZGlzcGxheTogZmxleDtcXG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gICAgZ2FwOiAwLjVyZW07XFxufVxcblxcbi5zdWJ0YXNrVGV4dCB7XFxuICAgIHdpZHRoOiAxNXJlbTtcXG4gICAgYm9yZGVyOiBub25lO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWxpZ2h0KTtcXG4gICAgZm9udC1zaXplOiAxcmVtO1xcbn1cXG5cXG4jbm90ZXMge1xcbiAgICBoZWlnaHQ6IDVyZW07XFxuICAgIHdpZHRoOiAyMHJlbTtcXG4gICAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tcHJpbWFyeS1kYXJrKTtcXG4gICAgYm9yZGVyLXJhZGl1czogMC4zNXJlbTtcXG4gICAgcGFkZGluZzogMC41cmVtO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1wcmltYXJ5LWxpZ2h0KTtcXG4gICAgcmVzaXplOiBub25lO1xcbiAgICB0cmFuc2l0aW9uOiAuMjVzO1xcbn1cXG5cXG4jbm90ZXM6aG92ZXIge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMDEpIDtcXG59XFxuXFxuI2RlbGV0ZVRhc2s6aG92ZXIsXFxuI3N1Ym1pdFRhc2s6aG92ZXIge1xcbiAgICB0cmFuc2Zvcm06IHNjYWxlKDEuMSk7XFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTsgLy8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xuXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcblxuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAoaXRlbVsyXSkge1xuICAgICAgICBjb250ZW50ICs9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpO1xuICAgICAgfVxuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cblxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuXG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiBjb250ZW50O1xuICAgIH0pLmpvaW4oXCJcIik7XG4gIH07IC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG5cblxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuXG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcblxuICAgIGlmIChkZWR1cGUpIHtcbiAgICAgIGZvciAodmFyIGsgPSAwOyBrIDwgdGhpcy5sZW5ndGg7IGsrKykge1xuICAgICAgICB2YXIgaWQgPSB0aGlzW2tdWzBdO1xuXG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuXG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG5cbiAgICAgIGlmIChkZWR1cGUgJiYgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpdGVtWzBdXSkge1xuICAgICAgICBjb250aW51ZTtcbiAgICAgIH1cblxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgaWYgKHN1cHBvcnRzKSB7XG4gICAgICAgIGlmICghaXRlbVs0XSkge1xuICAgICAgICAgIGl0ZW1bNF0gPSBcIlwiLmNvbmNhdChzdXBwb3J0cyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQoaXRlbVs0XSwgXCIpIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzRdID0gc3VwcG9ydHM7XG4gICAgICAgIH1cbiAgICAgIH1cblxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcblxuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cblxuICBpZiAoIXVybCkge1xuICAgIHJldHVybiB1cmw7XG4gIH1cblxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7IC8vIElmIHVybCBpcyBhbHJlYWR5IHdyYXBwZWQgaW4gcXVvdGVzLCByZW1vdmUgdGhlbVxuXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cblxuICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgdXJsICs9IG9wdGlvbnMuaGFzaDtcbiAgfSAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG5cblxuICBpZiAoL1tcIicoKSBcXHRcXG5dfCglMjApLy50ZXN0KHVybCkgfHwgb3B0aW9ucy5uZWVkUXVvdGVzKSB7XG4gICAgcmV0dXJuIFwiXFxcIlwiLmNvbmNhdCh1cmwucmVwbGFjZSgvXCIvZywgJ1xcXFxcIicpLnJlcGxhY2UoL1xcbi9nLCBcIlxcXFxuXCIpLCBcIlxcXCJcIik7XG4gIH1cblxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcblxuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuXG4gIGlmICh0eXBlb2YgYnRvYSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgdmFyIGJhc2U2NCA9IGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KGNzc01hcHBpbmcpKSkpO1xuICAgIHZhciBkYXRhID0gXCJzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtjaGFyc2V0PXV0Zi04O2Jhc2U2NCxcIi5jb25jYXQoYmFzZTY0KTtcbiAgICB2YXIgc291cmNlTWFwcGluZyA9IFwiLyojIFwiLmNvbmNhdChkYXRhLCBcIiAqL1wiKTtcbiAgICB2YXIgc291cmNlVVJMcyA9IGNzc01hcHBpbmcuc291cmNlcy5tYXAoZnVuY3Rpb24gKHNvdXJjZSkge1xuICAgICAgcmV0dXJuIFwiLyojIHNvdXJjZVVSTD1cIi5jb25jYXQoY3NzTWFwcGluZy5zb3VyY2VSb290IHx8IFwiXCIpLmNvbmNhdChzb3VyY2UsIFwiICovXCIpO1xuICAgIH0pO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KHNvdXJjZVVSTHMpLmNvbmNhdChbc291cmNlTWFwcGluZ10pLmpvaW4oXCJcXG5cIik7XG4gIH1cblxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcblxuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXNJbkRPTS5sZW5ndGg7IGkrKykge1xuICAgIGlmIChzdHlsZXNJbkRPTVtpXS5pZGVudGlmaWVyID09PSBpZGVudGlmaWVyKSB7XG4gICAgICByZXN1bHQgPSBpO1xuICAgICAgYnJlYWs7XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG5cbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBsaXN0Lmxlbmd0aDsgaSsrKSB7XG4gICAgdmFyIGl0ZW0gPSBsaXN0W2ldO1xuICAgIHZhciBpZCA9IG9wdGlvbnMuYmFzZSA/IGl0ZW1bMF0gKyBvcHRpb25zLmJhc2UgOiBpdGVtWzBdO1xuICAgIHZhciBjb3VudCA9IGlkQ291bnRNYXBbaWRdIHx8IDA7XG4gICAgdmFyIGlkZW50aWZpZXIgPSBcIlwiLmNvbmNhdChpZCwgXCIgXCIpLmNvbmNhdChjb3VudCk7XG4gICAgaWRDb3VudE1hcFtpZF0gPSBjb3VudCArIDE7XG4gICAgdmFyIGluZGV4QnlJZGVudGlmaWVyID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgdmFyIG9iaiA9IHtcbiAgICAgIGNzczogaXRlbVsxXSxcbiAgICAgIG1lZGlhOiBpdGVtWzJdLFxuICAgICAgc291cmNlTWFwOiBpdGVtWzNdLFxuICAgICAgc3VwcG9ydHM6IGl0ZW1bNF0sXG4gICAgICBsYXllcjogaXRlbVs1XVxuICAgIH07XG5cbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG5cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG5cbiAgcmV0dXJuIGlkZW50aWZpZXJzO1xufVxuXG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuXG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cblxuICAgICAgYXBpLnVwZGF0ZShvYmogPSBuZXdPYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICBhcGkucmVtb3ZlKCk7XG4gICAgfVxuICB9O1xuXG4gIHJldHVybiB1cGRhdGVyO1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG5cbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxhc3RJZGVudGlmaWVycy5sZW5ndGg7IGkrKykge1xuICAgICAgdmFyIGlkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbaV07XG4gICAgICB2YXIgaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4XS5yZWZlcmVuY2VzLS07XG4gICAgfVxuXG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcblxuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuXG4gICAgICB2YXIgX2luZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoX2lkZW50aWZpZXIpO1xuXG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuXG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cblxuICAgIGxhc3RJZGVudGlmaWVycyA9IG5ld0xhc3RJZGVudGlmaWVycztcbiAgfTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBtZW1vID0ge307XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuZnVuY3Rpb24gZ2V0VGFyZ2V0KHRhcmdldCkge1xuICBpZiAodHlwZW9mIG1lbW9bdGFyZ2V0XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgIHZhciBzdHlsZVRhcmdldCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodGFyZ2V0KTsgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcblxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG5cbiAgICBtZW1vW3RhcmdldF0gPSBzdHlsZVRhcmdldDtcbiAgfVxuXG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cblxuXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuXG4gIGlmICghdGFyZ2V0KSB7XG4gICAgdGhyb3cgbmV3IEVycm9yKFwiQ291bGRuJ3QgZmluZCBhIHN0eWxlIHRhcmdldC4gVGhpcyBwcm9iYWJseSBtZWFucyB0aGF0IHRoZSB2YWx1ZSBmb3IgdGhlICdpbnNlcnQnIHBhcmFtZXRlciBpcyBpbnZhbGlkLlwiKTtcbiAgfVxuXG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydFN0eWxlRWxlbWVudDsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMoc3R5bGVFbGVtZW50KSB7XG4gIHZhciBub25jZSA9IHR5cGVvZiBfX3dlYnBhY2tfbm9uY2VfXyAhPT0gXCJ1bmRlZmluZWRcIiA/IF9fd2VicGFja19ub25jZV9fIDogbnVsbDtcblxuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuXG4gIGlmIChvYmouc3VwcG9ydHMpIHtcbiAgICBjc3MgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChvYmouc3VwcG9ydHMsIFwiKSB7XCIpO1xuICB9XG5cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG5cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG5cbiAgaWYgKG5lZWRMYXllcikge1xuICAgIGNzcyArPSBcIkBsYXllclwiLmNvbmNhdChvYmoubGF5ZXIubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChvYmoubGF5ZXIpIDogXCJcIiwgXCIge1wiKTtcbiAgfVxuXG4gIGNzcyArPSBvYmouY3NzO1xuXG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cblxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG5cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuXG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuXG4gIGlmIChzb3VyY2VNYXAgJiYgdHlwZW9mIGJ0b2EgIT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICBjc3MgKz0gXCJcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LFwiLmNvbmNhdChidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShzb3VyY2VNYXApKSkpLCBcIiAqL1wiKTtcbiAgfSAvLyBGb3Igb2xkIElFXG5cbiAgLyogaXN0YW5idWwgaWdub3JlIGlmICAqL1xuXG5cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cblxuZnVuY3Rpb24gcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCkge1xuICAvLyBpc3RhbmJ1bCBpZ25vcmUgaWZcbiAgaWYgKHN0eWxlRWxlbWVudC5wYXJlbnROb2RlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuXG5cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxuXG5tb2R1bGUuZXhwb3J0cyA9IGRvbUFQSTsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBzdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCkge1xuICBpZiAoc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQpIHtcbiAgICBzdHlsZUVsZW1lbnQuc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzO1xuICB9IGVsc2Uge1xuICAgIHdoaWxlIChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCkge1xuICAgICAgc3R5bGVFbGVtZW50LnJlbW92ZUNoaWxkKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKTtcbiAgICB9XG5cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9zdHlsZS5jc3NcIjtcbiAgICAgICBleHBvcnQgZGVmYXVsdCBjb250ZW50ICYmIGNvbnRlbnQubG9jYWxzID8gY29udGVudC5sb2NhbHMgOiB1bmRlZmluZWQ7XG4iLCJsZXQgdXNlckxpc3RzO1xuXG5pZiAoZ2V0TG9jYWxTdG9yYWdlKCkgPT09IHVuZGVmaW5lZCkge1xuICAgIHVzZXJMaXN0cyA9IFtcbiAgICAgICAge3RpdGxlOiAnVGVzdCBsaXN0JywgXG4gICAgICAgIGRlc2NyaXB0aW9uOiAnZm9vYmFyJywgXG4gICAgICAgIHRhc2tzOiBbe3RpdGxlOiAnVGVzdCB0YXNrJywgcHJpb3JpdHk6ICdjcml0aWNhbCcsIGR1ZURhdGU6ICcyMDIyLTEwLTIyVDE2OjIwJywgbGlzdDogJ1Rlc3QgbGlzdCcsIHN1YnRhc2tzOiBbe3RpdGxlOiAnZm9vJywgY29tcGxldGVkOiB0cnVlLCBzdWJ0YXNrOiAxfV0sIG5vdGVzOiAnYmFyJywgY29tcGxldGVkOiBmYWxzZSwgdGFza0lEOiAxfV0sIFxuICAgICAgICBsaXN0SUQ6IDF9XG4gICAgXVxuXG59IGVsc2Uge1xuICAgIHVzZXJMaXN0cyA9IGdldExvY2FsU3RvcmFnZSgpO1xufVxuXG5jb25zdCBhbGxUYXNrcyA9IFtdO1xuXG5mdW5jdGlvbiB1cGRhdGVMb2NhbFN0b3JhZ2UoKSB7XG4gICAgbG9jYWxTdG9yYWdlLmNsZWFyKCk7XG5cbiAgICBjb25zdCB1c2VyTGlzdF9zdHJpbmcgPSBKU09OLnN0cmluZ2lmeSh1c2VyTGlzdHMpO1xuXG4gICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oXCJ1c2VyTGlzdHNcIiwgdXNlckxpc3Rfc3RyaW5nKTtcbn1cblxuZnVuY3Rpb24gZ2V0TG9jYWxTdG9yYWdlKCkge1xuICAgIGlmIChsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlckxpc3RzJykgPT09IG51bGwpIHJldHVyblxuXG4gICAgY29uc3QgdXNlckxpc3RfcGFyc2VkID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlckxpc3RzJykpO1xuXG4gICAgcmV0dXJuIHVzZXJMaXN0X3BhcnNlZDtcbn1cblxuZXhwb3J0IHsgdXNlckxpc3RzLCBhbGxUYXNrcywgdXBkYXRlTG9jYWxTdG9yYWdlLCBnZXRMb2NhbFN0b3JhZ2UgfSIsImltcG9ydCBkZWxldGVCdXR0b24gZnJvbSAnL3NyYy9pbWcvZGVsZXRlLnBuZydcbmltcG9ydCB7IHVpIH0gZnJvbSAnLi91aSdcbmltcG9ydCB7IHVzZXJMaXN0cywgdXBkYXRlTG9jYWxTdG9yYWdlIH0gZnJvbSAnLi9kYXRhJ1xuXG5jb25zdCBMaXN0ID0gKHRpdGxlLCBkZXNjcmlwdGlvbiwgdGFza3MsIGxpc3RJRCkgPT4ge1xuICAgIHJldHVybiB7IHRpdGxlLCBkZXNjcmlwdGlvbiwgdGFza3MsIGxpc3RJRCB9XG59XG5cbmNvbnN0IGxpc3RzID0gKCkgPT4ge1xuICAgIGNvbnN0IGRpc3BsYXkgPSAobGlzdEFycmF5KSA9PiB7XG4gICAgICAgIGNvbnN0IGxpc3RDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGlzdENvbnRhaW5lcicpO1xuICAgICAgICBsaXN0Q29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuXG4gICAgICAgIGxpc3RBcnJheS5mb3JFYWNoKGxpc3QgPT4ge1xuICAgICAgICAgICAgY29uc3QgbGlzdFRlbXBsYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xpc3QtdGVtcGxhdGUnKTtcbiAgICAgICAgICAgIGNvbnN0IGxpc3RDbG9uZSA9IGRvY3VtZW50LmltcG9ydE5vZGUobGlzdFRlbXBsYXRlLmNvbnRlbnQsIHRydWUpO1xuICAgICAgICAgICAgbGlzdENvbnRhaW5lci5hcHBlbmRDaGlsZChsaXN0Q2xvbmUpO1xuXG4gICAgICAgICAgICBjb25zdCBsaXN0cyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtbGlzdF0nKSk7XG4gICAgICAgICAgICBjb25zdCBkZWxldGVJY29ucyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtZGVsZXRlXScpKTtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gbGlzdEFycmF5LmluZGV4T2YobGlzdCk7XG5cbiAgICAgICAgICAgIGxpc3RzW2luZGV4XS50ZXh0Q29udGVudCA9IGxpc3QudGl0bGU7XG4gICAgICAgICAgICBsaXN0c1tpbmRleF0uZGF0YXNldC5saXN0ID0gbGlzdC5saXN0SUQ7XG4gICAgICAgICAgICBsaXN0c1tpbmRleF0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgdWkoKS5yZW5kZXJVc2VyTGlzdChsaXN0KTtcbiAgICAgICAgICAgIH0pO1xuXG4gICAgICAgICAgICBkZWxldGVJY29uc1tpbmRleF0uc3JjID0gZGVsZXRlQnV0dG9uO1xuICAgICAgICAgICAgZGVsZXRlSWNvbnNbaW5kZXhdLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGhhbmRsZURlbGV0ZShsaXN0QXJyYXksIGxpc3QpO1xuICAgICAgICAgICAgICAgIHJlc2V0SURzKGxpc3RBcnJheSk7XG4gICAgICAgICAgICAgICAgZGlzcGxheShsaXN0QXJyYXkpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IGhhbmRsZUZvcm0gPSAobGlzdEFycmF5KSA9PiB7ICAgIFxuICAgICAgICBjb25zdCBsaXN0SUQgPSBsaXN0QXJyYXkubGVuZ3RoICsgMTtcbiAgICAgICAgY29uc3QgbmV3TGlzdCA9IExpc3QoZ2V0VGl0bGVGcm9tSW5wdXQoKSwgZ2V0RGVzY3JpcHRpb25Gcm9tSW5wdXQoKSwgW10sIGxpc3RJRCk7XG4gICAgICAgIFxuICAgICAgICBsaXN0QXJyYXkucHVzaChuZXdMaXN0KTtcblxuICAgICAgICB1cGRhdGVMb2NhbFN0b3JhZ2UoKTtcblxuICAgICAgICByZXR1cm4gbmV3TGlzdFxuICAgIH1cblxuICAgIGNvbnN0IGhhbmRsZURlbGV0ZSA9IChsaXN0QXJyYXksIGxpc3QpID0+IHtcbiAgICAgICAgY29uc3QgaW5kZXggPSBsaXN0QXJyYXkuaW5kZXhPZihsaXN0KTtcbiAgICAgICAgbGlzdEFycmF5LnNwbGljZShpbmRleCwgMSk7XG5cbiAgICAgICAgdXBkYXRlTG9jYWxTdG9yYWdlKCk7XG4gICAgfVxuXG4gICAgY29uc3QgZ2V0VGl0bGVGcm9tSW5wdXQgPSAoKSA9PiB7XG4gICAgICAgIGNvbnN0IGxpc3RUaXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsaXN0VGl0bGUnKTtcbiAgICAgICAgcmV0dXJuIGxpc3RUaXRsZS52YWx1ZTtcbiAgICB9XG5cbiAgICBjb25zdCBnZXREZXNjcmlwdGlvbkZyb21JbnB1dCA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgbGlzdERlc2NyaXB0aW9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xpc3REZXNjcmlwdGlvbicpO1xuICAgICAgICByZXR1cm4gbGlzdERlc2NyaXB0aW9uLnZhbHVlO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCB1cGRhdGVUaXRsZSA9IChsaXN0KSA9PiB7XG4gICAgICAgIGNvbnN0IHRpdGxlID0gZ2V0VGl0bGVGcm9tSW5wdXQoKTtcblxuICAgICAgICBpZiAodGl0bGUgPT09ICcnKSByZXR1cm5cbiAgICAgICAgXG4gICAgICAgIGxpc3QudGl0bGUgPSB0aXRsZTtcblxuICAgICAgICB1cGRhdGVMb2NhbFN0b3JhZ2UoKTtcbiAgICB9XG5cbiAgICBjb25zdCB1cGRhdGVEZXNjcmlwdGlvbiA9IChsaXN0KSA9PiB7XG4gICAgICAgIGNvbnN0IGRlc2NyaXB0aW9uID0gZ2V0RGVzY3JpcHRpb25Gcm9tSW5wdXQoKTtcblxuICAgICAgICBpZiAoZGVzY3JpcHRpb24gPT09ICcnKSByZXR1cm5cbiAgICAgICAgXG4gICAgICAgIGxpc3QuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcblxuICAgICAgICB1cGRhdGVMb2NhbFN0b3JhZ2UoKTtcbiAgICB9XG4gICAgXG4gICAgY29uc3QgZ2V0QWN0aXZlTGlzdCA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgbGlzdFRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xpc3RUaXRsZScpLnZhbHVlO1xuICAgICAgICBjb25zdCBhY3RpdmVMaXN0ID0gdXNlckxpc3RzLmZpbmQoICh7dGl0bGV9KSA9PiB0aXRsZSA9PT0gbGlzdFRpdGxlKTtcbiAgICAgICAgXG4gICAgICAgIHJldHVybiBhY3RpdmVMaXN0XG4gICAgfVxuXG4gICAgY29uc3QgcmVzZXRJRHMgPSAobGlzdEFycmF5KSA9PiB7XG4gICAgICAgIGxldCBpID0gMTtcbiAgICAgICAgbGlzdEFycmF5LmZvckVhY2gobGlzdCA9PiB7XG4gICAgICAgICAgICBsaXN0Lmxpc3RJRCA9IGk7XG4gICAgICAgICAgICBpKys7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB7IGRpc3BsYXksIGhhbmRsZUZvcm0sIHVwZGF0ZVRpdGxlLCB1cGRhdGVEZXNjcmlwdGlvbiwgZ2V0QWN0aXZlTGlzdCB9XG59XG5cbmV4cG9ydCB7IExpc3QsIGxpc3RzIH0iLCJpbXBvcnQgeyB1aSB9IGZyb20gJy4vdWknXG5pbXBvcnQgeyBsaXN0cyB9IGZyb20gJy4vbGlzdCdcbmltcG9ydCB7IFRhc2ssIHRhc2tzIH0gZnJvbSAnLi90YXNrJ1xuaW1wb3J0IHsgdXNlckxpc3RzLCBhbGxUYXNrcywgdXBkYXRlTG9jYWxTdG9yYWdlIH0gZnJvbSAnLi9kYXRhJ1xuXG5jb25zdCBTdWJ0YXNrID0gKHRpdGxlLCBjb21wbGV0ZWQsIHRhc2tJRCkgPT4ge1xuICAgIHJldHVybiB7IHRpdGxlLCBjb21wbGV0ZWQsIHRhc2tJRCB9XG59XG5cbmNvbnN0IGVkaXRvciA9ICgpID0+IHtcbiAgICBjb25zdCBkaXNwbGF5VGFzayA9ICh0YXNrKSA9PiB7XG4gICAgICAgIHVpKCkuaW5pdEVkaXRvckNsb25lKCk7XG5cbiAgICAgICAgaWYgKGVkaXRvckNhcmRDb250YWluZXIuY29udGFpbnMoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N1Ym1pdFRhc2snKSkpIHtcbiAgICAgICAgICAgIGRpc3BsYXlVcGRhdGUodGFzayk7XG4gICAgICAgICAgICBkaXNwbGF5RGVsZXRlKHRhc2spO1xuICAgICAgICB9XG4gICAgICAgIFxuICAgICAgICBzZXRUaXRsZSh0YXNrKTtcbiAgICAgICAgc2V0UHJpb3JpdHkodGFzayk7XG4gICAgICAgIHNldER1ZURhdGUodGFzayk7XG4gICAgICAgIHNldFRhcmdldExpc3QodGFzayk7XG4gICAgICAgIGRpc3BsYXlTdWJ0YXNrKHRhc2spO1xuICAgICAgICBzZXROb3Rlcyh0YXNrKTtcblxuICAgICAgICB1aSgpLnNldFBsYWNlaG9sZGVyKGN1cnJlbnRUYXNrKTtcbiAgICAgICAgY3VycmVudFRhc2suYmx1cigpO1xuICAgIH1cblxuICAgIGNvbnN0IGRpc3BsYXlVcGRhdGUgPSAodGFzaykgPT4ge1xuICAgICAgICBjb25zdCBidXR0b25Db250YWluZXIgPSBlZGl0b3JDYXJkQ29udGFpbmVyLnF1ZXJ5U2VsZWN0b3IoJy5idXR0b25Db250YWluZXInKTtcbiAgICAgICAgYnV0dG9uQ29udGFpbmVyLnJlbW92ZUNoaWxkKHN1Ym1pdFRhc2spO1xuXG4gICAgICAgIGNvbnN0IHVwZGF0ZVRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgdXBkYXRlVGFzay5pZCA9ICd1cGRhdGVUYXNrJztcbiAgICAgICAgdXBkYXRlVGFzay5jbGFzc0xpc3QuYWRkKCd0ZXh0QnV0dG9uJywgJ3N1Ym1pdCcpO1xuICAgICAgICB1cGRhdGVUYXNrLnRleHRDb250ZW50ID0gJ1VwZGF0ZSBUYXNrJztcbiAgICAgICAgYnV0dG9uQ29udGFpbmVyLmFwcGVuZCh1cGRhdGVUYXNrKTtcbiAgICAgICAgXG4gICAgICAgIHVwZGF0ZVRhc2suYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICBoYW5kbGVVcGRhdGUodGFzayk7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZWRpdG9yQ2FyZENvbnRhaW5lcicpLnJlbW92ZSgpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBkaXNwbGF5RGVsZXRlID0gKHRhc2spID0+IHtcbiAgICAgICAgY29uc3QgYnV0dG9uQ29udGFpbmVyID0gZWRpdG9yQ2FyZENvbnRhaW5lci5xdWVyeVNlbGVjdG9yKCcuYnV0dG9uQ29udGFpbmVyJyk7XG4gICAgICAgIGJ1dHRvbkNvbnRhaW5lci5yZW1vdmVDaGlsZChjYW5jZWxFZGl0b3IpO1xuXG4gICAgICAgIGNvbnN0IGRlbGV0ZVRhc2sgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgICAgICAgZGVsZXRlVGFzay5pZCA9ICdkZWxldGVUYXNrJztcbiAgICAgICAgZGVsZXRlVGFzay5jbGFzc0xpc3QuYWRkKCd0ZXh0QnV0dG9uJywgJ2RlbGV0ZScpO1xuICAgICAgICBkZWxldGVUYXNrLnRleHRDb250ZW50ID0gJ0RlbGV0ZSBUYXNrJztcbiAgICAgICAgYnV0dG9uQ29udGFpbmVyLnByZXBlbmQoZGVsZXRlVGFzayk7XG5cbiAgICAgICAgZGVsZXRlVGFzay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIGhhbmRsZURlbGV0ZSh0YXNrKTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgaGFuZGxlRm9ybSA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgdGFyZ2V0TGlzdCA9IGdldFRhcmdldExpc3QoKTtcbiAgICAgICAgbGV0IG5ld1Rhc2s7XG5cbiAgICAgICAgaWYgKHRhcmdldExpc3QgPT09ICdBbGwgdGFza3MnKSB7XG4gICAgICAgICAgICBjb25zdCB0YXNrSUQgPSBhbGxUYXNrcy5sZW5ndGggKyAxO1xuICAgICAgICAgICAgbmV3VGFzayA9IFRhc2soZ2V0VGl0bGUoKSwgZ2V0UHJpb3JpdHkoKSwgZ2V0RHVlRGF0ZSgpLCBnZXRUYXJnZXRMaXN0KCksIGdldFN1YnRhc2tzKCksIGdldE5vdGVzKCksIGZhbHNlLCB0YXNrSUQpO1xuICAgICAgICAgICAgXG4gICAgICAgICAgICBhbGxUYXNrcy5wdXNoKG5ld1Rhc2spO1xuICAgICAgICAgICAgdWkoKS5yZW5kZXJOYXZPcHRpb24oJ0FsbCB0YXNrcycpO1xuICAgICAgICAgICAgdGFza3MoKS5kaXNwbGF5KGFsbFRhc2tzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGNvbnN0IHRhc2tJRCA9IGFsbFRhc2tzLmxlbmd0aCArIDE7XG4gICAgICAgICAgICBuZXdUYXNrID0gVGFzayhnZXRUaXRsZSgpLCBnZXRQcmlvcml0eSgpLCBnZXREdWVEYXRlKCksIGdldFRhcmdldExpc3QoKSwgZ2V0U3VidGFza3MoKSwgZ2V0Tm90ZXMoKSwgZmFsc2UsIHRhc2tJRCk7XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGNvbnN0IHRhc2tEZXN0aW5hdGlvbiA9IHVzZXJMaXN0cy5maW5kKCAoe3RpdGxlfSkgPT4gdGl0bGUgPT09IHRhcmdldExpc3QpO1xuICAgICAgICAgICAgdGFza0Rlc3RpbmF0aW9uLnRhc2tzLnB1c2gobmV3VGFzayk7XG4gICAgICAgICAgICBhbGxUYXNrcy5wdXNoKG5ld1Rhc2spO1xuICAgICAgICAgICAgdWkoKS5yZW5kZXJVc2VyTGlzdCh0YXNrRGVzdGluYXRpb24pO1xuICAgICAgICB9XG5cbiAgICAgICAgdXBkYXRlTG9jYWxTdG9yYWdlKCk7XG5cbiAgICAgICAgcmV0dXJuIG5ld1Rhc2tcbiAgICB9XG5cbiAgICBjb25zdCBoYW5kbGVVcGRhdGUgPSAodGFzaykgPT4ge1xuICAgICAgICBjb25zdCB0aXRsZSA9IGdldFRpdGxlKCk7XG4gICAgICAgIHRhc2sudGl0bGUgPSB0aXRsZTtcblxuICAgICAgICBjb25zdCBwcmlvcml0eSA9IGdldFByaW9yaXR5KCk7XG4gICAgICAgIHRhc2sucHJpb3JpdHkgPSBwcmlvcml0eTtcblxuICAgICAgICBjb25zdCBkdWVEYXRlID0gZ2V0RHVlRGF0ZSgpO1xuICAgICAgICB0YXNrLmR1ZURhdGUgPSBkdWVEYXRlO1xuXG4gICAgICAgIGNvbnN0IGxpc3QgPSBnZXRUYXJnZXRMaXN0KCk7XG4gICAgICAgIHRhc2subGlzdCA9IGxpc3Q7XG5cbiAgICAgICAgY29uc3Qgbm90ZXMgPSBnZXROb3RlcygpO1xuICAgICAgICB0YXNrLm5vdGVzID0gbm90ZXM7XG5cbiAgICAgICAgdGFza3MoKS5kaXNwbGF5KGFsbFRhc2tzKTtcblxuICAgICAgICB1cGRhdGVMb2NhbFN0b3JhZ2UoKTtcbiAgICB9XG5cbiAgICBjb25zdCBoYW5kbGVEZWxldGUgPSAodGFzaykgPT4ge1xuICAgICAgICBpZiAoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xpc3RUaXRsZScpLnZhbHVlID09PSAnQWxsIHRhc2tzJykge1xuICAgICAgICAgICAgaWYgKHRhc2subGlzdCA9PT0gJ0FsbCB0YXNrcycpIHtcbiAgICAgICAgICAgICAgICB0YXNrcygpLmhhbmRsZURlbGV0ZShhbGxUYXNrcywgdGFzayk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIGNvbnN0IGFjdGl2ZUxpc3QgPSB1c2VyTGlzdHMuZmluZCggKHsgdGl0bGUgfSkgPT4gdGl0bGUgPT09IHRhc2subGlzdCk7XG4gICAgICAgICAgICAgICAgdGFza3MoKS5oYW5kbGVEZWxldGUoYWN0aXZlTGlzdC50YXNrcywgdGFzayk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0YXNrcygpLnJlc2V0SURzKGFsbFRhc2tzKTtcbiAgICAgICAgICAgIHRhc2tzKCkuZGlzcGxheShhbGxUYXNrcyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBjb25zdCBhY3RpdmVMaXN0ID0gbGlzdHMoKS5nZXRBY3RpdmVMaXN0KCk7XG4gICAgICAgICAgICB0YXNrcygpLmhhbmRsZURlbGV0ZShhY3RpdmVMaXN0LnRhc2tzLCB0YXNrKTtcbiAgICAgICAgICAgIHRhc2tzKCkucmVzZXRJRHMoYWN0aXZlTGlzdCk7XG4gICAgICAgICAgICB0YXNrcygpLnJlc2V0SURzKGFsbFRhc2tzKTtcbiAgICAgICAgICAgIHRhc2tzKCkuZGlzcGxheShhY3RpdmVMaXN0LnRhc2tzKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRlbnQucmVtb3ZlQ2hpbGQoZWRpdG9yQ2FyZENvbnRhaW5lcik7XG4gICAgICAgIHVwZGF0ZUxvY2FsU3RvcmFnZSgpO1xuICAgIH1cblxuICAgIGNvbnN0IGdldFRpdGxlID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBjdXJyZW50VGFzayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjdXJyZW50VGFzaycpO1xuICAgICAgICBpZiAoY3VycmVudFRhc2sudmFsdWUgPT09ICcnKSB7XG4gICAgICAgICAgICByZXR1cm4gY3VycmVudFRhc2sucGxhY2Vob2xkZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gY3VycmVudFRhc2sudmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBzZXRUaXRsZSA9ICh0YXNrKSA9PiB7XG4gICAgICAgIGlmICh0YXNrLnRpdGxlID09PSAnJykgcmV0dXJuXG5cbiAgICAgICAgY29uc3QgY3VycmVudFRhc2sgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY3VycmVudFRhc2snKTtcbiAgICAgICAgY3VycmVudFRhc2sudmFsdWUgPSB0YXNrLnRpdGxlO1xuICAgIH1cblxuICAgIGNvbnN0IGdldFByaW9yaXR5ID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBwcmlvcml0aWVzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1wcmlvcml0eV0nKSk7XG4gICAgICAgIGNvbnN0IGFjdGl2ZVByaW9yaXR5ID0gcHJpb3JpdGllcy5maW5kKCAoeyBjbGFzc0xpc3QgfSkgPT4gY2xhc3NMaXN0LmNvbnRhaW5zKCdjbGlja2VkJykpO1xuXG4gICAgICAgIGlmIChhY3RpdmVQcmlvcml0eSA9PT0gdW5kZWZpbmVkKSByZXR1cm5cblxuICAgICAgICByZXR1cm4gYWN0aXZlUHJpb3JpdHkuZGF0YXNldC5wcmlvcml0eVxuICAgIH1cblxuICAgIGNvbnN0IHNldFByaW9yaXR5ID0gKHRhc2spID0+IHtcbiAgICAgICAgaWYgKHRhc2sucHJpb3JpdHkgPT09ICcnKSByZXR1cm5cbiAgICAgICAgXG4gICAgICAgIGNvbnN0IHByaW9yaXRpZXMgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLXByaW9yaXR5XScpKTtcbiAgICAgICAgcHJpb3JpdGllcy5mb3JFYWNoKHByaW9yaXR5ID0+IHtcbiAgICAgICAgICAgIHByaW9yaXR5LmNsYXNzTGlzdC5yZW1vdmUoJ2NsaWNrZWQnKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgY29uc3QgcHJpb3JpdHkgPSB0YXNrLnByaW9yaXR5O1xuICAgICAgICBpZiAocHJpb3JpdHkgPT09ICcnKSB7XG4gICAgICAgICAgICByZXR1cm5cbiAgICAgICAgfSBlbHNlIGlmIChwcmlvcml0eSA9PT0gJ2NyaXRpY2FsJykge1xuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtcHJpb3JpdHk9XCJjcml0aWNhbFwiXScpLmNsYXNzTGlzdC5hZGQoJ2NsaWNrZWQnKTtcbiAgICAgICAgfSBlbHNlIGlmIChwcmlvcml0eSA9PT0gJ2ltcG9ydGFudCcpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ1tkYXRhLXByaW9yaXR5PVwiaW1wb3J0YW50XCJdJykuY2xhc3NMaXN0LmFkZCgnY2xpY2tlZCcpO1xuICAgICAgICB9IGVsc2UgaWYgKHByaW9yaXR5ID09PSAnbG93Jykge1xuICAgICAgICAgICAgZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtcHJpb3JpdHk9XCJsb3dcIl0nKS5jbGFzc0xpc3QuYWRkKCdjbGlja2VkJyk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICBjb25zdCBnZXREdWVEYXRlID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBkdWVEYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2R1ZURhdGUnKTtcbiAgICAgICAgcmV0dXJuIGR1ZURhdGUudmFsdWU7XG4gICAgfVxuXG4gICAgY29uc3Qgc2V0RHVlRGF0ZSA9ICh0YXNrKSA9PiB7XG4gICAgICAgIGlmICh0YXNrLmR1ZURhdGUgPT09ICcnKSByZXR1cm5cblxuICAgICAgICBjb25zdCBkdWVEYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2R1ZURhdGUnKTtcbiAgICAgICAgZHVlRGF0ZS52YWx1ZSA9IHRhc2suZHVlRGF0ZTtcbiAgICB9XG5cbiAgICBjb25zdCBnZXRUYXJnZXRMaXN0ID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBsaXN0RHJvcGRvd24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGlzdERyb3Bkb3duJyk7XG4gICAgICAgIHJldHVybiBsaXN0RHJvcGRvd24udmFsdWVcbiAgICB9XG5cbiAgICBjb25zdCBzZXRUYXJnZXRMaXN0ID0gKHRhc2spID0+IHtcbiAgICAgICAgaWYgKHRhc2subGlzdCA9PT0gJycpIHJldHVyblxuXG4gICAgICAgIGNvbnN0IGxpc3REcm9wZG93biA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsaXN0RHJvcGRvd24nKTtcbiAgICAgICAgbGlzdERyb3Bkb3duLnZhbHVlID0gdGFzay5saXN0O1xuICAgIH1cblxuICAgIGNvbnN0IGhhbmRsZVN1YnRhc2sgPSAodGFzaykgPT4ge1xuICAgICAgICBjb25zdCBzdWJ0YXNrQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N1YnRhc2tDb250YWluZXInKTtcbiAgICAgICAgY29uc3Qgc3VidGFza1RlbXBsYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N1YnRhc2stdGVtcGxhdGUnKTtcbiAgICAgICAgY29uc3Qgc3VidGFza0Nsb25lID0gZG9jdW1lbnQuaW1wb3J0Tm9kZShzdWJ0YXNrVGVtcGxhdGUuY29udGVudCwgdHJ1ZSk7XG4gICAgICAgIHN1YnRhc2tDb250YWluZXIuYXBwZW5kQ2hpbGQoc3VidGFza0Nsb25lKTtcblxuICAgICAgICBjb25zdCBzdWJ0YXNrcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtc3VidGFza10nKSk7XG4gICAgICAgIGxldCBpbmRleDtcblxuICAgICAgICBpZiAodGFzayA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBpbmRleCA9IDA7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBpbmRleCA9IHRhc2suc3VidGFza3MubGVuZ3RoO1xuICAgICAgICB9XG5cbiAgICAgICAgLy8gc3VidGFza3NbaW5kZXhdLmZvY3VzKCk7XG5cbiAgICAgICAgLy8gc3VidGFza3NbaW5kZXhdLmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3Vzb3V0JywgKCkgPT4ge1xuICAgICAgICAvLyAgICAgaWYgKHN1YnRhc2tzW2luZGV4XS52YWx1ZSA9PT0gJycpIHJldHVyblxuXG4gICAgICAgIC8vICAgICBjb25zdCBuZXdTdWJ0YXNrID0gU3VidGFzayhzdWJ0YXNrc1tpbmRleF0udmFsdWUsIGZhbHNlLCBpbmRleCArIDEpO1xuICAgICAgICAvLyAgICAgdGFzay5zdWJ0YXNrcy5wdXNoKG5ld1N1YnRhc2spO1xuICAgICAgICAvLyB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBkaXNwbGF5U3VidGFzayA9ICh0YXNrKSA9PiB7XG4gICAgICAgIGlmICh0YXNrLnN1YnRhc2tzID09PSAnJykgcmV0dXJuXG5cbiAgICAgICAgY29uc3Qgc3VidGFza0NvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdWJ0YXNrQ29udGFpbmVyJyk7XG4gICAgICAgIGNvbnN0IGN1cnJlbnRTdWJ0YXNrcyA9IHRhc2suc3VidGFza3M7XG5cbiAgICAgICAgc3VidGFza0NvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcbiAgICAgICAgY3VycmVudFN1YnRhc2tzLmZvckVhY2goc3VidGFzayA9PiB7XG4gICAgICAgICAgICBjb25zdCBzdWJ0YXNrVGVtcGxhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc3VidGFzay10ZW1wbGF0ZScpO1xuICAgICAgICAgICAgY29uc3Qgc3VidGFza0Nsb25lID0gZG9jdW1lbnQuaW1wb3J0Tm9kZShzdWJ0YXNrVGVtcGxhdGUuY29udGVudCwgdHJ1ZSk7XG4gICAgICAgICAgICBzdWJ0YXNrQ29udGFpbmVyLmFwcGVuZENoaWxkKHN1YnRhc2tDbG9uZSk7XG5cbiAgICAgICAgICAgIGNvbnN0IHN1YnRhc2tzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1zdWJ0YXNrXScpKTtcbiAgICAgICAgICAgIGNvbnN0IGNoZWNrcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtY2hlY2snKSk7XG4gICAgICAgICAgICBjb25zdCBpbmRleCA9IGN1cnJlbnRTdWJ0YXNrcy5pbmRleE9mKHN1YnRhc2spO1xuXG4gICAgICAgICAgICBpZiAoc3VidGFzay5jb21wbGV0ZWQgPT09IHRydWUpIHtcbiAgICAgICAgICAgICAgICBjaGVja3NbaW5kZXhdLmNoZWNrZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICBzdWJ0YXNrc1tpbmRleF0udmFsdWUgPSBzdWJ0YXNrLnRpdGxlO1xuXG4gICAgICAgICAgICBjaGVja3NbaW5kZXhdLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIGhhbmRsZUNvbXBsZXRlZChzdWJ0YXNrKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBnZXRTdWJ0YXNrcyA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qgc3VidGFza3MgPSBBcnJheS5mcm9tKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ1tkYXRhLXN1YnRhc2tdJykpO1xuICAgICAgICBjb25zdCBzdWJ0YXNrQXJyYXkgPSBbXTtcbiAgICAgICAgY29uc3QgaW5kZXggPSAwXG5cbiAgICAgICAgc3VidGFza3MuZm9yRWFjaChzdWJ0YXNrID0+IHtcbiAgICAgICAgICAgIGNvbnN0IG5ld1N1YnRhc2sgPSBTdWJ0YXNrKHN1YnRhc2sudmFsdWUsIGZhbHNlLCBpbmRleCArIDEpXG4gICAgICAgICAgICBzdWJ0YXNrQXJyYXkucHVzaChuZXdTdWJ0YXNrKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgcmV0dXJuIHN1YnRhc2tBcnJheTtcbiAgICB9XG5cbiAgICBjb25zdCBoYW5kbGVDb21wbGV0ZWQgPSAoc3VidGFzaykgPT4ge1xuICAgICAgICBpZiAoc3VidGFzay5jb21wbGV0ZWQgPT09IHRydWUpIHtcbiAgICAgICAgICAgIHN1YnRhc2suY29tcGxldGVkID0gZmFsc2U7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBzdWJ0YXNrLmNvbXBsZXRlZCA9IHRydWU7XG4gICAgICAgIH1cblxuICAgICAgICB1cGRhdGVMb2NhbFN0b3JhZ2UoKTtcbiAgICB9XG5cbiAgICBjb25zdCBnZXROb3RlcyA9ICgpID0+IHtcbiAgICAgICAgY29uc3Qgbm90ZXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbm90ZXMnKTtcbiAgICAgICAgcmV0dXJuIG5vdGVzLnZhbHVlXG4gICAgfVxuXG4gICAgY29uc3Qgc2V0Tm90ZXMgPSAodGFzaykgPT4ge1xuICAgICAgICBpZiAodGFzay5ub3RlcyA9PT0gJycpIHJldHVyblxuXG4gICAgICAgIGNvbnN0IG5vdGVzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ25vdGVzJyk7XG4gICAgICAgIG5vdGVzLnZhbHVlID0gdGFzay5ub3RlcztcbiAgICB9XG5cbiAgICBjb25zdCBpbml0TGlzdERyb3Bkb3duID0gKGxpc3RBcnJheSkgPT4ge1xuICAgICAgICBsaXN0RHJvcGRvd24uaW5uZXJIVE1MID0gJyc7XG5cbiAgICAgICAgY29uc3Qgb3B0aW9uID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnb3B0aW9uJyk7XG4gICAgICAgIG9wdGlvbi52YWx1ZSA9ICdBbGwgdGFza3MnO1xuICAgICAgICBvcHRpb24udGV4dENvbnRlbnQgPSAnQWxsIHRhc2tzJztcbiAgICAgICAgbGlzdERyb3Bkb3duLmFwcGVuZENoaWxkKG9wdGlvbik7XG5cbiAgICAgICAgbGlzdEFycmF5LmZvckVhY2gobGlzdCA9PiB7XG4gICAgICAgICAgICBjb25zdCBvcHRpb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdvcHRpb24nKTtcbiAgICAgICAgICAgIG9wdGlvbi52YWx1ZSA9IGxpc3QudGl0bGU7XG4gICAgICAgICAgICBvcHRpb24udGV4dENvbnRlbnQgPSBsaXN0LnRpdGxlO1xuICAgICAgICAgICAgbGlzdERyb3Bkb3duLmFwcGVuZENoaWxkKG9wdGlvbik7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIHJldHVybiB7IGRpc3BsYXlUYXNrLCBoYW5kbGVGb3JtLCBnZXRUYXJnZXRMaXN0LCBoYW5kbGVTdWJ0YXNrLCBpbml0TGlzdERyb3Bkb3duIH1cbn1cblxuZXhwb3J0IHsgU3VidGFzaywgZWRpdG9yIH0iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZXF1aXJlZEFyZ3MocmVxdWlyZWQsIGFyZ3MpIHtcbiAgaWYgKGFyZ3MubGVuZ3RoIDwgcmVxdWlyZWQpIHtcbiAgICB0aHJvdyBuZXcgVHlwZUVycm9yKHJlcXVpcmVkICsgJyBhcmd1bWVudCcgKyAocmVxdWlyZWQgPiAxID8gJ3MnIDogJycpICsgJyByZXF1aXJlZCwgYnV0IG9ubHkgJyArIGFyZ3MubGVuZ3RoICsgJyBwcmVzZW50Jyk7XG4gIH1cbn0iLCJpbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuLyoqXG4gKiBAbmFtZSB0b0RhdGVcbiAqIEBjYXRlZ29yeSBDb21tb24gSGVscGVyc1xuICogQHN1bW1hcnkgQ29udmVydCB0aGUgZ2l2ZW4gYXJndW1lbnQgdG8gYW4gaW5zdGFuY2Ugb2YgRGF0ZS5cbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIENvbnZlcnQgdGhlIGdpdmVuIGFyZ3VtZW50IHRvIGFuIGluc3RhbmNlIG9mIERhdGUuXG4gKlxuICogSWYgdGhlIGFyZ3VtZW50IGlzIGFuIGluc3RhbmNlIG9mIERhdGUsIHRoZSBmdW5jdGlvbiByZXR1cm5zIGl0cyBjbG9uZS5cbiAqXG4gKiBJZiB0aGUgYXJndW1lbnQgaXMgYSBudW1iZXIsIGl0IGlzIHRyZWF0ZWQgYXMgYSB0aW1lc3RhbXAuXG4gKlxuICogSWYgdGhlIGFyZ3VtZW50IGlzIG5vbmUgb2YgdGhlIGFib3ZlLCB0aGUgZnVuY3Rpb24gcmV0dXJucyBJbnZhbGlkIERhdGUuXG4gKlxuICogKipOb3RlKio6ICphbGwqIERhdGUgYXJndW1lbnRzIHBhc3NlZCB0byBhbnkgKmRhdGUtZm5zKiBmdW5jdGlvbiBpcyBwcm9jZXNzZWQgYnkgYHRvRGF0ZWAuXG4gKlxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gYXJndW1lbnQgLSB0aGUgdmFsdWUgdG8gY29udmVydFxuICogQHJldHVybnMge0RhdGV9IHRoZSBwYXJzZWQgZGF0ZSBpbiB0aGUgbG9jYWwgdGltZSB6b25lXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDEgYXJndW1lbnQgcmVxdWlyZWRcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ2xvbmUgdGhlIGRhdGU6XG4gKiBjb25zdCByZXN1bHQgPSB0b0RhdGUobmV3IERhdGUoMjAxNCwgMSwgMTEsIDExLCAzMCwgMzApKVxuICogLy89PiBUdWUgRmViIDExIDIwMTQgMTE6MzA6MzBcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ29udmVydCB0aGUgdGltZXN0YW1wIHRvIGRhdGU6XG4gKiBjb25zdCByZXN1bHQgPSB0b0RhdGUoMTM5MjA5ODQzMDAwMClcbiAqIC8vPT4gVHVlIEZlYiAxMSAyMDE0IDExOjMwOjMwXG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdG9EYXRlKGFyZ3VtZW50KSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuICB2YXIgYXJnU3RyID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKGFyZ3VtZW50KTsgLy8gQ2xvbmUgdGhlIGRhdGVcblxuICBpZiAoYXJndW1lbnQgaW5zdGFuY2VvZiBEYXRlIHx8IHR5cGVvZiBhcmd1bWVudCA9PT0gJ29iamVjdCcgJiYgYXJnU3RyID09PSAnW29iamVjdCBEYXRlXScpIHtcbiAgICAvLyBQcmV2ZW50IHRoZSBkYXRlIHRvIGxvc2UgdGhlIG1pbGxpc2Vjb25kcyB3aGVuIHBhc3NlZCB0byBuZXcgRGF0ZSgpIGluIElFMTBcbiAgICByZXR1cm4gbmV3IERhdGUoYXJndW1lbnQuZ2V0VGltZSgpKTtcbiAgfSBlbHNlIGlmICh0eXBlb2YgYXJndW1lbnQgPT09ICdudW1iZXInIHx8IGFyZ1N0ciA9PT0gJ1tvYmplY3QgTnVtYmVyXScpIHtcbiAgICByZXR1cm4gbmV3IERhdGUoYXJndW1lbnQpO1xuICB9IGVsc2Uge1xuICAgIGlmICgodHlwZW9mIGFyZ3VtZW50ID09PSAnc3RyaW5nJyB8fCBhcmdTdHIgPT09ICdbb2JqZWN0IFN0cmluZ10nKSAmJiB0eXBlb2YgY29uc29sZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG4gICAgICBjb25zb2xlLndhcm4oXCJTdGFydGluZyB3aXRoIHYyLjAuMC1iZXRhLjEgZGF0ZS1mbnMgZG9lc24ndCBhY2NlcHQgc3RyaW5ncyBhcyBkYXRlIGFyZ3VtZW50cy4gUGxlYXNlIHVzZSBgcGFyc2VJU09gIHRvIHBhcnNlIHN0cmluZ3MuIFNlZTogaHR0cHM6Ly9naXQuaW8vZmp1bGVcIik7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1jb25zb2xlXG5cbiAgICAgIGNvbnNvbGUud2FybihuZXcgRXJyb3IoKS5zdGFjayk7XG4gICAgfVxuXG4gICAgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG4gIH1cbn0iLCIvKipcbiAqIERheXMgaW4gMSB3ZWVrLlxuICpcbiAqIEBuYW1lIGRheXNJbldlZWtcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cbmV4cG9ydCB2YXIgZGF5c0luV2VlayA9IDc7XG4vKipcbiAqIE1heGltdW0gYWxsb3dlZCB0aW1lLlxuICpcbiAqIEBuYW1lIG1heFRpbWVcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtYXhUaW1lID0gTWF0aC5wb3coMTAsIDgpICogMjQgKiA2MCAqIDYwICogMTAwMDtcbi8qKlxuICogTWlsbGlzZWNvbmRzIGluIDEgbWludXRlXG4gKlxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5NaW51dGVcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtaWxsaXNlY29uZHNJbk1pbnV0ZSA9IDYwMDAwO1xuLyoqXG4gKiBNaWxsaXNlY29uZHMgaW4gMSBob3VyXG4gKlxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5Ib3VyXG4gKiBAY29uc3RhbnRcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAZGVmYXVsdFxuICovXG5cbmV4cG9ydCB2YXIgbWlsbGlzZWNvbmRzSW5Ib3VyID0gMzYwMDAwMDtcbi8qKlxuICogTWlsbGlzZWNvbmRzIGluIDEgc2Vjb25kXG4gKlxuICogQG5hbWUgbWlsbGlzZWNvbmRzSW5TZWNvbmRcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtaWxsaXNlY29uZHNJblNlY29uZCA9IDEwMDA7XG4vKipcbiAqIE1pbmltdW0gYWxsb3dlZCB0aW1lLlxuICpcbiAqIEBuYW1lIG1pblRpbWVcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtaW5UaW1lID0gLW1heFRpbWU7XG4vKipcbiAqIE1pbnV0ZXMgaW4gMSBob3VyXG4gKlxuICogQG5hbWUgbWludXRlc0luSG91clxuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQGRlZmF1bHRcbiAqL1xuXG5leHBvcnQgdmFyIG1pbnV0ZXNJbkhvdXIgPSA2MDtcbi8qKlxuICogTW9udGhzIGluIDEgcXVhcnRlclxuICpcbiAqIEBuYW1lIG1vbnRoc0luUXVhcnRlclxuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQGRlZmF1bHRcbiAqL1xuXG5leHBvcnQgdmFyIG1vbnRoc0luUXVhcnRlciA9IDM7XG4vKipcbiAqIE1vbnRocyBpbiAxIHllYXJcbiAqXG4gKiBAbmFtZSBtb250aHNJblllYXJcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBtb250aHNJblllYXIgPSAxMjtcbi8qKlxuICogUXVhcnRlcnMgaW4gMSB5ZWFyXG4gKlxuICogQG5hbWUgcXVhcnRlcnNJblllYXJcbiAqIEBjb25zdGFudFxuICogQHR5cGUge251bWJlcn1cbiAqIEBkZWZhdWx0XG4gKi9cblxuZXhwb3J0IHZhciBxdWFydGVyc0luWWVhciA9IDQ7XG4vKipcbiAqIFNlY29uZHMgaW4gMSBob3VyXG4gKlxuICogQG5hbWUgc2Vjb25kc0luSG91clxuICogQGNvbnN0YW50XG4gKiBAdHlwZSB7bnVtYmVyfVxuICogQGRlZmF1bHRcbiAqL1xuXG5leHBvcnQgdmFyIHNlY29uZHNJbkhvdXIgPSAzNjAwO1xuLyoqXG4gKiBTZWNvbmRzIGluIDEgbWludXRlXG4gKlxuICogQG5hbWUgc2Vjb25kc0luTWludXRlXG4gKiBAY29uc3RhbnRcbiAqIEB0eXBlIHtudW1iZXJ9XG4gKiBAZGVmYXVsdFxuICovXG5cbmV4cG9ydCB2YXIgc2Vjb25kc0luTWludXRlID0gNjA7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdG9JbnRlZ2VyKGRpcnR5TnVtYmVyKSB7XG4gIGlmIChkaXJ0eU51bWJlciA9PT0gbnVsbCB8fCBkaXJ0eU51bWJlciA9PT0gdHJ1ZSB8fCBkaXJ0eU51bWJlciA9PT0gZmFsc2UpIHtcbiAgICByZXR1cm4gTmFOO1xuICB9XG5cbiAgdmFyIG51bWJlciA9IE51bWJlcihkaXJ0eU51bWJlcik7XG5cbiAgaWYgKGlzTmFOKG51bWJlcikpIHtcbiAgICByZXR1cm4gbnVtYmVyO1xuICB9XG5cbiAgcmV0dXJuIG51bWJlciA8IDAgPyBNYXRoLmNlaWwobnVtYmVyKSA6IE1hdGguZmxvb3IobnVtYmVyKTtcbn0iLCJpbXBvcnQgeyBtaWxsaXNlY29uZHNJbkhvdXIsIG1pbGxpc2Vjb25kc0luTWludXRlIH0gZnJvbSBcIi4uL2NvbnN0YW50cy9pbmRleC5qc1wiO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcbmltcG9ydCB0b0ludGVnZXIgZnJvbSBcIi4uL19saWIvdG9JbnRlZ2VyL2luZGV4LmpzXCI7XG4vKipcbiAqIEBuYW1lIHBhcnNlSVNPXG4gKiBAY2F0ZWdvcnkgQ29tbW9uIEhlbHBlcnNcbiAqIEBzdW1tYXJ5IFBhcnNlIElTTyBzdHJpbmdcbiAqXG4gKiBAZGVzY3JpcHRpb25cbiAqIFBhcnNlIHRoZSBnaXZlbiBzdHJpbmcgaW4gSVNPIDg2MDEgZm9ybWF0IGFuZCByZXR1cm4gYW4gaW5zdGFuY2Ugb2YgRGF0ZS5cbiAqXG4gKiBGdW5jdGlvbiBhY2NlcHRzIGNvbXBsZXRlIElTTyA4NjAxIGZvcm1hdHMgYXMgd2VsbCBhcyBwYXJ0aWFsIGltcGxlbWVudGF0aW9ucy5cbiAqIElTTyA4NjAxOiBodHRwOi8vZW4ud2lraXBlZGlhLm9yZy93aWtpL0lTT184NjAxXG4gKlxuICogSWYgdGhlIGFyZ3VtZW50IGlzbid0IGEgc3RyaW5nLCB0aGUgZnVuY3Rpb24gY2Fubm90IHBhcnNlIHRoZSBzdHJpbmcgb3JcbiAqIHRoZSB2YWx1ZXMgYXJlIGludmFsaWQsIGl0IHJldHVybnMgSW52YWxpZCBEYXRlLlxuICpcbiAqICMjIyB2Mi4wLjAgYnJlYWtpbmcgY2hhbmdlczpcbiAqXG4gKiAtIFtDaGFuZ2VzIHRoYXQgYXJlIGNvbW1vbiBmb3IgdGhlIHdob2xlIGxpYnJhcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VwZ3JhZGVHdWlkZS5tZCNDb21tb24tQ2hhbmdlcykuXG4gKlxuICogLSBUaGUgcHJldmlvdXMgYHBhcnNlYCBpbXBsZW1lbnRhdGlvbiB3YXMgcmVuYW1lZCB0byBgcGFyc2VJU09gLlxuICpcbiAqICAgYGBgamF2YXNjcmlwdFxuICogICAvLyBCZWZvcmUgdjIuMC4wXG4gKiAgIHBhcnNlKCcyMDE2LTAxLTAxJylcbiAqXG4gKiAgIC8vIHYyLjAuMCBvbndhcmRcbiAqICAgcGFyc2VJU08oJzIwMTYtMDEtMDEnKVxuICogICBgYGBcbiAqXG4gKiAtIGBwYXJzZUlTT2Agbm93IHZhbGlkYXRlcyBzZXBhcmF0ZSBkYXRlIGFuZCB0aW1lIHZhbHVlcyBpbiBJU08tODYwMSBzdHJpbmdzXG4gKiAgIGFuZCByZXR1cm5zIGBJbnZhbGlkIERhdGVgIGlmIHRoZSBkYXRlIGlzIGludmFsaWQuXG4gKlxuICogICBgYGBqYXZhc2NyaXB0XG4gKiAgIHBhcnNlSVNPKCcyMDE4LTEzLTMyJylcbiAqICAgLy89PiBJbnZhbGlkIERhdGVcbiAqICAgYGBgXG4gKlxuICogLSBgcGFyc2VJU09gIG5vdyBkb2Vzbid0IGZhbGwgYmFjayB0byBgbmV3IERhdGVgIGNvbnN0cnVjdG9yXG4gKiAgIGlmIGl0IGZhaWxzIHRvIHBhcnNlIGEgc3RyaW5nIGFyZ3VtZW50LiBJbnN0ZWFkLCBpdCByZXR1cm5zIGBJbnZhbGlkIERhdGVgLlxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBhcmd1bWVudCAtIHRoZSB2YWx1ZSB0byBjb252ZXJ0XG4gKiBAcGFyYW0ge09iamVjdH0gW29wdGlvbnNdIC0gYW4gb2JqZWN0IHdpdGggb3B0aW9ucy5cbiAqIEBwYXJhbSB7MHwxfDJ9IFtvcHRpb25zLmFkZGl0aW9uYWxEaWdpdHM9Ml0gLSB0aGUgYWRkaXRpb25hbCBudW1iZXIgb2YgZGlnaXRzIGluIHRoZSBleHRlbmRlZCB5ZWFyIGZvcm1hdFxuICogQHJldHVybnMge0RhdGV9IHRoZSBwYXJzZWQgZGF0ZSBpbiB0aGUgbG9jYWwgdGltZSB6b25lXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDEgYXJndW1lbnQgcmVxdWlyZWRcbiAqIEB0aHJvd3Mge1JhbmdlRXJyb3J9IGBvcHRpb25zLmFkZGl0aW9uYWxEaWdpdHNgIG11c3QgYmUgMCwgMSBvciAyXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIENvbnZlcnQgc3RyaW5nICcyMDE0LTAyLTExVDExOjMwOjMwJyB0byBkYXRlOlxuICogY29uc3QgcmVzdWx0ID0gcGFyc2VJU08oJzIwMTQtMDItMTFUMTE6MzA6MzAnKVxuICogLy89PiBUdWUgRmViIDExIDIwMTQgMTE6MzA6MzBcbiAqXG4gKiBAZXhhbXBsZVxuICogLy8gQ29udmVydCBzdHJpbmcgJyswMjAxNDEwMScgdG8gZGF0ZSxcbiAqIC8vIGlmIHRoZSBhZGRpdGlvbmFsIG51bWJlciBvZiBkaWdpdHMgaW4gdGhlIGV4dGVuZGVkIHllYXIgZm9ybWF0IGlzIDE6XG4gKiBjb25zdCByZXN1bHQgPSBwYXJzZUlTTygnKzAyMDE0MTAxJywgeyBhZGRpdGlvbmFsRGlnaXRzOiAxIH0pXG4gKiAvLz0+IEZyaSBBcHIgMTEgMjAxNCAwMDowMDowMFxuICovXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBhcnNlSVNPKGFyZ3VtZW50LCBkaXJ0eU9wdGlvbnMpIHtcbiAgcmVxdWlyZWRBcmdzKDEsIGFyZ3VtZW50cyk7XG4gIHZhciBvcHRpb25zID0gZGlydHlPcHRpb25zIHx8IHt9O1xuICB2YXIgYWRkaXRpb25hbERpZ2l0cyA9IG9wdGlvbnMuYWRkaXRpb25hbERpZ2l0cyA9PSBudWxsID8gMiA6IHRvSW50ZWdlcihvcHRpb25zLmFkZGl0aW9uYWxEaWdpdHMpO1xuXG4gIGlmIChhZGRpdGlvbmFsRGlnaXRzICE9PSAyICYmIGFkZGl0aW9uYWxEaWdpdHMgIT09IDEgJiYgYWRkaXRpb25hbERpZ2l0cyAhPT0gMCkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCdhZGRpdGlvbmFsRGlnaXRzIG11c3QgYmUgMCwgMSBvciAyJyk7XG4gIH1cblxuICBpZiAoISh0eXBlb2YgYXJndW1lbnQgPT09ICdzdHJpbmcnIHx8IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbChhcmd1bWVudCkgPT09ICdbb2JqZWN0IFN0cmluZ10nKSkge1xuICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICB9XG5cbiAgdmFyIGRhdGVTdHJpbmdzID0gc3BsaXREYXRlU3RyaW5nKGFyZ3VtZW50KTtcbiAgdmFyIGRhdGU7XG5cbiAgaWYgKGRhdGVTdHJpbmdzLmRhdGUpIHtcbiAgICB2YXIgcGFyc2VZZWFyUmVzdWx0ID0gcGFyc2VZZWFyKGRhdGVTdHJpbmdzLmRhdGUsIGFkZGl0aW9uYWxEaWdpdHMpO1xuICAgIGRhdGUgPSBwYXJzZURhdGUocGFyc2VZZWFyUmVzdWx0LnJlc3REYXRlU3RyaW5nLCBwYXJzZVllYXJSZXN1bHQueWVhcik7XG4gIH1cblxuICBpZiAoIWRhdGUgfHwgaXNOYU4oZGF0ZS5nZXRUaW1lKCkpKSB7XG4gICAgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG4gIH1cblxuICB2YXIgdGltZXN0YW1wID0gZGF0ZS5nZXRUaW1lKCk7XG4gIHZhciB0aW1lID0gMDtcbiAgdmFyIG9mZnNldDtcblxuICBpZiAoZGF0ZVN0cmluZ3MudGltZSkge1xuICAgIHRpbWUgPSBwYXJzZVRpbWUoZGF0ZVN0cmluZ3MudGltZSk7XG5cbiAgICBpZiAoaXNOYU4odGltZSkpIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICAgIH1cbiAgfVxuXG4gIGlmIChkYXRlU3RyaW5ncy50aW1lem9uZSkge1xuICAgIG9mZnNldCA9IHBhcnNlVGltZXpvbmUoZGF0ZVN0cmluZ3MudGltZXpvbmUpO1xuXG4gICAgaWYgKGlzTmFOKG9mZnNldCkpIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICAgIH1cbiAgfSBlbHNlIHtcbiAgICB2YXIgZGlydHlEYXRlID0gbmV3IERhdGUodGltZXN0YW1wICsgdGltZSk7IC8vIGpzIHBhcnNlZCBzdHJpbmcgYXNzdW1pbmcgaXQncyBpbiBVVEMgdGltZXpvbmVcbiAgICAvLyBidXQgd2UgbmVlZCBpdCB0byBiZSBwYXJzZWQgaW4gb3VyIHRpbWV6b25lXG4gICAgLy8gc28gd2UgdXNlIHV0YyB2YWx1ZXMgdG8gYnVpbGQgZGF0ZSBpbiBvdXIgdGltZXpvbmUuXG4gICAgLy8gWWVhciB2YWx1ZXMgZnJvbSAwIHRvIDk5IG1hcCB0byB0aGUgeWVhcnMgMTkwMCB0byAxOTk5XG4gICAgLy8gc28gc2V0IHllYXIgZXhwbGljaXRseSB3aXRoIHNldEZ1bGxZZWFyLlxuXG4gICAgdmFyIHJlc3VsdCA9IG5ldyBEYXRlKDApO1xuICAgIHJlc3VsdC5zZXRGdWxsWWVhcihkaXJ0eURhdGUuZ2V0VVRDRnVsbFllYXIoKSwgZGlydHlEYXRlLmdldFVUQ01vbnRoKCksIGRpcnR5RGF0ZS5nZXRVVENEYXRlKCkpO1xuICAgIHJlc3VsdC5zZXRIb3VycyhkaXJ0eURhdGUuZ2V0VVRDSG91cnMoKSwgZGlydHlEYXRlLmdldFVUQ01pbnV0ZXMoKSwgZGlydHlEYXRlLmdldFVUQ1NlY29uZHMoKSwgZGlydHlEYXRlLmdldFVUQ01pbGxpc2Vjb25kcygpKTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9XG5cbiAgcmV0dXJuIG5ldyBEYXRlKHRpbWVzdGFtcCArIHRpbWUgKyBvZmZzZXQpO1xufVxudmFyIHBhdHRlcm5zID0ge1xuICBkYXRlVGltZURlbGltaXRlcjogL1tUIF0vLFxuICB0aW1lWm9uZURlbGltaXRlcjogL1taIF0vaSxcbiAgdGltZXpvbmU6IC8oW1orLV0uKikkL1xufTtcbnZhciBkYXRlUmVnZXggPSAvXi0/KD86KFxcZHszfSl8KFxcZHsyfSkoPzotPyhcXGR7Mn0pKT98VyhcXGR7Mn0pKD86LT8oXFxkezF9KSk/fCkkLztcbnZhciB0aW1lUmVnZXggPSAvXihcXGR7Mn0oPzpbLixdXFxkKik/KSg/Ojo/KFxcZHsyfSg/OlsuLF1cXGQqKT8pKT8oPzo6PyhcXGR7Mn0oPzpbLixdXFxkKik/KSk/JC87XG52YXIgdGltZXpvbmVSZWdleCA9IC9eKFsrLV0pKFxcZHsyfSkoPzo6PyhcXGR7Mn0pKT8kLztcblxuZnVuY3Rpb24gc3BsaXREYXRlU3RyaW5nKGRhdGVTdHJpbmcpIHtcbiAgdmFyIGRhdGVTdHJpbmdzID0ge307XG4gIHZhciBhcnJheSA9IGRhdGVTdHJpbmcuc3BsaXQocGF0dGVybnMuZGF0ZVRpbWVEZWxpbWl0ZXIpO1xuICB2YXIgdGltZVN0cmluZzsgLy8gVGhlIHJlZ2V4IG1hdGNoIHNob3VsZCBvbmx5IHJldHVybiBhdCBtYXhpbXVtIHR3byBhcnJheSBlbGVtZW50cy5cbiAgLy8gW2RhdGVdLCBbdGltZV0sIG9yIFtkYXRlLCB0aW1lXS5cblxuICBpZiAoYXJyYXkubGVuZ3RoID4gMikge1xuICAgIHJldHVybiBkYXRlU3RyaW5ncztcbiAgfVxuXG4gIGlmICgvOi8udGVzdChhcnJheVswXSkpIHtcbiAgICB0aW1lU3RyaW5nID0gYXJyYXlbMF07XG4gIH0gZWxzZSB7XG4gICAgZGF0ZVN0cmluZ3MuZGF0ZSA9IGFycmF5WzBdO1xuICAgIHRpbWVTdHJpbmcgPSBhcnJheVsxXTtcblxuICAgIGlmIChwYXR0ZXJucy50aW1lWm9uZURlbGltaXRlci50ZXN0KGRhdGVTdHJpbmdzLmRhdGUpKSB7XG4gICAgICBkYXRlU3RyaW5ncy5kYXRlID0gZGF0ZVN0cmluZy5zcGxpdChwYXR0ZXJucy50aW1lWm9uZURlbGltaXRlcilbMF07XG4gICAgICB0aW1lU3RyaW5nID0gZGF0ZVN0cmluZy5zdWJzdHIoZGF0ZVN0cmluZ3MuZGF0ZS5sZW5ndGgsIGRhdGVTdHJpbmcubGVuZ3RoKTtcbiAgICB9XG4gIH1cblxuICBpZiAodGltZVN0cmluZykge1xuICAgIHZhciB0b2tlbiA9IHBhdHRlcm5zLnRpbWV6b25lLmV4ZWModGltZVN0cmluZyk7XG5cbiAgICBpZiAodG9rZW4pIHtcbiAgICAgIGRhdGVTdHJpbmdzLnRpbWUgPSB0aW1lU3RyaW5nLnJlcGxhY2UodG9rZW5bMV0sICcnKTtcbiAgICAgIGRhdGVTdHJpbmdzLnRpbWV6b25lID0gdG9rZW5bMV07XG4gICAgfSBlbHNlIHtcbiAgICAgIGRhdGVTdHJpbmdzLnRpbWUgPSB0aW1lU3RyaW5nO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBkYXRlU3RyaW5ncztcbn1cblxuZnVuY3Rpb24gcGFyc2VZZWFyKGRhdGVTdHJpbmcsIGFkZGl0aW9uYWxEaWdpdHMpIHtcbiAgdmFyIHJlZ2V4ID0gbmV3IFJlZ0V4cCgnXig/OihcXFxcZHs0fXxbKy1dXFxcXGR7JyArICg0ICsgYWRkaXRpb25hbERpZ2l0cykgKyAnfSl8KFxcXFxkezJ9fFsrLV1cXFxcZHsnICsgKDIgKyBhZGRpdGlvbmFsRGlnaXRzKSArICd9KSQpJyk7XG4gIHZhciBjYXB0dXJlcyA9IGRhdGVTdHJpbmcubWF0Y2gocmVnZXgpOyAvLyBJbnZhbGlkIElTTy1mb3JtYXR0ZWQgeWVhclxuXG4gIGlmICghY2FwdHVyZXMpIHJldHVybiB7XG4gICAgeWVhcjogTmFOLFxuICAgIHJlc3REYXRlU3RyaW5nOiAnJ1xuICB9O1xuICB2YXIgeWVhciA9IGNhcHR1cmVzWzFdID8gcGFyc2VJbnQoY2FwdHVyZXNbMV0pIDogbnVsbDtcbiAgdmFyIGNlbnR1cnkgPSBjYXB0dXJlc1syXSA/IHBhcnNlSW50KGNhcHR1cmVzWzJdKSA6IG51bGw7IC8vIGVpdGhlciB5ZWFyIG9yIGNlbnR1cnkgaXMgbnVsbCwgbm90IGJvdGhcblxuICByZXR1cm4ge1xuICAgIHllYXI6IGNlbnR1cnkgPT09IG51bGwgPyB5ZWFyIDogY2VudHVyeSAqIDEwMCxcbiAgICByZXN0RGF0ZVN0cmluZzogZGF0ZVN0cmluZy5zbGljZSgoY2FwdHVyZXNbMV0gfHwgY2FwdHVyZXNbMl0pLmxlbmd0aClcbiAgfTtcbn1cblxuZnVuY3Rpb24gcGFyc2VEYXRlKGRhdGVTdHJpbmcsIHllYXIpIHtcbiAgLy8gSW52YWxpZCBJU08tZm9ybWF0dGVkIHllYXJcbiAgaWYgKHllYXIgPT09IG51bGwpIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICB2YXIgY2FwdHVyZXMgPSBkYXRlU3RyaW5nLm1hdGNoKGRhdGVSZWdleCk7IC8vIEludmFsaWQgSVNPLWZvcm1hdHRlZCBzdHJpbmdcblxuICBpZiAoIWNhcHR1cmVzKSByZXR1cm4gbmV3IERhdGUoTmFOKTtcbiAgdmFyIGlzV2Vla0RhdGUgPSAhIWNhcHR1cmVzWzRdO1xuICB2YXIgZGF5T2ZZZWFyID0gcGFyc2VEYXRlVW5pdChjYXB0dXJlc1sxXSk7XG4gIHZhciBtb250aCA9IHBhcnNlRGF0ZVVuaXQoY2FwdHVyZXNbMl0pIC0gMTtcbiAgdmFyIGRheSA9IHBhcnNlRGF0ZVVuaXQoY2FwdHVyZXNbM10pO1xuICB2YXIgd2VlayA9IHBhcnNlRGF0ZVVuaXQoY2FwdHVyZXNbNF0pO1xuICB2YXIgZGF5T2ZXZWVrID0gcGFyc2VEYXRlVW5pdChjYXB0dXJlc1s1XSkgLSAxO1xuXG4gIGlmIChpc1dlZWtEYXRlKSB7XG4gICAgaWYgKCF2YWxpZGF0ZVdlZWtEYXRlKHllYXIsIHdlZWssIGRheU9mV2VlaykpIHtcbiAgICAgIHJldHVybiBuZXcgRGF0ZShOYU4pO1xuICAgIH1cblxuICAgIHJldHVybiBkYXlPZklTT1dlZWtZZWFyKHllYXIsIHdlZWssIGRheU9mV2Vlayk7XG4gIH0gZWxzZSB7XG4gICAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgwKTtcblxuICAgIGlmICghdmFsaWRhdGVEYXRlKHllYXIsIG1vbnRoLCBkYXkpIHx8ICF2YWxpZGF0ZURheU9mWWVhckRhdGUoeWVhciwgZGF5T2ZZZWFyKSkge1xuICAgICAgcmV0dXJuIG5ldyBEYXRlKE5hTik7XG4gICAgfVxuXG4gICAgZGF0ZS5zZXRVVENGdWxsWWVhcih5ZWFyLCBtb250aCwgTWF0aC5tYXgoZGF5T2ZZZWFyLCBkYXkpKTtcbiAgICByZXR1cm4gZGF0ZTtcbiAgfVxufVxuXG5mdW5jdGlvbiBwYXJzZURhdGVVbml0KHZhbHVlKSB7XG4gIHJldHVybiB2YWx1ZSA/IHBhcnNlSW50KHZhbHVlKSA6IDE7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVGltZSh0aW1lU3RyaW5nKSB7XG4gIHZhciBjYXB0dXJlcyA9IHRpbWVTdHJpbmcubWF0Y2godGltZVJlZ2V4KTtcbiAgaWYgKCFjYXB0dXJlcykgcmV0dXJuIE5hTjsgLy8gSW52YWxpZCBJU08tZm9ybWF0dGVkIHRpbWVcblxuICB2YXIgaG91cnMgPSBwYXJzZVRpbWVVbml0KGNhcHR1cmVzWzFdKTtcbiAgdmFyIG1pbnV0ZXMgPSBwYXJzZVRpbWVVbml0KGNhcHR1cmVzWzJdKTtcbiAgdmFyIHNlY29uZHMgPSBwYXJzZVRpbWVVbml0KGNhcHR1cmVzWzNdKTtcblxuICBpZiAoIXZhbGlkYXRlVGltZShob3VycywgbWludXRlcywgc2Vjb25kcykpIHtcbiAgICByZXR1cm4gTmFOO1xuICB9XG5cbiAgcmV0dXJuIGhvdXJzICogbWlsbGlzZWNvbmRzSW5Ib3VyICsgbWludXRlcyAqIG1pbGxpc2Vjb25kc0luTWludXRlICsgc2Vjb25kcyAqIDEwMDA7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVGltZVVuaXQodmFsdWUpIHtcbiAgcmV0dXJuIHZhbHVlICYmIHBhcnNlRmxvYXQodmFsdWUucmVwbGFjZSgnLCcsICcuJykpIHx8IDA7XG59XG5cbmZ1bmN0aW9uIHBhcnNlVGltZXpvbmUodGltZXpvbmVTdHJpbmcpIHtcbiAgaWYgKHRpbWV6b25lU3RyaW5nID09PSAnWicpIHJldHVybiAwO1xuICB2YXIgY2FwdHVyZXMgPSB0aW1lem9uZVN0cmluZy5tYXRjaCh0aW1lem9uZVJlZ2V4KTtcbiAgaWYgKCFjYXB0dXJlcykgcmV0dXJuIDA7XG4gIHZhciBzaWduID0gY2FwdHVyZXNbMV0gPT09ICcrJyA/IC0xIDogMTtcbiAgdmFyIGhvdXJzID0gcGFyc2VJbnQoY2FwdHVyZXNbMl0pO1xuICB2YXIgbWludXRlcyA9IGNhcHR1cmVzWzNdICYmIHBhcnNlSW50KGNhcHR1cmVzWzNdKSB8fCAwO1xuXG4gIGlmICghdmFsaWRhdGVUaW1lem9uZShob3VycywgbWludXRlcykpIHtcbiAgICByZXR1cm4gTmFOO1xuICB9XG5cbiAgcmV0dXJuIHNpZ24gKiAoaG91cnMgKiBtaWxsaXNlY29uZHNJbkhvdXIgKyBtaW51dGVzICogbWlsbGlzZWNvbmRzSW5NaW51dGUpO1xufVxuXG5mdW5jdGlvbiBkYXlPZklTT1dlZWtZZWFyKGlzb1dlZWtZZWFyLCB3ZWVrLCBkYXkpIHtcbiAgdmFyIGRhdGUgPSBuZXcgRGF0ZSgwKTtcbiAgZGF0ZS5zZXRVVENGdWxsWWVhcihpc29XZWVrWWVhciwgMCwgNCk7XG4gIHZhciBmb3VydGhPZkphbnVhcnlEYXkgPSBkYXRlLmdldFVUQ0RheSgpIHx8IDc7XG4gIHZhciBkaWZmID0gKHdlZWsgLSAxKSAqIDcgKyBkYXkgKyAxIC0gZm91cnRoT2ZKYW51YXJ5RGF5O1xuICBkYXRlLnNldFVUQ0RhdGUoZGF0ZS5nZXRVVENEYXRlKCkgKyBkaWZmKTtcbiAgcmV0dXJuIGRhdGU7XG59IC8vIFZhbGlkYXRpb24gZnVuY3Rpb25zXG4vLyBGZWJydWFyeSBpcyBudWxsIHRvIGhhbmRsZSB0aGUgbGVhcCB5ZWFyICh1c2luZyB8fClcblxuXG52YXIgZGF5c0luTW9udGhzID0gWzMxLCBudWxsLCAzMSwgMzAsIDMxLCAzMCwgMzEsIDMxLCAzMCwgMzEsIDMwLCAzMV07XG5cbmZ1bmN0aW9uIGlzTGVhcFllYXJJbmRleCh5ZWFyKSB7XG4gIHJldHVybiB5ZWFyICUgNDAwID09PSAwIHx8IHllYXIgJSA0ID09PSAwICYmIHllYXIgJSAxMDAgIT09IDA7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlRGF0ZSh5ZWFyLCBtb250aCwgZGF0ZSkge1xuICByZXR1cm4gbW9udGggPj0gMCAmJiBtb250aCA8PSAxMSAmJiBkYXRlID49IDEgJiYgZGF0ZSA8PSAoZGF5c0luTW9udGhzW21vbnRoXSB8fCAoaXNMZWFwWWVhckluZGV4KHllYXIpID8gMjkgOiAyOCkpO1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZURheU9mWWVhckRhdGUoeWVhciwgZGF5T2ZZZWFyKSB7XG4gIHJldHVybiBkYXlPZlllYXIgPj0gMSAmJiBkYXlPZlllYXIgPD0gKGlzTGVhcFllYXJJbmRleCh5ZWFyKSA/IDM2NiA6IDM2NSk7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlV2Vla0RhdGUoX3llYXIsIHdlZWssIGRheSkge1xuICByZXR1cm4gd2VlayA+PSAxICYmIHdlZWsgPD0gNTMgJiYgZGF5ID49IDAgJiYgZGF5IDw9IDY7XG59XG5cbmZ1bmN0aW9uIHZhbGlkYXRlVGltZShob3VycywgbWludXRlcywgc2Vjb25kcykge1xuICBpZiAoaG91cnMgPT09IDI0KSB7XG4gICAgcmV0dXJuIG1pbnV0ZXMgPT09IDAgJiYgc2Vjb25kcyA9PT0gMDtcbiAgfVxuXG4gIHJldHVybiBzZWNvbmRzID49IDAgJiYgc2Vjb25kcyA8IDYwICYmIG1pbnV0ZXMgPj0gMCAmJiBtaW51dGVzIDwgNjAgJiYgaG91cnMgPj0gMCAmJiBob3VycyA8IDI1O1xufVxuXG5mdW5jdGlvbiB2YWxpZGF0ZVRpbWV6b25lKF9ob3VycywgbWludXRlcykge1xuICByZXR1cm4gbWludXRlcyA+PSAwICYmIG1pbnV0ZXMgPD0gNTk7XG59IiwiaW1wb3J0IHRvRGF0ZSBmcm9tIFwiLi4vdG9EYXRlL2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuLyoqXG4gKiBAbmFtZSBpc0JlZm9yZVxuICogQGNhdGVnb3J5IENvbW1vbiBIZWxwZXJzXG4gKiBAc3VtbWFyeSBJcyB0aGUgZmlyc3QgZGF0ZSBiZWZvcmUgdGhlIHNlY29uZCBvbmU/XG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBJcyB0aGUgZmlyc3QgZGF0ZSBiZWZvcmUgdGhlIHNlY29uZCBvbmU/XG4gKlxuICogIyMjIHYyLjAuMCBicmVha2luZyBjaGFuZ2VzOlxuICpcbiAqIC0gW0NoYW5nZXMgdGhhdCBhcmUgY29tbW9uIGZvciB0aGUgd2hvbGUgbGlicmFyeV0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdXBncmFkZUd1aWRlLm1kI0NvbW1vbi1DaGFuZ2VzKS5cbiAqXG4gKiBAcGFyYW0ge0RhdGV8TnVtYmVyfSBkYXRlIC0gdGhlIGRhdGUgdGhhdCBzaG91bGQgYmUgYmVmb3JlIHRoZSBvdGhlciBvbmUgdG8gcmV0dXJuIHRydWVcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGVUb0NvbXBhcmUgLSB0aGUgZGF0ZSB0byBjb21wYXJlIHdpdGhcbiAqIEByZXR1cm5zIHtCb29sZWFufSB0aGUgZmlyc3QgZGF0ZSBpcyBiZWZvcmUgdGhlIHNlY29uZCBkYXRlXG4gKiBAdGhyb3dzIHtUeXBlRXJyb3J9IDIgYXJndW1lbnRzIHJlcXVpcmVkXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIElzIDEwIEp1bHkgMTk4OSBiZWZvcmUgMTEgRmVicnVhcnkgMTk4Nz9cbiAqIHZhciByZXN1bHQgPSBpc0JlZm9yZShuZXcgRGF0ZSgxOTg5LCA2LCAxMCksIG5ldyBEYXRlKDE5ODcsIDEsIDExKSlcbiAqIC8vPT4gZmFsc2VcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpc0JlZm9yZShkaXJ0eURhdGUsIGRpcnR5RGF0ZVRvQ29tcGFyZSkge1xuICByZXF1aXJlZEFyZ3MoMiwgYXJndW1lbnRzKTtcbiAgdmFyIGRhdGUgPSB0b0RhdGUoZGlydHlEYXRlKTtcbiAgdmFyIGRhdGVUb0NvbXBhcmUgPSB0b0RhdGUoZGlydHlEYXRlVG9Db21wYXJlKTtcbiAgcmV0dXJuIGRhdGUuZ2V0VGltZSgpIDwgZGF0ZVRvQ29tcGFyZS5nZXRUaW1lKCk7XG59IiwiaW1wb3J0IHRvRGF0ZSBmcm9tIFwiLi4vdG9EYXRlL2luZGV4LmpzXCI7XG5pbXBvcnQgdG9JbnRlZ2VyIGZyb20gXCIuLi9fbGliL3RvSW50ZWdlci9pbmRleC5qc1wiO1xuaW1wb3J0IHJlcXVpcmVkQXJncyBmcm9tIFwiLi4vX2xpYi9yZXF1aXJlZEFyZ3MvaW5kZXguanNcIjtcblxuLyoqXG4gKiBAbmFtZSBlbmRPZldlZWtcbiAqIEBjYXRlZ29yeSBXZWVrIEhlbHBlcnNcbiAqIEBzdW1tYXJ5IFJldHVybiB0aGUgZW5kIG9mIGEgd2VlayBmb3IgdGhlIGdpdmVuIGRhdGUuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBSZXR1cm4gdGhlIGVuZCBvZiBhIHdlZWsgZm9yIHRoZSBnaXZlbiBkYXRlLlxuICogVGhlIHJlc3VsdCB3aWxsIGJlIGluIHRoZSBsb2NhbCB0aW1lem9uZS5cbiAqXG4gKiAjIyMgdjIuMC4wIGJyZWFraW5nIGNoYW5nZXM6XG4gKlxuICogLSBbQ2hhbmdlcyB0aGF0IGFyZSBjb21tb24gZm9yIHRoZSB3aG9sZSBsaWJyYXJ5XShodHRwczovL2dpdGh1Yi5jb20vZGF0ZS1mbnMvZGF0ZS1mbnMvYmxvYi9tYXN0ZXIvZG9jcy91cGdyYWRlR3VpZGUubWQjQ29tbW9uLUNoYW5nZXMpLlxuICpcbiAqIEBwYXJhbSB7RGF0ZXxOdW1iZXJ9IGRhdGUgLSB0aGUgb3JpZ2luYWwgZGF0ZVxuICogQHBhcmFtIHtPYmplY3R9IFtvcHRpb25zXSAtIGFuIG9iamVjdCB3aXRoIG9wdGlvbnMuXG4gKiBAcGFyYW0ge0xvY2FsZX0gW29wdGlvbnMubG9jYWxlPWRlZmF1bHRMb2NhbGVdIC0gdGhlIGxvY2FsZSBvYmplY3QuIFNlZSBbTG9jYWxlXXtAbGluayBodHRwczovL2RhdGUtZm5zLm9yZy9kb2NzL0xvY2FsZX1cbiAqIEBwYXJhbSB7MHwxfDJ8M3w0fDV8Nn0gW29wdGlvbnMud2Vla1N0YXJ0c09uPTBdIC0gdGhlIGluZGV4IG9mIHRoZSBmaXJzdCBkYXkgb2YgdGhlIHdlZWsgKDAgLSBTdW5kYXkpXG4gKiBAcmV0dXJucyB7RGF0ZX0gdGhlIGVuZCBvZiBhIHdlZWtcbiAqIEB0aHJvd3Mge1R5cGVFcnJvcn0gMSBhcmd1bWVudCByZXF1aXJlZFxuICogQHRocm93cyB7UmFuZ2VFcnJvcn0gYG9wdGlvbnMud2Vla1N0YXJ0c09uYCBtdXN0IGJlIGJldHdlZW4gMCBhbmQgNlxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBUaGUgZW5kIG9mIGEgd2VlayBmb3IgMiBTZXB0ZW1iZXIgMjAxNCAxMTo1NTowMDpcbiAqIGNvbnN0IHJlc3VsdCA9IGVuZE9mV2VlayhuZXcgRGF0ZSgyMDE0LCA4LCAyLCAxMSwgNTUsIDApKVxuICogLy89PiBTYXQgU2VwIDA2IDIwMTQgMjM6NTk6NTkuOTk5XG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIElmIHRoZSB3ZWVrIHN0YXJ0cyBvbiBNb25kYXksIHRoZSBlbmQgb2YgdGhlIHdlZWsgZm9yIDIgU2VwdGVtYmVyIDIwMTQgMTE6NTU6MDA6XG4gKiBjb25zdCByZXN1bHQgPSBlbmRPZldlZWsobmV3IERhdGUoMjAxNCwgOCwgMiwgMTEsIDU1LCAwKSwgeyB3ZWVrU3RhcnRzT246IDEgfSlcbiAqIC8vPT4gU3VuIFNlcCAwNyAyMDE0IDIzOjU5OjU5Ljk5OVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBlbmRPZldlZWsoZGlydHlEYXRlLCBkaXJ0eU9wdGlvbnMpIHtcbiAgcmVxdWlyZWRBcmdzKDEsIGFyZ3VtZW50cyk7XG4gIHZhciBvcHRpb25zID0gZGlydHlPcHRpb25zIHx8IHt9O1xuICB2YXIgbG9jYWxlID0gb3B0aW9ucy5sb2NhbGU7XG4gIHZhciBsb2NhbGVXZWVrU3RhcnRzT24gPSBsb2NhbGUgJiYgbG9jYWxlLm9wdGlvbnMgJiYgbG9jYWxlLm9wdGlvbnMud2Vla1N0YXJ0c09uO1xuICB2YXIgZGVmYXVsdFdlZWtTdGFydHNPbiA9IGxvY2FsZVdlZWtTdGFydHNPbiA9PSBudWxsID8gMCA6IHRvSW50ZWdlcihsb2NhbGVXZWVrU3RhcnRzT24pO1xuICB2YXIgd2Vla1N0YXJ0c09uID0gb3B0aW9ucy53ZWVrU3RhcnRzT24gPT0gbnVsbCA/IGRlZmF1bHRXZWVrU3RhcnRzT24gOiB0b0ludGVnZXIob3B0aW9ucy53ZWVrU3RhcnRzT24pOyAvLyBUZXN0IGlmIHdlZWtTdGFydHNPbiBpcyBiZXR3ZWVuIDAgYW5kIDYgX2FuZF8gaXMgbm90IE5hTlxuXG4gIGlmICghKHdlZWtTdGFydHNPbiA+PSAwICYmIHdlZWtTdGFydHNPbiA8PSA2KSkge1xuICAgIHRocm93IG5ldyBSYW5nZUVycm9yKCd3ZWVrU3RhcnRzT24gbXVzdCBiZSBiZXR3ZWVuIDAgYW5kIDYgaW5jbHVzaXZlbHknKTtcbiAgfVxuXG4gIHZhciBkYXRlID0gdG9EYXRlKGRpcnR5RGF0ZSk7XG4gIHZhciBkYXkgPSBkYXRlLmdldERheSgpO1xuICB2YXIgZGlmZiA9IChkYXkgPCB3ZWVrU3RhcnRzT24gPyAtNyA6IDApICsgNiAtIChkYXkgLSB3ZWVrU3RhcnRzT24pO1xuICBkYXRlLnNldERhdGUoZGF0ZS5nZXREYXRlKCkgKyBkaWZmKTtcbiAgZGF0ZS5zZXRIb3VycygyMywgNTksIDU5LCA5OTkpO1xuICByZXR1cm4gZGF0ZTtcbn0iLCJpbXBvcnQgeyB1aSB9IGZyb20gJy4vdWknXG5pbXBvcnQgeyBsaXN0cyB9IGZyb20gJy4vbGlzdCdcbmltcG9ydCB7IGVkaXRvciB9IGZyb20gJy4vZWRpdG9yJ1xuaW1wb3J0IHsgYWxsVGFza3MsIHVwZGF0ZUxvY2FsU3RvcmFnZSB9IGZyb20gJy4vZGF0YSdcbmltcG9ydCB7IHBhcnNlSVNPLCBpc0JlZm9yZSwgZW5kT2ZUb2RheSwgZW5kT2ZXZWVrIH0gZnJvbSAnZGF0ZS1mbnMnXG5cbmNvbnN0IFRhc2sgPSAodGl0bGUsIHByaW9yaXR5LCBkdWVEYXRlLCBsaXN0LCBzdWJ0YXNrcywgbm90ZXMsIGNvbXBsZXRlZCwgdGFza0lEKSA9PiB7XG4gICAgcmV0dXJuIHsgdGl0bGUsIHByaW9yaXR5LCBkdWVEYXRlLCBsaXN0LCBzdWJ0YXNrcywgbm90ZXMsIGNvbXBsZXRlZCwgdGFza0lELCB9XG59XG5cbmNvbnN0IHRhc2tzID0gKCkgPT4ge1xuICAgIGNvbnN0IGRpc3BsYXkgPSAodGFza0FycmF5KSA9PiB7XG4gICAgICAgIGNvbnN0IHRhc2tDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndGFza0NvbnRhaW5lcicpO1xuICAgICAgICB0YXNrQ29udGFpbmVyLmlubmVySFRNTCA9ICcnO1xuXG4gICAgICAgIHRhc2tBcnJheS5mb3JFYWNoKHRhc2sgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGFza1RlbXBsYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2stdGVtcGxhdGUnKTtcbiAgICAgICAgICAgIGNvbnN0IHRhc2tDbG9uZSA9IGRvY3VtZW50LmltcG9ydE5vZGUodGFza1RlbXBsYXRlLmNvbnRlbnQsIHRydWUpO1xuICAgICAgICAgICAgdGFza0NvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrQ2xvbmUpO1xuXG4gICAgICAgICAgICBjb25zdCB0YXNrcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtdGFza10nKSk7XG4gICAgICAgICAgICBjb25zdCBjaGVja2JveGVzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1jb21wbGV0ZScpKTtcbiAgICAgICAgICAgIGNvbnN0IGluZGV4ID0gdGFza0FycmF5LmluZGV4T2YodGFzayk7XG5cbiAgICAgICAgICAgIHRhc2tzW2luZGV4XS50ZXh0Q29udGVudCA9IHRhc2sudGl0bGU7XG4gICAgICAgICAgICB0YXNrc1tpbmRleF0uZGF0YXNldC50YXNrID0gdGFzay50YXNrSUQ7XG4gICAgICAgIFxuICAgICAgICAgICAgaWYgKHRhc2suY29tcGxldGVkID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgdGFza3NbaW5kZXhdLmNsYXNzTGlzdC5hZGQoJ2NvbXBsZXRlZCcpO1xuICAgICAgICAgICAgICAgIGNoZWNrYm94ZXNbaW5kZXhdLmNoZWNrZWQgPSB0cnVlO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICB0YXNrc1tpbmRleF0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgZWRpdG9yKCkuZGlzcGxheVRhc2sodGFzayk7XG4gICAgICAgICAgICB9KTtcblxuICAgICAgICAgICAgY2hlY2tib3hlc1tpbmRleF0uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoKSA9PiB7XG4gICAgICAgICAgICAgICAgaGFuZGxlQ29tcGxldGVkKHRhc2ssIHRhc2tzW2luZGV4XSk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgaGFuZGxlUXVpY2tBZGQgPSAobGlzdCkgPT4ge1xuICAgICAgICBjb25zdCB0aXRsZSA9IGdldFRpdGxlKCk7XG4gICAgICAgIGxldCB0YXNrSUQ7XG4gICAgXG4gICAgICAgIGlmIChsaXN0Lmxlbmd0aCA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0YXNrSUQgPSBsaXN0LnRhc2tzLmxlbmd0aCArIDE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0YXNrSUQgPSBsaXN0Lmxlbmd0aCArIDE7XG4gICAgICAgIH1cblxuICAgICAgICBsZXQgbmV3VGFzaztcbiAgICAgICAgaWYgKGxpc3RzKCkuZ2V0QWN0aXZlTGlzdCgpID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIG5ld1Rhc2sgPSBUYXNrKHRpdGxlLCAnJywgJycsICcnLCBbXSwgJycsICcnLCB0YXNrSUQpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgdGFyZ2V0TGlzdCA9IGxpc3RzKCkuZ2V0QWN0aXZlTGlzdCgpLnRpdGxlO1xuICAgICAgICAgICAgbmV3VGFzayA9IFRhc2sodGl0bGUsICcnLCAnJywgdGFyZ2V0TGlzdCwgW10sICcnLCAnJywgdGFza0lEKTtcbiAgICAgICAgfVxuICAgICAgICAgICAgICBcbiAgICAgICAgaWYgKGxpc3QudGFza3MgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgYWxsVGFza3MucHVzaChuZXdUYXNrKTtcbiAgICAgICAgICAgIHF1aWNrQWRkVGFzay52YWx1ZSA9ICcnO1xuICAgICAgICAgICAgdWkoKS5yZW5kZXJOYXZPcHRpb24oJ0FsbCB0YXNrcycpO1xuICAgICAgICAgICAgZGlzcGxheShsaXN0KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIGxpc3QudGFza3MucHVzaChuZXdUYXNrKTtcbiAgICAgICAgICAgIGFsbFRhc2tzLnB1c2gobmV3VGFzayk7XG4gICAgICAgICAgICBxdWlja0FkZFRhc2sudmFsdWUgPSAnJztcbiAgICAgICAgICAgIGRpc3BsYXkobGlzdC50YXNrcyk7XG4gICAgICAgIH1cblxuICAgICAgICB1cGRhdGVMb2NhbFN0b3JhZ2UoKVxuICAgIH1cblxuICAgIGNvbnN0IGhhbmRsZURlbGV0ZSA9ICh0YXNrQXJyYXksIHRhc2spID0+IHtcbiAgICAgICAgY29uc3QgYXJyYXlJbmRleCA9IHRhc2tBcnJheS5pbmRleE9mKHRhc2spO1xuICAgICAgICBjb25zdCB0YXNrSW5BbGxUYXNrcyA9IGFsbFRhc2tzLmZpbmQoICh7IHRpdGxlIH0pID0+IHRpdGxlID09PSB0YXNrLnRpdGxlKTtcbiAgICAgICAgY29uc3QgYWxsVGFza3NJbmRleCA9IGFsbFRhc2tzLmluZGV4T2YodGFza0luQWxsVGFza3MpO1xuXG4gICAgICAgIHRhc2tBcnJheS5zcGxpY2UoYXJyYXlJbmRleCwgMSk7XG4gICAgICAgIGFsbFRhc2tzLnNwbGljZShhbGxUYXNrc0luZGV4LCAxKTtcblxuICAgICAgICB1cGRhdGVMb2NhbFN0b3JhZ2UoKTtcbiAgICB9XG5cbiAgICBjb25zdCBoYW5kbGVDb21wbGV0ZWQgPSAodGFzaywgdGFza0VsZW1lbnQpID0+IHtcbiAgICAgICAgaWYgKHRhc2suY29tcGxldGVkID09PSB0cnVlKSB7XG4gICAgICAgICAgICB0YXNrLmNvbXBsZXRlZCA9IGZhbHNlO1xuICAgICAgICAgICAgdGFza0VsZW1lbnQuY2xhc3NMaXN0LnJlbW92ZSgnY29tcGxldGVkJyk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICB0YXNrLmNvbXBsZXRlZCA9IHRydWU7XG4gICAgICAgICAgICB0YXNrRWxlbWVudC5jbGFzc0xpc3QuYWRkKCdjb21wbGV0ZWQnKTtcbiAgICAgICAgfVxuXG4gICAgICAgIHVwZGF0ZUxvY2FsU3RvcmFnZSgpO1xuICAgIH1cblxuICAgIGNvbnN0IGdldFRpdGxlID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBxdWlja0FkZFRhc2sgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgncXVpY2tBZGRUYXNrJyk7XG4gICAgICAgIFxuICAgICAgICByZXR1cm4gcXVpY2tBZGRUYXNrLnZhbHVlO1xuICAgIH1cblxuICAgIGNvbnN0IGdldEFjdGl2ZVRhc2sgPSAodGFza0FycmF5KSA9PiB7XG4gICAgICAgIGNvbnN0IHRhc2tUaXRsZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjdXJyZW50VGFzaycpLnBsYWNlaG9sZGVyO1xuICAgICAgICBjb25zdCBhY3RpdmVUYXNrID0gdGFza0FycmF5LmZpbmQoICh7dGl0bGV9KSA9PiB0aXRsZSA9PT0gdGFza1RpdGxlKTtcblxuICAgICAgICByZXR1cm4gYWN0aXZlVGFza1xuICAgIH1cblxuICAgIGNvbnN0IGdldEFsbFRhc2tzID0gKGxpc3RBcnJheSkgPT4ge1xuICAgICAgICBsaXN0QXJyYXkuZm9yRWFjaChsaXN0ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGl0ZXJhdG9yID0gbGlzdC50YXNrcy52YWx1ZXMoKTtcbiAgICAgICAgICAgIGZvciAoY29uc3QgdGFzayBvZiBpdGVyYXRvcikge1xuICAgICAgICAgICAgICAgIGFsbFRhc2tzLnB1c2godGFzayk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IGdldFRvZGF5VGFza3MgPSAodGFza0FycmF5KSA9PiB7XG4gICAgICAgIGxldCB0b2RheVRhc2tzID0gW107XG5cbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0YXNrQXJyYXkubGVuZ3RoOyBpKyspIHtcbiAgICAgICAgICAgIGNvbnN0IGVuZE9mRGF5ID0gZW5kT2ZUb2RheSgpO1xuICAgICAgICAgICAgY29uc3QgZHVlRGF0ZSA9IHBhcnNlSVNPKHRhc2tBcnJheVtpXS5kdWVEYXRlKTtcbiAgICAgICAgICAgIGlmIChpc0JlZm9yZShkdWVEYXRlLCBlbmRPZkRheSkpIHtcbiAgICAgICAgICAgICAgICB0b2RheVRhc2tzLnB1c2godGFza0FycmF5W2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIHJldHVybiB0b2RheVRhc2tzXG4gICAgfVxuXG4gICAgY29uc3QgZ2V0V2Vla1Rhc2tzID0gKHRhc2tBcnJheSkgPT4ge1xuICAgICAgICBjb25zdCB0b2RheSA9IG5ldyBEYXRlKCk7XG4gICAgICAgIGxldCB3ZWVrVGFza3MgPSBbXTtcblxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRhc2tBcnJheS5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgY29uc3QgZW5kT2ZUaGlzV2VlayA9IGVuZE9mV2Vlayh0b2RheSk7XG4gICAgICAgICAgICBjb25zdCBkdWVEYXRlID0gcGFyc2VJU08odGFza0FycmF5W2ldLmR1ZURhdGUpO1xuICAgICAgICAgICAgaWYgKGlzQmVmb3JlKGR1ZURhdGUsIGVuZE9mVGhpc1dlZWspKSB7XG4gICAgICAgICAgICAgICAgd2Vla1Rhc2tzLnB1c2godGFza0FycmF5W2ldKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIFxuICAgICAgICByZXR1cm4gd2Vla1Rhc2tzXG4gICAgfVxuXG4gICAgY29uc3QgY2xlYXJDb21wbGV0ZWQgPSAodGFza0FycmF5KSA9PiB7XG4gICAgICAgIHRhc2tBcnJheS5mb3JFYWNoKHRhc2sgPT4ge1xuICAgICAgICAgICAgaWYgKHRhc2suY29tcGxldGVkID09PSB0cnVlKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgaW5kZXggPSB0YXNrQXJyYXkuaW5kZXhPZih0YXNrKTtcbiAgICAgICAgICAgICAgICB0YXNrQXJyYXkuc3BsaWNlKGluZGV4LCAxKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICB1cGRhdGVMb2NhbFN0b3JhZ2UoKTtcbiAgICB9XG5cbiAgICBjb25zdCByZXNldElEcyA9ICh0YXNrQXJyYXkpID0+IHtcbiAgICAgICAgaWYgKHRhc2tBcnJheS50YXNrcyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICBsZXQgaSA9IDE7XG4gICAgICAgICAgICB0YXNrQXJyYXkuZm9yRWFjaCh0YXNrID0+IHtcbiAgICAgICAgICAgICAgICB0YXNrLnRhc2tJRCA9IGk7XG4gICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsZXQgaSA9IDE7XG4gICAgICAgICAgICB0YXNrQXJyYXkudGFza3MuZm9yRWFjaCh0YXNrID0+IHtcbiAgICAgICAgICAgICAgICB0YXNrLnRhc2tJRCA9IGk7XG4gICAgICAgICAgICAgICAgaSsrO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4geyBkaXNwbGF5LCBoYW5kbGVRdWlja0FkZCwgaGFuZGxlRGVsZXRlLCBnZXRBY3RpdmVUYXNrLCBnZXRBbGxUYXNrcywgZ2V0VG9kYXlUYXNrcywgZ2V0V2Vla1Rhc2tzLCBjbGVhckNvbXBsZXRlZCwgcmVzZXRJRHMgfVxufVxuXG5leHBvcnQgeyBUYXNrLCB0YXNrcyB9IiwiaW1wb3J0IHRvRGF0ZSBmcm9tIFwiLi4vdG9EYXRlL2luZGV4LmpzXCI7XG5pbXBvcnQgcmVxdWlyZWRBcmdzIGZyb20gXCIuLi9fbGliL3JlcXVpcmVkQXJncy9pbmRleC5qc1wiO1xuLyoqXG4gKiBAbmFtZSBlbmRPZkRheVxuICogQGNhdGVnb3J5IERheSBIZWxwZXJzXG4gKiBAc3VtbWFyeSBSZXR1cm4gdGhlIGVuZCBvZiBhIGRheSBmb3IgdGhlIGdpdmVuIGRhdGUuXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBSZXR1cm4gdGhlIGVuZCBvZiBhIGRheSBmb3IgdGhlIGdpdmVuIGRhdGUuXG4gKiBUaGUgcmVzdWx0IHdpbGwgYmUgaW4gdGhlIGxvY2FsIHRpbWV6b25lLlxuICpcbiAqICMjIyB2Mi4wLjAgYnJlYWtpbmcgY2hhbmdlczpcbiAqXG4gKiAtIFtDaGFuZ2VzIHRoYXQgYXJlIGNvbW1vbiBmb3IgdGhlIHdob2xlIGxpYnJhcnldKGh0dHBzOi8vZ2l0aHViLmNvbS9kYXRlLWZucy9kYXRlLWZucy9ibG9iL21hc3Rlci9kb2NzL3VwZ3JhZGVHdWlkZS5tZCNDb21tb24tQ2hhbmdlcykuXG4gKlxuICogQHBhcmFtIHtEYXRlfE51bWJlcn0gZGF0ZSAtIHRoZSBvcmlnaW5hbCBkYXRlXG4gKiBAcmV0dXJucyB7RGF0ZX0gdGhlIGVuZCBvZiBhIGRheVxuICogQHRocm93cyB7VHlwZUVycm9yfSAxIGFyZ3VtZW50IHJlcXVpcmVkXG4gKlxuICogQGV4YW1wbGVcbiAqIC8vIFRoZSBlbmQgb2YgYSBkYXkgZm9yIDIgU2VwdGVtYmVyIDIwMTQgMTE6NTU6MDA6XG4gKiBjb25zdCByZXN1bHQgPSBlbmRPZkRheShuZXcgRGF0ZSgyMDE0LCA4LCAyLCAxMSwgNTUsIDApKVxuICogLy89PiBUdWUgU2VwIDAyIDIwMTQgMjM6NTk6NTkuOTk5XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZW5kT2ZEYXkoZGlydHlEYXRlKSB7XG4gIHJlcXVpcmVkQXJncygxLCBhcmd1bWVudHMpO1xuICB2YXIgZGF0ZSA9IHRvRGF0ZShkaXJ0eURhdGUpO1xuICBkYXRlLnNldEhvdXJzKDIzLCA1OSwgNTksIDk5OSk7XG4gIHJldHVybiBkYXRlO1xufSIsImltcG9ydCBlbmRPZkRheSBmcm9tIFwiLi4vZW5kT2ZEYXkvaW5kZXguanNcIjtcbi8qKlxuICogQG5hbWUgZW5kT2ZUb2RheVxuICogQGNhdGVnb3J5IERheSBIZWxwZXJzXG4gKiBAc3VtbWFyeSBSZXR1cm4gdGhlIGVuZCBvZiB0b2RheS5cbiAqIEBwdXJlIGZhbHNlXG4gKlxuICogQGRlc2NyaXB0aW9uXG4gKiBSZXR1cm4gdGhlIGVuZCBvZiB0b2RheS5cbiAqXG4gKiA+IOKaoO+4jyBQbGVhc2Ugbm90ZSB0aGF0IHRoaXMgZnVuY3Rpb24gaXMgbm90IHByZXNlbnQgaW4gdGhlIEZQIHN1Ym1vZHVsZSBhc1xuICogPiBpdCB1c2VzIGBEYXRlLm5vdygpYCBpbnRlcm5hbGx5IGhlbmNlIGltcHVyZSBhbmQgY2FuJ3QgYmUgc2FmZWx5IGN1cnJpZWQuXG4gKlxuICogIyMjIHYyLjAuMCBicmVha2luZyBjaGFuZ2VzOlxuICpcbiAqIC0gW0NoYW5nZXMgdGhhdCBhcmUgY29tbW9uIGZvciB0aGUgd2hvbGUgbGlicmFyeV0oaHR0cHM6Ly9naXRodWIuY29tL2RhdGUtZm5zL2RhdGUtZm5zL2Jsb2IvbWFzdGVyL2RvY3MvdXBncmFkZUd1aWRlLm1kI0NvbW1vbi1DaGFuZ2VzKS5cbiAqXG4gKiBAcmV0dXJucyB7RGF0ZX0gdGhlIGVuZCBvZiB0b2RheVxuICpcbiAqIEBleGFtcGxlXG4gKiAvLyBJZiB0b2RheSBpcyA2IE9jdG9iZXIgMjAxNDpcbiAqIHZhciByZXN1bHQgPSBlbmRPZlRvZGF5KClcbiAqIC8vPT4gTW9uIE9jdCA2IDIwMTQgMjM6NTk6NTkuOTk5XG4gKi9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZW5kT2ZUb2RheSgpIHtcbiAgcmV0dXJuIGVuZE9mRGF5KERhdGUubm93KCkpO1xufSIsImltcG9ydCAnL3NyYy9zdHlsZS5jc3MnXG5pbXBvcnQgdGFza0NhdEljb24gZnJvbSAnL3NyYy9pbWcvaWNvbi1jYXQucG5nJ1xuaW1wb3J0IGdpdGh1Ykljb24gZnJvbSAnL3NyYy9pbWcvZ2l0aHViLWljb24ucG5nJ1xuaW1wb3J0IG1lbnUgZnJvbSAnL3NyYy9pbWcvbWVudS5wbmcnXG5pbXBvcnQgeyBsaXN0cyB9IGZyb20gJy4vbGlzdCdcbmltcG9ydCB7IHRhc2tzIH0gZnJvbSAnLi90YXNrJ1xuaW1wb3J0IHsgZWRpdG9yIH0gZnJvbSAnLi9lZGl0b3InXG5pbXBvcnQgeyB1c2VyTGlzdHMsIGFsbFRhc2tzIH0gZnJvbSAnLi9kYXRhJ1xuXG5jb25zdCB1aSA9ICgpID0+IHtcbiAgICBjb25zdCBpbml0TGlzdENsb25lID0gKCkgPT4ge1xuICAgICAgICBpZiAoY29udGVudC5jb250YWlucyhkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGlzdENhcmRDb250YWluZXInKSkpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsaXN0Q2FyZENvbnRhaW5lcicpLnJlbW92ZSgpO1xuICAgICAgICB9XG5cbiAgICAgICAgaWYgKGNvbnRlbnQuY29udGFpbnMoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RvZG9DYXJkQ29udGFpbmVyJykpKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9kb0NhcmRDb250YWluZXInKS5yZW1vdmUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnN0IGxpc3RDYXJkVGVtcGxhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGlzdENhcmQtdGVtcGxhdGUnKTtcbiAgICAgICAgY29uc3QgbGlzdENhcmRDbG9uZSA9IGRvY3VtZW50LmltcG9ydE5vZGUobGlzdENhcmRUZW1wbGF0ZS5jb250ZW50LCB0cnVlKTtcbiAgICAgICAgY29udGVudC5hcHBlbmRDaGlsZChsaXN0Q2FyZENsb25lKTtcblxuICAgICAgICBjb25zdCBsaXN0VGl0bGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGlzdFRpdGxlJyk7XG4gICAgICAgIGNvbnN0IGxpc3REZXNjcmlwdGlvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsaXN0RGVzY3JpcHRpb24nKTtcblxuICAgICAgICBsaXN0VGl0bGUuZm9jdXMoKTtcbiAgICAgICAgYWRkTGlzdExpc3RlbmVycygpO1xuXG4gICAgICAgIHJldHVybiB7IGxpc3RUaXRsZSwgbGlzdERlc2NyaXB0aW9uIH1cbiAgICB9XG5cbiAgICBjb25zdCBhZGRMaXN0TGlzdGVuZXJzID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBjYW5jZWxMaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NhbmNlbExpc3QnKTtcbiAgICAgICAgY29uc3Qgc3VibWl0TGlzdCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdWJtaXRMaXN0Jyk7XG5cbiAgICAgICAgY2FuY2VsTGlzdC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIGluaXRUb2RvQ2xvbmUoKTtcbiAgICAgICAgICAgIHJlbmRlck5hdk9wdGlvbignQWxsIHRhc2tzJylcbiAgICAgICAgfSk7XG4gICAgICAgIFxuICAgICAgICBzdWJtaXRMaXN0LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgbmV3TGlzdCA9IGxpc3RzKCkuaGFuZGxlRm9ybSh1c2VyTGlzdHMpO1xuICAgICAgICAgICAgbGlzdHMoKS5kaXNwbGF5KHVzZXJMaXN0cyk7XG4gICAgICAgICAgICByZW5kZXJVc2VyTGlzdChuZXdMaXN0KTtcbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgY29uc3QgaW5pdFRvZG9DbG9uZSA9ICgpID0+IHtcbiAgICAgICAgaWYgKGNvbnRlbnQuY29udGFpbnMoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RvZG9DYXJkQ29udGFpbmVyJykpKSB7XG4gICAgICAgICAgICBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9kb0NhcmRDb250YWluZXInKS5yZW1vdmUoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChjb250ZW50LmNvbnRhaW5zKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdsaXN0Q2FyZENvbnRhaW5lcicpKSkge1xuICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xpc3RDYXJkQ29udGFpbmVyJykucmVtb3ZlKCk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCB0b2RvQ2FyZFRlbXBsYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3RvZG9DYXJkLXRlbXBsYXRlJyk7XG4gICAgICAgIGNvbnN0IHRvZG9DYXJkQ2xvbmUgPSBkb2N1bWVudC5pbXBvcnROb2RlKHRvZG9DYXJkVGVtcGxhdGUuY29udGVudCwgdHJ1ZSk7XG4gICAgICAgIGNvbnRlbnQuYXBwZW5kQ2hpbGQodG9kb0NhcmRDbG9uZSk7XG5cbiAgICAgICAgY29uc3QgdG9kb0NhcmRDb250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgndG9kb0NhcmRDb250YWluZXInKTtcbiAgICAgICAgY29uc3QgbGlzdFRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xpc3RUaXRsZScpO1xuICAgICAgICBjb25zdCBsaXN0RGVzY3JpcHRpb24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbGlzdERlc2NyaXB0aW9uJyk7XG4gICAgICAgIGNvbnN0IHN1Ym1pdFF1aWNrQWRkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N1Ym1pdFF1aWNrQWRkJyk7XG5cbiAgICAgICAgY3JlYXRlTWVudSgpO1xuXG4gICAgICAgIHJldHVybiB7IHRvZG9DYXJkQ29udGFpbmVyLCBsaXN0VGl0bGUsIGxpc3REZXNjcmlwdGlvbiwgc3VibWl0UXVpY2tBZGQgfVxuICAgIH1cblxuICAgIGNvbnN0IGFkZFRpdGxlTGlzdGVuZXJzID0gKCkgPT4ge1xuICAgICAgICBsaXN0VGl0bGUuYWRkRXZlbnRMaXN0ZW5lcignZm9jdXMnLCAoKSA9PiB7XG4gICAgICAgICAgICBzZXRQbGFjZWhvbGRlcihsaXN0VGl0bGUpO1xuICAgICAgICB9LCB7IG9uY2U6IHRydWUgfSk7XG5cbiAgICAgICAgbGlzdFRpdGxlLmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3Vzb3V0JywgKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgYWN0aXZlTGlzdCA9IGxpc3RzKCkuZ2V0QWN0aXZlTGlzdCgpO1xuICAgICAgICAgICAgbGlzdHMoKS51cGRhdGVUaXRsZShhY3RpdmVMaXN0KTtcbiAgICAgICAgICAgIGxpc3RzKCkuZGlzcGxheSh1c2VyTGlzdHMpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBhZGREZXNjcmlwdGlvbkxpc3RlbmVycyA9ICgpID0+IHtcbiAgICAgICAgbGlzdERlc2NyaXB0aW9uLmFkZEV2ZW50TGlzdGVuZXIoJ2ZvY3VzJywgKCkgPT4ge1xuICAgICAgICAgICAgc2V0UGxhY2Vob2xkZXIobGlzdERlc2NyaXB0aW9uKTtcbiAgICAgICAgfSwgeyBvbmNlOiB0cnVlIH0pO1xuXG4gICAgICAgIGxpc3REZXNjcmlwdGlvbi5hZGRFdmVudExpc3RlbmVyKCdmb2N1c291dCcsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGFjdGl2ZUxpc3QgPSBsaXN0cygpLmdldEFjdGl2ZUxpc3QoKTtcbiAgICAgICAgICAgIGxpc3RzKCkudXBkYXRlRGVzY3JpcHRpb24oYWN0aXZlTGlzdCk7XG4gICAgICAgIH0pO1xuICAgIH1cblxuICAgIGNvbnN0IGluaXRFZGl0b3JDbG9uZSA9ICgpID0+IHtcbiAgICAgICAgaWYgKGNvbnRlbnQuY29udGFpbnMoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2VkaXRvckNhcmRDb250YWluZXInKSkpIHtcbiAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdlZGl0b3JDYXJkQ29udGFpbmVyJykucmVtb3ZlKCk7XG4gICAgICAgIH1cblxuICAgICAgICBjb25zdCBlZGl0b3JDYXJkVGVtcGxhdGUgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZWRpdG9yQ2FyZC10ZW1wbGF0ZScpO1xuICAgICAgICBjb25zdCBlZGl0b3JDbG9uZSA9IGRvY3VtZW50LmltcG9ydE5vZGUoZWRpdG9yQ2FyZFRlbXBsYXRlLmNvbnRlbnQsIHRydWUpO1xuICAgICAgICBjb250ZW50LnByZXBlbmQoZWRpdG9yQ2xvbmUpO1xuXG4gICAgICAgIGNvbnN0IGVkaXRvckZvcm0gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZWRpdG9yRm9ybScpO1xuICAgICAgICBjb25zdCBjdXJyZW50VGFzayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjdXJyZW50VGFzaycpO1xuICAgICAgICBjb25zdCBkdWVEYXRlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2R1ZURhdGUnKTtcbiAgICAgICAgY29uc3QgbGlzdERyb3Bkb3duID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xpc3REcm9wZG93bicpO1xuICAgICAgICBjb25zdCBzdWJ0YXNrQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3N1YnRhc2tDb250YWluZXInKTtcbiAgICAgICAgY29uc3Qgbm90ZXMgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnbm90ZXMnKTtcblxuICAgICAgICBlZGl0b3IoKS5pbml0TGlzdERyb3Bkb3duKHVzZXJMaXN0cyk7XG4gICAgICAgIGFkZEVkaXRvckxpc3RlbmVycygpO1xuICAgICAgICBjdXJyZW50VGFzay5mb2N1cygpO1xuICAgICAgICBcbiAgICAgICAgcmV0dXJuIHsgZWRpdG9yRm9ybSwgY3VycmVudFRhc2ssIGR1ZURhdGUsIGxpc3REcm9wZG93biwgc3VidGFza0NvbnRhaW5lciwgbm90ZXMgfVxuICAgIH1cblxuICAgIGNvbnN0IGFkZEVkaXRvckxpc3RlbmVycyA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgcHJpb3JpdGllcyA9IEFycmF5LmZyb20oZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnW2RhdGEtcHJpb3JpdHldJykpO1xuICAgICAgICBjb25zdCBjcmVhdGVTdWJ0YXNrQnV0dG9uID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NyZWF0ZVN1YnRhc2tCdXR0b24nKTtcbiAgICAgICAgY29uc3Qgc3VibWl0VGFzayA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdzdWJtaXRUYXNrJyk7XG4gICAgICAgIGNvbnN0IGNhbmNlbEVkaXRvciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjYW5jZWxFZGl0b3InKTtcblxuICAgICAgICBwcmlvcml0aWVzLmZvckVhY2gocHJpb3JpdHkgPT4ge1xuICAgICAgICAgICAgcHJpb3JpdHkuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgICAgICAgICAgIHJlbW92ZUNsaWNrZWRDbGFzcygpO1xuICAgICAgICAgICAgICAgIGUudGFyZ2V0LmNsYXNzTGlzdC5hZGQoJ2NsaWNrZWQnKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcblxuICAgICAgICBjcmVhdGVTdWJ0YXNrQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKGUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGFjdGl2ZVRhc2sgPSB0YXNrcygpLmdldEFjdGl2ZVRhc2soYWxsVGFza3MsIGUpO1xuICAgICAgICAgICAgZWRpdG9yKCkuaGFuZGxlU3VidGFzayhhY3RpdmVUYXNrKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgc3VibWl0VGFzay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIGVkaXRvcigpLmhhbmRsZUZvcm0oKTtcbiAgICAgICAgICAgIGNvbnRlbnQucmVtb3ZlQ2hpbGQoZWRpdG9yQ2FyZENvbnRhaW5lcik7XG4gICAgICAgIH0pO1xuXG4gICAgICAgIGNhbmNlbEVkaXRvci5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XG4gICAgICAgICAgICBjb250ZW50LnJlbW92ZUNoaWxkKGVkaXRvckNhcmRDb250YWluZXIpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCByZW5kZXJOYXZPcHRpb24gPSAodGl0bGUpID0+IHtcbiAgICAgICAgaW5pdFRvZG9DbG9uZSgpO1xuXG4gICAgICAgIGxpc3RUaXRsZS52YWx1ZSA9IHRpdGxlO1xuICAgICAgICBsaXN0VGl0bGUuc2V0QXR0cmlidXRlKCdyZWFkb25seScsICdyZWFkb25seScpOyBcbiAgICBcbiAgICAgICAgdG9kb0NhcmRDb250YWluZXIucmVtb3ZlQ2hpbGQobGlzdERlc2NyaXB0aW9uKTtcblxuICAgICAgICBzdWJtaXRRdWlja0FkZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIHRhc2tzKCkuaGFuZGxlUXVpY2tBZGQoYWxsVGFza3MpO1xuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCByZW5kZXJVc2VyTGlzdCA9IChsaXN0KSA9PiB7XG4gICAgICAgIGluaXRUb2RvQ2xvbmUoKTtcblxuICAgICAgICBsaXN0VGl0bGUudmFsdWUgPSBsaXN0LnRpdGxlO1xuICAgICAgICBsaXN0VGl0bGUuZGF0YXNldC5saXN0ID0gbGlzdC5saXN0SUQ7XG4gICAgICAgIGFkZFRpdGxlTGlzdGVuZXJzKCk7XG4gICAgICAgIFxuICAgICAgICBpZiAobGlzdC5kZXNjcmlwdGlvbiA9PT0gJycpIHtcbiAgICAgICAgICAgIHRvZG9DYXJkQ29udGFpbmVyLnJlbW92ZUNoaWxkKGxpc3REZXNjcmlwdGlvbik7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICBsaXN0RGVzY3JpcHRpb24udmFsdWUgPSBsaXN0LmRlc2NyaXB0aW9uO1xuICAgICAgICAgICAgYWRkRGVzY3JpcHRpb25MaXN0ZW5lcnMoKTtcbiAgICAgICAgfVxuXG4gICAgICAgIGlmIChsaXN0LnRhc2tzID09PSAnJykgeyBcbiAgICAgICAgICAgIHN1Ym1pdFF1aWNrQWRkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRhc2tzKCkuaGFuZGxlUXVpY2tBZGQobGlzdCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgIHRhc2tzKCkuZGlzcGxheShsaXN0LnRhc2tzKTsgXG5cbiAgICAgICAgICAgIHN1Ym1pdFF1aWNrQWRkLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgICAgIHRhc2tzKCkuaGFuZGxlUXVpY2tBZGQobGlzdCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cblxuICAgIGNvbnN0IHJlbmRlck1lc3NhZ2UgPSAobWVzc2FnZSkgPT4ge1xuICAgICAgICBjb25zdCB0YXNrQ29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Rhc2tDb250YWluZXInKTtcbiAgICAgICAgdGFza0NvbnRhaW5lci5pbm5lckhUTUwgPSAnJztcblxuICAgICAgICBjb25zdCBkaXYgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgICAgICAgZGl2LnRleHRDb250ZW50ID0gbWVzc2FnZTtcbiAgICAgICAgZGl2LmNsYXNzTGlzdC5hZGQoJ21lc3NhZ2UnKTtcbiAgICAgICAgdGFza0NvbnRhaW5lci5hcHBlbmRDaGlsZChkaXYpO1xuICAgIH1cblxuICAgIGNvbnN0IGluaXRQYWdlID0gKCkgPT4ge1xuICAgICAgICBjb25zdCB0YXNrQ2F0SWNvbkNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCd0YXNrQ2F0SWNvbkNvbnRhaW5lcicpO1xuICAgICAgICBjb25zdCB0YXNrQ2F0SW1hZ2UgPSBuZXcgSW1hZ2UoNjAsIDYwKTtcbiAgICAgICAgdGFza0NhdEltYWdlLnNyYyA9IHRhc2tDYXRJY29uO1xuICAgICAgICB0YXNrQ2F0SWNvbkNvbnRhaW5lci5hcHBlbmRDaGlsZCh0YXNrQ2F0SW1hZ2UpO1xuXG4gICAgICAgIGNvbnN0IGdpdGh1Ykljb25Db250YWluZXIgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnZ2l0aHViSWNvbkNvbnRhaW5lcicpO1xuICAgICAgICBjb25zdCBnaXRodWJJbWFnZSA9IG5ldyBJbWFnZSgyNSwgMjUpO1xuICAgICAgICBnaXRodWJJbWFnZS5zcmMgPSBnaXRodWJJY29uO1xuICAgICAgICBnaXRodWJJY29uQ29udGFpbmVyLmFwcGVuZENoaWxkKGdpdGh1YkltYWdlKTtcblxuICAgICAgICB0YXNrcygpLmdldEFsbFRhc2tzKHVzZXJMaXN0cyk7XG4gICAgICAgIGxpc3RzKCkuZGlzcGxheSh1c2VyTGlzdHMpO1xuICAgICAgICByZW5kZXJOYXZPcHRpb24oJ0FsbCB0YXNrcycpO1xuICAgICAgICB0YXNrcygpLmRpc3BsYXkoYWxsVGFza3MpO1xuICAgICAgICBhZGRQYWdlTGlzdGVuZXJzKCk7XG4gICAgfVxuXG4gICAgY29uc3QgYWRkUGFnZUxpc3RlbmVycyA9ICgpID0+IHtcbiAgICAgICAgY29uc3QgY3JlYXRlVGFza0J1dHRvbiA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdjcmVhdGVUYXNrQnV0dG9uJyk7XG4gICAgICAgIGNvbnN0IGFkZExpc3RCdXR0b24gPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnYWRkTGlzdEJ1dHRvbicpO1xuICAgICAgICBjb25zdCBuYXZBbGwgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS1hbGxdJyk7XG4gICAgICAgIGNvbnN0IG5hdlRvZGF5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignW2RhdGEtdG9kYXldJyk7XG4gICAgICAgIGNvbnN0IG5hdldlZWsgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdbZGF0YS13ZWVrXScpO1xuICAgICAgICBcbiAgICAgICAgY3JlYXRlVGFza0J1dHRvbi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIGluaXRFZGl0b3JDbG9uZSk7XG4gICAgICAgIGFkZExpc3RCdXR0b24uYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCBpbml0TGlzdENsb25lKTtcbiAgICAgICAgbmF2QWxsLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgcmVuZGVyTmF2T3B0aW9uKCdBbGwgdGFza3MnKTtcbiAgICAgICAgICAgIHRhc2tzKCkuZGlzcGxheShhbGxUYXNrcyk7XG4gICAgICAgIH0pO1xuICAgICAgICBuYXZUb2RheS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHRvZGF5VGFza3MgPSB0YXNrcygpLmdldFRvZGF5VGFza3MoYWxsVGFza3MpO1xuICAgICAgICAgICAgcmVuZGVyTmF2T3B0aW9uKCdUb2RheScpO1xuICAgICAgICAgICAgaWYgKHRvZGF5VGFza3MubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICAgICAgdWkoKS5yZW5kZXJNZXNzYWdlKGBZb3UncmUgYWxsIGNhdWdodCB1cCFgKTtcbiAgICAgICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgICAgICAgdGFza3MoKS5kaXNwbGF5KHRvZGF5VGFza3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICAgICAgbmF2V2Vlay5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHdlZWtUYXNrcyA9IHRhc2tzKCkuZ2V0V2Vla1Rhc2tzKGFsbFRhc2tzKTtcbiAgICAgICAgICAgIHJlbmRlck5hdk9wdGlvbignVGhpcyB3ZWVrJyk7XG4gICAgICAgICAgICBpZiAod2Vla1Rhc2tzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgICAgIHVpKCkucmVuZGVyTWVzc2FnZShgWW91J3JlIGFsbCBjYXVnaHQgdXAhYCk7XG4gICAgICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgICAgICAgIHRhc2tzKCkuZGlzcGxheSh3ZWVrVGFza3MpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG5cbiAgICBjb25zdCBjcmVhdGVNZW51ID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBtZW51Q29udGFpbmVyID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ21lbnVDb250YWluZXInKTtcbiAgICAgICAgY29uc3QgbWVudUJveCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdtZW51Qm94Jyk7XG4gICAgICAgIGNvbnN0IGNsZWFyQ29tcGxldGVkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2NsZWFyQ29tcGxldGVkJyk7XG4gICAgICAgIGNvbnN0IG1lbnVJbWFnZSA9IG5ldyBJbWFnZSgyNSwgMjUpO1xuICAgICAgICBtZW51SW1hZ2Uuc3JjID0gbWVudTtcbiAgICAgICAgbWVudUNvbnRhaW5lci5wcmVwZW5kKG1lbnVJbWFnZSk7XG5cbiAgICAgICAgbWVudUltYWdlLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICAgICAgICAgICAgbWVudUJveC5jbGFzc0xpc3QucmVtb3ZlKCdoaWRkZW4nKTtcbiAgICAgICAgfSk7XG5cbiAgICAgICAgbWVudUJveC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgKCkgPT4ge1xuICAgICAgICAgICAgbWVudUJveC5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKTtcbiAgICAgICAgfSlcblxuICAgICAgICBjbGVhckNvbXBsZXRlZC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGFjdGl2ZUxpc3QgPSBsaXN0cygpLmdldEFjdGl2ZUxpc3QoKTtcbiAgICAgICAgICAgIGlmIChhY3RpdmVMaXN0ID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICB0YXNrcygpLmNsZWFyQ29tcGxldGVkKGFsbFRhc2tzKTtcbiAgICAgICAgICAgICAgICB0YXNrcygpLmRpc3BsYXkoYWxsVGFza3MpO1xuICAgICAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICAgICAgICB0YXNrcygpLmNsZWFyQ29tcGxldGVkKGFjdGl2ZUxpc3QudGFza3MpO1xuICAgICAgICAgICAgICAgIHRhc2tzKCkuY2xlYXJDb21wbGV0ZWQoYWxsVGFza3MpO1xuICAgICAgICAgICAgICAgIHRhc2tzKCkuZGlzcGxheShhY3RpdmVMaXN0LnRhc2tzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSlcbiAgICB9XG5cbiAgICBjb25zdCBzZXRQbGFjZWhvbGRlciA9IChlbGVtZW50KSA9PiB7XG4gICAgICAgIGVsZW1lbnQucGxhY2Vob2xkZXIgPSBlbGVtZW50LnZhbHVlO1xuICAgICAgICBlbGVtZW50LnZhbHVlID0gJyc7XG4gICAgfVxuXG4gICAgY29uc3QgcmVtb3ZlQ2xpY2tlZENsYXNzID0gKCkgPT4ge1xuICAgICAgICBjb25zdCBwcmlvcml0aWVzID0gQXJyYXkuZnJvbShkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKCdbZGF0YS1wcmlvcml0eV0nKSk7XG5cbiAgICAgICAgcHJpb3JpdGllcy5mb3JFYWNoKHByaW9yaXR5ID0+IHtcbiAgICAgICAgICAgIGlmIChwcmlvcml0eS5jbGFzc0xpc3QuY29udGFpbnMoJ2NsaWNrZWQnKSkge1xuICAgICAgICAgICAgICAgIHByaW9yaXR5LmNsYXNzTGlzdC5yZW1vdmUoJ2NsaWNrZWQnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHsgaW5pdFBhZ2UsIGluaXRFZGl0b3JDbG9uZSwgcmVuZGVyVXNlckxpc3QsIHJlbmRlck5hdk9wdGlvbiwgcmVuZGVyTWVzc2FnZSwgc2V0UGxhY2Vob2xkZXIsIH1cbn1cblxuZXhwb3J0IHsgdWkgfSIsImltcG9ydCAnLi9zdHlsZS5jc3MnXG5pbXBvcnQgeyB1aSB9IGZyb20gJy4vbW9kdWxlcy91aS5qcydcblxud2luZG93Lm9ubG9hZCA9ICgpID0+IHtcbiAgICB1aSgpLmluaXRQYWdlKCk7XG59Il0sIm5hbWVzIjpbIl9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fIiwiVVJMIiwiX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzFfX18iLCJfX19DU1NfTE9BREVSX0VYUE9SVF9fXyIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8xX19fIiwicHVzaCIsIm1vZHVsZSIsImlkIiwiZXhwb3J0cyIsImNzc1dpdGhNYXBwaW5nVG9TdHJpbmciLCJsaXN0IiwidG9TdHJpbmciLCJ0aGlzIiwibWFwIiwiaXRlbSIsImNvbnRlbnQiLCJuZWVkTGF5ZXIiLCJjb25jYXQiLCJsZW5ndGgiLCJqb2luIiwiaSIsIm1vZHVsZXMiLCJtZWRpYSIsImRlZHVwZSIsInN1cHBvcnRzIiwibGF5ZXIiLCJ1bmRlZmluZWQiLCJhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzIiwiayIsIl9rIiwidXJsIiwib3B0aW9ucyIsIlN0cmluZyIsIl9fZXNNb2R1bGUiLCJkZWZhdWx0IiwidGVzdCIsInNsaWNlIiwiaGFzaCIsIm5lZWRRdW90ZXMiLCJyZXBsYWNlIiwiY3NzTWFwcGluZyIsImJ0b2EiLCJiYXNlNjQiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsIkpTT04iLCJzdHJpbmdpZnkiLCJkYXRhIiwic291cmNlTWFwcGluZyIsInNvdXJjZVVSTHMiLCJzb3VyY2VzIiwic291cmNlIiwic291cmNlUm9vdCIsInN0eWxlc0luRE9NIiwiZ2V0SW5kZXhCeUlkZW50aWZpZXIiLCJpZGVudGlmaWVyIiwicmVzdWx0IiwibW9kdWxlc1RvRG9tIiwiaWRDb3VudE1hcCIsImlkZW50aWZpZXJzIiwiYmFzZSIsImNvdW50IiwiaW5kZXhCeUlkZW50aWZpZXIiLCJvYmoiLCJjc3MiLCJzb3VyY2VNYXAiLCJyZWZlcmVuY2VzIiwidXBkYXRlciIsImFkZEVsZW1lbnRTdHlsZSIsImJ5SW5kZXgiLCJzcGxpY2UiLCJhcGkiLCJkb21BUEkiLCJ1cGRhdGUiLCJuZXdPYmoiLCJyZW1vdmUiLCJsYXN0SWRlbnRpZmllcnMiLCJuZXdMaXN0IiwiaW5kZXgiLCJuZXdMYXN0SWRlbnRpZmllcnMiLCJfaSIsIl9pbmRleCIsIm1lbW8iLCJpbnNlcnQiLCJzdHlsZSIsInRhcmdldCIsInN0eWxlVGFyZ2V0IiwiZG9jdW1lbnQiLCJxdWVyeVNlbGVjdG9yIiwid2luZG93IiwiSFRNTElGcmFtZUVsZW1lbnQiLCJjb250ZW50RG9jdW1lbnQiLCJoZWFkIiwiZSIsImdldFRhcmdldCIsIkVycm9yIiwiYXBwZW5kQ2hpbGQiLCJlbGVtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZXMiLCJhdHRyaWJ1dGVzIiwic3R5bGVFbGVtZW50Iiwibm9uY2UiLCJzZXRBdHRyaWJ1dGUiLCJpbnNlcnRTdHlsZUVsZW1lbnQiLCJzdHlsZVRhZ1RyYW5zZm9ybSIsImFwcGx5IiwicGFyZW50Tm9kZSIsInJlbW92ZUNoaWxkIiwicmVtb3ZlU3R5bGVFbGVtZW50Iiwic3R5bGVTaGVldCIsImNzc1RleHQiLCJmaXJzdENoaWxkIiwiY3JlYXRlVGV4dE5vZGUiLCJ1c2VyTGlzdHMiLCJnZXRMb2NhbFN0b3JhZ2UiLCJ0aXRsZSIsImRlc2NyaXB0aW9uIiwidGFza3MiLCJwcmlvcml0eSIsImR1ZURhdGUiLCJzdWJ0YXNrcyIsImNvbXBsZXRlZCIsInN1YnRhc2siLCJub3RlcyIsInRhc2tJRCIsImxpc3RJRCIsImFsbFRhc2tzIiwidXBkYXRlTG9jYWxTdG9yYWdlIiwibG9jYWxTdG9yYWdlIiwiY2xlYXIiLCJ1c2VyTGlzdF9zdHJpbmciLCJzZXRJdGVtIiwiZ2V0SXRlbSIsInBhcnNlIiwibGlzdHMiLCJkaXNwbGF5IiwibGlzdEFycmF5IiwibGlzdENvbnRhaW5lciIsImdldEVsZW1lbnRCeUlkIiwiaW5uZXJIVE1MIiwiZm9yRWFjaCIsImxpc3RUZW1wbGF0ZSIsImxpc3RDbG9uZSIsImltcG9ydE5vZGUiLCJBcnJheSIsImZyb20iLCJxdWVyeVNlbGVjdG9yQWxsIiwiZGVsZXRlSWNvbnMiLCJpbmRleE9mIiwidGV4dENvbnRlbnQiLCJkYXRhc2V0IiwiYWRkRXZlbnRMaXN0ZW5lciIsInVpIiwicmVuZGVyVXNlckxpc3QiLCJzcmMiLCJoYW5kbGVEZWxldGUiLCJyZXNldElEcyIsImdldFRpdGxlRnJvbUlucHV0IiwidmFsdWUiLCJnZXREZXNjcmlwdGlvbkZyb21JbnB1dCIsImhhbmRsZUZvcm0iLCJMaXN0IiwidXBkYXRlVGl0bGUiLCJ1cGRhdGVEZXNjcmlwdGlvbiIsImdldEFjdGl2ZUxpc3QiLCJsaXN0VGl0bGUiLCJmaW5kIiwiYWN0aXZlTGlzdCIsImVkaXRvciIsImhhbmRsZVVwZGF0ZSIsInRhc2siLCJnZXRUaXRsZSIsImdldFByaW9yaXR5IiwiZ2V0RHVlRGF0ZSIsImdldFRhcmdldExpc3QiLCJnZXROb3RlcyIsImVkaXRvckNhcmRDb250YWluZXIiLCJjdXJyZW50VGFzayIsInBsYWNlaG9sZGVyIiwiYWN0aXZlUHJpb3JpdHkiLCJjbGFzc0xpc3QiLCJjb250YWlucyIsImdldFN1YnRhc2tzIiwic3VidGFza0FycmF5IiwibmV3U3VidGFzayIsImhhbmRsZUNvbXBsZXRlZCIsImRpc3BsYXlUYXNrIiwiaW5pdEVkaXRvckNsb25lIiwiYnV0dG9uQ29udGFpbmVyIiwic3VibWl0VGFzayIsInVwZGF0ZVRhc2siLCJhZGQiLCJhcHBlbmQiLCJkaXNwbGF5VXBkYXRlIiwiY2FuY2VsRWRpdG9yIiwiZGVsZXRlVGFzayIsInByZXBlbmQiLCJkaXNwbGF5RGVsZXRlIiwic2V0VGl0bGUiLCJzZXRQcmlvcml0eSIsInNldER1ZURhdGUiLCJzZXRUYXJnZXRMaXN0Iiwic3VidGFza0NvbnRhaW5lciIsImN1cnJlbnRTdWJ0YXNrcyIsInN1YnRhc2tUZW1wbGF0ZSIsInN1YnRhc2tDbG9uZSIsImNoZWNrcyIsImNoZWNrZWQiLCJkaXNwbGF5U3VidGFzayIsInNldE5vdGVzIiwic2V0UGxhY2Vob2xkZXIiLCJibHVyIiwidGFyZ2V0TGlzdCIsIm5ld1Rhc2siLCJUYXNrIiwicmVuZGVyTmF2T3B0aW9uIiwidGFza0Rlc3RpbmF0aW9uIiwiaGFuZGxlU3VidGFzayIsImluaXRMaXN0RHJvcGRvd24iLCJsaXN0RHJvcGRvd24iLCJvcHRpb24iLCJyZXF1aXJlZEFyZ3MiLCJyZXF1aXJlZCIsImFyZ3MiLCJUeXBlRXJyb3IiLCJ0b0RhdGUiLCJhcmd1bWVudCIsImFyZ3VtZW50cyIsImFyZ1N0ciIsIk9iamVjdCIsInByb3RvdHlwZSIsImNhbGwiLCJEYXRlIiwiZ2V0VGltZSIsImNvbnNvbGUiLCJ3YXJuIiwic3RhY2siLCJOYU4iLCJNYXRoIiwicG93IiwibWlsbGlzZWNvbmRzSW5Ib3VyIiwidG9JbnRlZ2VyIiwiZGlydHlOdW1iZXIiLCJudW1iZXIiLCJOdW1iZXIiLCJpc05hTiIsImNlaWwiLCJmbG9vciIsInBhcnNlSVNPIiwiZGlydHlPcHRpb25zIiwiYWRkaXRpb25hbERpZ2l0cyIsIlJhbmdlRXJyb3IiLCJkYXRlIiwiZGF0ZVN0cmluZ3MiLCJzcGxpdERhdGVTdHJpbmciLCJwYXJzZVllYXJSZXN1bHQiLCJwYXJzZVllYXIiLCJwYXJzZURhdGUiLCJyZXN0RGF0ZVN0cmluZyIsInllYXIiLCJvZmZzZXQiLCJ0aW1lc3RhbXAiLCJ0aW1lIiwicGFyc2VUaW1lIiwidGltZXpvbmUiLCJkaXJ0eURhdGUiLCJzZXRGdWxsWWVhciIsImdldFVUQ0Z1bGxZZWFyIiwiZ2V0VVRDTW9udGgiLCJnZXRVVENEYXRlIiwic2V0SG91cnMiLCJnZXRVVENIb3VycyIsImdldFVUQ01pbnV0ZXMiLCJnZXRVVENTZWNvbmRzIiwiZ2V0VVRDTWlsbGlzZWNvbmRzIiwicGFyc2VUaW1lem9uZSIsInBhdHRlcm5zIiwiZGF0ZVRpbWVEZWxpbWl0ZXIiLCJ0aW1lWm9uZURlbGltaXRlciIsImRhdGVSZWdleCIsInRpbWVSZWdleCIsInRpbWV6b25lUmVnZXgiLCJkYXRlU3RyaW5nIiwidGltZVN0cmluZyIsImFycmF5Iiwic3BsaXQiLCJzdWJzdHIiLCJ0b2tlbiIsImV4ZWMiLCJyZWdleCIsIlJlZ0V4cCIsImNhcHR1cmVzIiwibWF0Y2giLCJwYXJzZUludCIsImNlbnR1cnkiLCJpc1dlZWtEYXRlIiwiZGF5T2ZZZWFyIiwicGFyc2VEYXRlVW5pdCIsIm1vbnRoIiwiZGF5Iiwid2VlayIsImRheU9mV2VlayIsIl95ZWFyIiwidmFsaWRhdGVXZWVrRGF0ZSIsImlzb1dlZWtZZWFyIiwic2V0VVRDRnVsbFllYXIiLCJkaWZmIiwiZ2V0VVRDRGF5Iiwic2V0VVRDRGF0ZSIsImRheU9mSVNPV2Vla1llYXIiLCJkYXlzSW5Nb250aHMiLCJpc0xlYXBZZWFySW5kZXgiLCJ2YWxpZGF0ZURhdGUiLCJ2YWxpZGF0ZURheU9mWWVhckRhdGUiLCJtYXgiLCJob3VycyIsInBhcnNlVGltZVVuaXQiLCJtaW51dGVzIiwic2Vjb25kcyIsInZhbGlkYXRlVGltZSIsInBhcnNlRmxvYXQiLCJ0aW1lem9uZVN0cmluZyIsInNpZ24iLCJfaG91cnMiLCJ2YWxpZGF0ZVRpbWV6b25lIiwiaXNCZWZvcmUiLCJkaXJ0eURhdGVUb0NvbXBhcmUiLCJkYXRlVG9Db21wYXJlIiwiZW5kT2ZXZWVrIiwibG9jYWxlIiwibG9jYWxlV2Vla1N0YXJ0c09uIiwid2Vla1N0YXJ0c09uIiwiZGVmYXVsdFdlZWtTdGFydHNPbiIsImdldERheSIsInNldERhdGUiLCJnZXREYXRlIiwidGFza0FycmF5IiwidGFza0NvbnRhaW5lciIsInRhc2tUZW1wbGF0ZSIsInRhc2tDbG9uZSIsImNoZWNrYm94ZXMiLCJ0YXNrRWxlbWVudCIsImhhbmRsZVF1aWNrQWRkIiwicXVpY2tBZGRUYXNrIiwiYXJyYXlJbmRleCIsInRhc2tJbkFsbFRhc2tzIiwiYWxsVGFza3NJbmRleCIsImdldEFjdGl2ZVRhc2siLCJ0YXNrVGl0bGUiLCJhY3RpdmVUYXNrIiwiZ2V0QWxsVGFza3MiLCJpdGVyYXRvciIsInZhbHVlcyIsImdldFRvZGF5VGFza3MiLCJ0b2RheVRhc2tzIiwiZW5kT2ZEYXkiLCJub3ciLCJnZXRXZWVrVGFza3MiLCJ0b2RheSIsIndlZWtUYXNrcyIsImVuZE9mVGhpc1dlZWsiLCJjbGVhckNvbXBsZXRlZCIsImluaXRMaXN0Q2xvbmUiLCJsaXN0Q2FyZFRlbXBsYXRlIiwibGlzdENhcmRDbG9uZSIsImxpc3REZXNjcmlwdGlvbiIsImZvY3VzIiwiYWRkTGlzdExpc3RlbmVycyIsImNhbmNlbExpc3QiLCJzdWJtaXRMaXN0IiwiaW5pdFRvZG9DbG9uZSIsInRvZG9DYXJkVGVtcGxhdGUiLCJ0b2RvQ2FyZENsb25lIiwidG9kb0NhcmRDb250YWluZXIiLCJzdWJtaXRRdWlja0FkZCIsImNyZWF0ZU1lbnUiLCJlZGl0b3JDYXJkVGVtcGxhdGUiLCJlZGl0b3JDbG9uZSIsImVkaXRvckZvcm0iLCJhZGRFZGl0b3JMaXN0ZW5lcnMiLCJwcmlvcml0aWVzIiwiY3JlYXRlU3VidGFza0J1dHRvbiIsInJlbW92ZUNsaWNrZWRDbGFzcyIsIm9uY2UiLCJtZW51Q29udGFpbmVyIiwibWVudUJveCIsIm1lbnVJbWFnZSIsIkltYWdlIiwiaW5pdFBhZ2UiLCJ0YXNrQ2F0SWNvbkNvbnRhaW5lciIsInRhc2tDYXRJbWFnZSIsImdpdGh1Ykljb25Db250YWluZXIiLCJnaXRodWJJbWFnZSIsImNyZWF0ZVRhc2tCdXR0b24iLCJhZGRMaXN0QnV0dG9uIiwibmF2QWxsIiwibmF2VG9kYXkiLCJuYXZXZWVrIiwicmVuZGVyTWVzc2FnZSIsImFkZFBhZ2VMaXN0ZW5lcnMiLCJtZXNzYWdlIiwiZGl2Iiwib25sb2FkIl0sInNvdXJjZVJvb3QiOiIifQ==